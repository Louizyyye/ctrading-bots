<UserControl
    x:Class="Trading.UI.Demo.Views.CreateOrderView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:Trading.UI.Demo.Behaviors"
    xmlns:controls="clr-namespace:Trading.UI.Demo.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:enums="clr-namespace:Trading.UI.Demo.Enums"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:markupExtensions="clr-namespace:Trading.UI.Demo.MarkupExtensions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:openApi="clr-namespace:;assembly=OpenAPI.Net"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="450"
    d:DesignWidth="800"
    dialog:DialogParticipation.Register="{Binding}"
    mc:Ignorable="d">
    <prism:Dialog.WindowStyle>
        <Style BasedOn="{StaticResource DialogStyle}" TargetType="mah:MetroWindow">
            <Setter Property="Height" Value="450" />
            <Setter Property="Width" Value="500" />
        </Style>
    </prism:Dialog.WindowStyle>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Path=LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding Path=UnloadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/CreateOrderViewResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TabControl Grid.Row="0" TabStripPlacement="Left">
            <TabItem DataContext="{Binding Path=MarketOrderModel}" Header="Market">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />

                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <mah:MetroHeader
                            Grid.Row="0"
                            Grid.Column="0"
                            MinWidth="120"
                            Margin="5"
                            Header="Symbols">
                            <ComboBox ItemsSource="{Binding Path=Symbols, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=Symbol, Mode=TwoWay}" />
                        </mah:MetroHeader>

                        <mah:MetroHeader
                            Grid.Row="0"
                            Grid.Column="1"
                            MinWidth="100"
                            Margin="5"
                            Header="Trade Side">
                            <ComboBox ItemsSource="{Binding Source={markupExtensions:EnumBindingMarkup {x:Type openApi:ProtoOATradeSide}}}" SelectedItem="{Binding Path=TradeSide, Mode=TwoWay}" />
                        </mah:MetroHeader>

                        <mah:MetroHeader
                            Grid.Row="1"
                            Grid.Column="0"
                            MinWidth="100"
                            Margin="5">
                            <mah:MetroHeader.Header>
                                <TextBlock Margin="0,5" Text="Volume (Lots)" />
                            </mah:MetroHeader.Header>
                            <mah:NumericUpDown
                                Height="{Binding Path=ActualHeight, ElementName=MarketRangeNumericUpDown}"
                                Maximum="{Binding Path=MaxVolumeInLots}"
                                Minimum="{Binding Path=MinVolumeInLots}"
                                NumericInputMode="Decimal"
                                Value="{Binding Path=VolumeInLots, Mode=TwoWay}" />
                        </mah:MetroHeader>

                        <mah:MetroHeader
                            Grid.Row="1"
                            Grid.Column="1"
                            MinWidth="100"
                            Margin="5">
                            <mah:MetroHeader.Header>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Margin="0,5" IsChecked="{Binding Path=IsMarketRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBlock Margin="5" Text="Market Range" />
                                </StackPanel>
                            </mah:MetroHeader.Header>
                            <mah:NumericUpDown
                                x:Name="MarketRangeNumericUpDown"
                                HideUpDownButtons="True"
                                IsEnabled="{Binding Path=IsMarketRange, UpdateSourceTrigger=PropertyChanged}"
                                NumericInputMode="Decimal"
                                ParsingNumberStyle="AllowDecimalPoint"
                                Value="{Binding Path=MarketRange, Mode=TwoWay}" />
                        </mah:MetroHeader>

                        <mah:MetroHeader
                            Grid.Row="2"
                            Grid.Column="0"
                            Margin="5">
                            <mah:MetroHeader.Header>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Margin="0,5" IsChecked="{Binding Path=IsStopLossEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBlock Margin="5" Text="Stop Loss (Pips)" />
                                </StackPanel>
                            </mah:MetroHeader.Header>
                            <StackPanel IsEnabled="{Binding Path=IsStopLossEnabled, UpdateSourceTrigger=PropertyChanged}" Orientation="Vertical">
                                <mah:NumericUpDown
                                    x:Name="StopLossInPipsNumericUpDown"
                                    HideUpDownButtons="True"
                                    NumericInputMode="Decimal"
                                    ParsingNumberStyle="AllowDecimalPoint"
                                    Value="{Binding Path=StopLossInPips, Mode=TwoWay}" />

                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Margin="0,5" IsChecked="{Binding Path=IsTrailingStopLossEnabled, Mode=TwoWay}" />
                                    <TextBlock Margin="5" Text="Trailing Stop" />
                                </StackPanel>
                            </StackPanel>
                        </mah:MetroHeader>

                        <mah:MetroHeader
                            Grid.Row="2"
                            Grid.Column="1"
                            Margin="5">
                            <mah:MetroHeader.Header>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Margin="0,5" IsChecked="{Binding Path=IsTakeProfitEnabled, Mode=TwoWay}" />
                                    <TextBlock Margin="5" Text="Take Profit (Pips)" />
                                </StackPanel>
                            </mah:MetroHeader.Header>
                            <mah:NumericUpDown
                                Height="{Binding Path=ActualHeight, ElementName=StopLossInPipsNumericUpDown}"
                                VerticalAlignment="Top"
                                HideUpDownButtons="True"
                                IsEnabled="{Binding Path=IsTakeProfitEnabled, UpdateSourceTrigger=PropertyChanged}"
                                NumericInputMode="Decimal"
                                ParsingNumberStyle="AllowDecimalPoint"
                                Value="{Binding Path=TakeProfitInPips, Mode=TwoWay}" />
                        </mah:MetroHeader>
                    </Grid>

                    <mah:MetroHeader
                        Grid.Row="1"
                        Margin="5"
                        Header="Comment">
                        <TextBox Text="{Binding Path=Comment, Mode=TwoWay}" />
                    </mah:MetroHeader>

                    <mah:MetroHeader
                        Grid.Row="2"
                        Margin="5"
                        Header="Label">
                        <TextBox Text="{Binding Path=Label, Mode=TwoWay}" />
                    </mah:MetroHeader>
                </Grid>
            </TabItem>

            <TabItem Header="Pending" />


        </TabControl>

        <StackPanel
            Grid.Row="1"
            Margin="5"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                Margin="3"
                Command="{Binding Path=PlaceOrderCommand}"
                Content="Place Order"
                Style="{DynamicResource MahApps.Styles.Button.Dialogs.Accent}"
                Visibility="{Binding Path=IsModifying, Converter={StaticResource BoolToOppositeVisibilityConverter}}" />
            <Button
                Margin="3"
                Command="{Binding Path=ModifyOrderCommand}"
                Content="Modify Order"
                Style="{DynamicResource MahApps.Styles.Button.Dialogs.Accent}"
                Visibility="{Binding Path=IsModifying, Converter={StaticResource BoolToVisibilityConverter}}" />
        </StackPanel>
    </Grid>
</UserControl>