// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OpenApiMessages.proto
// </auto-generated>

namespace ProtoOA.Request
{
  using Enums;
  using Model;
  using OpenAPI.Net.Helpers;
  #pragma warning disable 1591, 0612, 3021
  #region Designer generated code
  
  using pb = global::Google.Protobuf;
  using pbc = global::Google.Protobuf.Collections;
  using pbr = global::Google.Protobuf.Reflection;
  using scg = global::System.Collections.Generic;
  /// <summary>Holder for reflection information generated from OpenApiMessages.proto</summary>
  public static partial class OpenApiMessagesReflection {
  
    #region Descriptor
    /// <summary>File descriptor for OpenApiMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;
  
    static OpenApiMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVPcGVuQXBpTWVzc2FnZXMucHJvdG8aGk9wZW5BcGlNb2RlbE1lc3NhZ2Vz",
            "LnByb3RvIowBChlQcm90b09BQXBwbGljYXRpb25BdXRoUmVxEkcKC3BheWxv",
            "YWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOh1QUk9UT19PQV9B",
            "UFBMSUNBVElPTl9BVVRIX1JFURIQCghjbGllbnRJZBgCIAIoCRIUCgxjbGll",
            "bnRTZWNyZXQYAyACKAkiZAoZUHJvdG9PQUFwcGxpY2F0aW9uQXV0aFJlcxJH",
            "CgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZTodUFJP",
            "VE9fT0FfQVBQTElDQVRJT05fQVVUSF9SRVMijgEKFVByb3RvT0FBY2NvdW50",
            "QXV0aFJlcRJDCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2Fk",
            "VHlwZToZUFJPVE9fT0FfQUNDT1VOVF9BVVRIX1JFURIbChNjdGlkVHJhZGVy",
            "QWNjb3VudElkGAIgAigDEhMKC2FjY2Vzc1Rva2VuGAMgAigJInkKFVByb3Rv",
            "T0FBY2NvdW50QXV0aFJlcxJDCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3Rv",
            "T0FQYXlsb2FkVHlwZToZUFJPVE9fT0FfQUNDT1VOVF9BVVRIX1JFUxIbChNj",
            "dGlkVHJhZGVyQWNjb3VudElkGAIgAigDIrUBCg9Qcm90b09BRXJyb3JSZXMS",
            "PAoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6ElBS",
            "T1RPX09BX0VSUk9SX1JFUxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgASgD",
            "EhEKCWVycm9yQ29kZRgDIAIoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRIfChdt",
            "YWludGVuYW5jZUVuZFRpbWVzdGFtcBgFIAEoAyJ6ChxQcm90b09BQ2xpZW50",
            "RGlzY29ubmVjdEV2ZW50EkoKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9P",
            "QVBheWxvYWRUeXBlOiBQUk9UT19PQV9DTElFTlRfRElTQ09OTkVDVF9FVkVO",
            "VBIOCgZyZWFzb24YAiABKAkiqQEKJFByb3RvT0FBY2NvdW50c1Rva2VuSW52",
            "YWxpZGF0ZWRFdmVudBJTCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQ",
            "YXlsb2FkVHlwZTopUFJPVE9fT0FfQUNDT1VOVFNfVE9LRU5fSU5WQUxJREFU",
            "RURfRVZFTlQSHAoUY3RpZFRyYWRlckFjY291bnRJZHMYAiADKAMSDgoGcmVh",
            "c29uGAMgASgJIlMKEVByb3RvT0FWZXJzaW9uUmVxEj4KC3BheWxvYWRUeXBl",
            "GAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhRQUk9UT19PQV9WRVJTSU9O",
            "X1JFUSJkChFQcm90b09BVmVyc2lvblJlcxI+CgtwYXlsb2FkVHlwZRgBIAEo",
            "DjITLlByb3RvT0FQYXlsb2FkVHlwZToUUFJPVE9fT0FfVkVSU0lPTl9SRVMS",
            "DwoHdmVyc2lvbhgCIAIoCSKxBQoSUHJvdG9PQU5ld09yZGVyUmVxEkAKC3Bh",
            "eWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhZQUk9UT19P",
            "QV9ORVdfT1JERVJfUkVREhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMS",
            "EAoIc3ltYm9sSWQYAyACKAMSJAoJb3JkZXJUeXBlGAQgAigOMhEuUHJvdG9P",
            "QU9yZGVyVHlwZRIkCgl0cmFkZVNpZGUYBSACKA4yES5Qcm90b09BVHJhZGVT",
            "aWRlEg4KBnZvbHVtZRgGIAIoAxISCgpsaW1pdFByaWNlGAcgASgBEhEKCXN0",
            "b3BQcmljZRgIIAEoARI6Cgt0aW1lSW5Gb3JjZRgJIAEoDjITLlByb3RvT0FU",
            "aW1lSW5Gb3JjZToQR09PRF9USUxMX0NBTkNFTBIbChNleHBpcmF0aW9uVGlt",
            "ZXN0YW1wGAogASgDEhAKCHN0b3BMb3NzGAsgASgBEhIKCnRha2VQcm9maXQY",
            "DCABKAESDwoHY29tbWVudBgNIAEoCRIZChFiYXNlU2xpcHBhZ2VQcmljZRgO",
            "IAEoARIYChBzbGlwcGFnZUluUG9pbnRzGA8gASgFEg0KBWxhYmVsGBAgASgJ",
            "EhIKCnBvc2l0aW9uSWQYESABKAMSFQoNY2xpZW50T3JkZXJJZBgSIAEoCRIY",
            "ChByZWxhdGl2ZVN0b3BMb3NzGBMgASgDEhoKEnJlbGF0aXZlVGFrZVByb2Zp",
            "dBgUIAEoAxIaChJndWFyYW50ZWVkU3RvcExvc3MYFSABKAgSGAoQdHJhaWxp",
            "bmdTdG9wTG9zcxgWIAEoCBI8ChFzdG9wVHJpZ2dlck1ldGhvZBgXIAEoDjIa",
            "LlByb3RvT0FPcmRlclRyaWdnZXJNZXRob2Q6BVRSQURFIpwDChVQcm90b09B",
            "RXhlY3V0aW9uRXZlbnQSQgoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09B",
            "UGF5bG9hZFR5cGU6GFBST1RPX09BX0VYRUNVVElPTl9FVkVOVBIbChNjdGlk",
            "VHJhZGVyQWNjb3VudElkGAIgAigDEiwKDWV4ZWN1dGlvblR5cGUYAyACKA4y",
            "FS5Qcm90b09BRXhlY3V0aW9uVHlwZRIiCghwb3NpdGlvbhgEIAEoCzIQLlBy",
            "b3RvT0FQb3NpdGlvbhIcCgVvcmRlchgFIAEoCzINLlByb3RvT0FPcmRlchIa",
            "CgRkZWFsGAYgASgLMgwuUHJvdG9PQURlYWwSOgoUYm9udXNEZXBvc2l0V2l0",
            "aGRyYXcYByABKAsyHC5Qcm90b09BQm9udXNEZXBvc2l0V2l0aGRyYXcSMAoP",
            "ZGVwb3NpdFdpdGhkcmF3GAggASgLMhcuUHJvdG9PQURlcG9zaXRXaXRoZHJh",
            "dxIRCgllcnJvckNvZGUYCSABKAkSFQoNaXNTZXJ2ZXJFdmVudBgKIAEoCCKK",
            "AQoVUHJvdG9PQUNhbmNlbE9yZGVyUmVxEkMKC3BheWxvYWRUeXBlGAEgASgO",
            "MhMuUHJvdG9PQVBheWxvYWRUeXBlOhlQUk9UT19PQV9DQU5DRUxfT1JERVJf",
            "UkVREhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSDwoHb3JkZXJJZBgD",
            "IAIoAyLGAwoUUHJvdG9PQUFtZW5kT3JkZXJSZXESQgoLcGF5bG9hZFR5cGUY",
            "ASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6GFBST1RPX09BX0FNRU5EX09S",
            "REVSX1JFURIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDEg8KB29yZGVy",
            "SWQYAyACKAMSDgoGdm9sdW1lGAQgASgDEhIKCmxpbWl0UHJpY2UYBSABKAES",
            "EQoJc3RvcFByaWNlGAYgASgBEhsKE2V4cGlyYXRpb25UaW1lc3RhbXAYByAB",
            "KAMSEAoIc3RvcExvc3MYCCABKAESEgoKdGFrZVByb2ZpdBgJIAEoARIYChBz",
            "bGlwcGFnZUluUG9pbnRzGAogASgFEhgKEHJlbGF0aXZlU3RvcExvc3MYCyAB",
            "KAMSGgoScmVsYXRpdmVUYWtlUHJvZml0GAwgASgDEhoKEmd1YXJhbnRlZWRT",
            "dG9wTG9zcxgNIAEoCBIYChB0cmFpbGluZ1N0b3BMb3NzGA4gASgIEjwKEXN0",
            "b3BUcmlnZ2VyTWV0aG9kGA8gASgOMhouUHJvdG9PQU9yZGVyVHJpZ2dlck1l",
            "dGhvZDoFVFJBREUiuAIKG1Byb3RvT0FBbWVuZFBvc2l0aW9uU0xUUFJlcRJK",
            "CgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZTogUFJP",
            "VE9fT0FfQU1FTkRfUE9TSVRJT05fU0xUUF9SRVESGwoTY3RpZFRyYWRlckFj",
            "Y291bnRJZBgCIAIoAxISCgpwb3NpdGlvbklkGAMgAigDEhAKCHN0b3BMb3Nz",
            "GAQgASgBEhIKCnRha2VQcm9maXQYBSABKAESGgoSZ3VhcmFudGVlZFN0b3BM",
            "b3NzGAcgASgIEhgKEHRyYWlsaW5nU3RvcExvc3MYCCABKAgSQAoVc3RvcExv",
            "c3NUcmlnZ2VyTWV0aG9kGAkgASgOMhouUHJvdG9PQU9yZGVyVHJpZ2dlck1l",
            "dGhvZDoFVFJBREUioQEKF1Byb3RvT0FDbG9zZVBvc2l0aW9uUmVxEkUKC3Bh",
            "eWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhtQUk9UT19P",
            "QV9DTE9TRV9QT1NJVElPTl9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgC",
            "IAIoAxISCgpwb3NpdGlvbklkGAMgAigDEg4KBnZvbHVtZRgEIAIoAyLiAQod",
            "UHJvdG9PQVRyYWlsaW5nU0xDaGFuZ2VkRXZlbnQSTAoLcGF5bG9hZFR5cGUY",
            "ASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6IlBST1RPX09BX1RSQUlMSU5H",
            "X1NMX0NIQU5HRURfRVZFTlQSGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIo",
            "AxISCgpwb3NpdGlvbklkGAMgAigDEg8KB29yZGVySWQYBCACKAMSEQoJc3Rv",
            "cFByaWNlGAUgAigBEh4KFnV0Y0xhc3RVcGRhdGVUaW1lc3RhbXAYBiACKAMi",
            "dQoTUHJvdG9PQUFzc2V0TGlzdFJlcRJBCgtwYXlsb2FkVHlwZRgBIAEoDjIT",
            "LlByb3RvT0FQYXlsb2FkVHlwZToXUFJPVE9fT0FfQVNTRVRfTElTVF9SRVES",
            "GwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAyKTAQoTUHJvdG9PQUFzc2V0",
            "TGlzdFJlcxJBCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2Fk",
            "VHlwZToXUFJPVE9fT0FfQVNTRVRfTElTVF9SRVMSGwoTY3RpZFRyYWRlckFj",
            "Y291bnRJZBgCIAIoAxIcCgVhc3NldBgDIAMoCzINLlByb3RvT0FBc3NldCKg",
            "AQoVUHJvdG9PQVN5bWJvbHNMaXN0UmVxEkMKC3BheWxvYWRUeXBlGAEgASgO",
            "MhMuUHJvdG9PQVBheWxvYWRUeXBlOhlQUk9UT19PQV9TWU1CT0xTX0xJU1Rf",
            "UkVREhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSJQoWaW5jbHVkZUFy",
            "Y2hpdmVkU3ltYm9scxgDIAEoCDoFZmFsc2UizgEKFVByb3RvT0FTeW1ib2xz",
            "TGlzdFJlcxJDCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2Fk",
            "VHlwZToZUFJPVE9fT0FfU1lNQk9MU19MSVNUX1JFUxIbChNjdGlkVHJhZGVy",
            "QWNjb3VudElkGAIgAigDEiMKBnN5bWJvbBgDIAMoCzITLlByb3RvT0FMaWdo",
            "dFN5bWJvbBIuCg5hcmNoaXZlZFN5bWJvbBgEIAMoCzIWLlByb3RvT0FBcmNo",
            "aXZlZFN5bWJvbCKKAQoUUHJvdG9PQVN5bWJvbEJ5SWRSZXESQwoLcGF5bG9h",
            "ZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6GVBST1RPX09BX1NZ",
            "TUJPTF9CWV9JRF9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAxIQ",
            "CghzeW1ib2xJZBgDIAMoAyLIAQoUUHJvdG9PQVN5bWJvbEJ5SWRSZXMSQwoL",
            "cGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6GVBST1RP",
            "X09BX1NZTUJPTF9CWV9JRF9SRVMSGwoTY3RpZFRyYWRlckFjY291bnRJZBgC",
            "IAIoAxIeCgZzeW1ib2wYAyADKAsyDi5Qcm90b09BU3ltYm9sEi4KDmFyY2hp",
            "dmVkU3ltYm9sGAQgAygLMhYuUHJvdG9PQUFyY2hpdmVkU3ltYm9sIrcBCh5Q",
            "cm90b09BU3ltYm9sc0ZvckNvbnZlcnNpb25SZXESTQoLcGF5bG9hZFR5cGUY",
            "ASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6I1BST1RPX09BX1NZTUJPTFNf",
            "Rk9SX0NPTlZFUlNJT05fUkVREhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiAC",
            "KAMSFAoMZmlyc3RBc3NldElkGAMgAigDEhMKC2xhc3RBc3NldElkGAQgAigD",
            "IrEBCh5Qcm90b09BU3ltYm9sc0ZvckNvbnZlcnNpb25SZXMSTQoLcGF5bG9h",
            "ZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6I1BST1RPX09BX1NZ",
            "TUJPTFNfRk9SX0NPTlZFUlNJT05fUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50",
            "SWQYAiACKAMSIwoGc3ltYm9sGAMgAygLMhMuUHJvdG9PQUxpZ2h0U3ltYm9s",
            "IpMBChlQcm90b09BU3ltYm9sQ2hhbmdlZEV2ZW50EkcKC3BheWxvYWRUeXBl",
            "GAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOh1QUk9UT19PQV9TWU1CT0xf",
            "Q0hBTkdFRF9FVkVOVBIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhAK",
            "CHN5bWJvbElkGAMgAygDIoABChhQcm90b09BQXNzZXRDbGFzc0xpc3RSZXES",
            "RwoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6HVBS",
            "T1RPX09BX0FTU0VUX0NMQVNTX0xJU1RfUkVREhsKE2N0aWRUcmFkZXJBY2Nv",
            "dW50SWQYAiACKAMiqAEKGFByb3RvT0FBc3NldENsYXNzTGlzdFJlcxJHCgtw",
            "YXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZTodUFJPVE9f",
            "T0FfQVNTRVRfQ0xBU1NfTElTVF9SRVMSGwoTY3RpZFRyYWRlckFjY291bnRJ",
            "ZBgCIAIoAxImCgphc3NldENsYXNzGAMgAygLMhIuUHJvdG9PQUFzc2V0Q2xh",
            "c3MibgoQUHJvdG9PQVRyYWRlclJlcRI9CgtwYXlsb2FkVHlwZRgBIAEoDjIT",
            "LlByb3RvT0FQYXlsb2FkVHlwZToTUFJPVE9fT0FfVFJBREVSX1JFURIbChNj",
            "dGlkVHJhZGVyQWNjb3VudElkGAIgAigDIo4BChBQcm90b09BVHJhZGVyUmVz",
            "Ej0KC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhNQ",
            "Uk9UT19PQV9UUkFERVJfUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiAC",
            "KAMSHgoGdHJhZGVyGAMgAigLMg4uUHJvdG9PQVRyYWRlciKgAQoZUHJvdG9P",
            "QVRyYWRlclVwZGF0ZWRFdmVudBJGCgtwYXlsb2FkVHlwZRgBIAEoDjITLlBy",
            "b3RvT0FQYXlsb2FkVHlwZTocUFJPVE9fT0FfVFJBREVSX1VQREFURV9FVkVO",
            "VBIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDEh4KBnRyYWRlchgDIAIo",
            "CzIOLlByb3RvT0FUcmFkZXIidAoTUHJvdG9PQVJlY29uY2lsZVJlcRJACgtw",
            "YXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZToWUFJPVE9f",
            "T0FfUkVDT05DSUxFX1JFURIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigD",
            "IrYBChNQcm90b09BUmVjb25jaWxlUmVzEkAKC3BheWxvYWRUeXBlGAEgASgO",
            "MhMuUHJvdG9PQVBheWxvYWRUeXBlOhZQUk9UT19PQV9SRUNPTkNJTEVfUkVT",
            "EhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSIgoIcG9zaXRpb24YAyAD",
            "KAsyEC5Qcm90b09BUG9zaXRpb24SHAoFb3JkZXIYBCADKAsyDS5Qcm90b09B",
            "T3JkZXIiyAEKFlByb3RvT0FPcmRlckVycm9yRXZlbnQSRAoLcGF5bG9hZFR5",
            "cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6GlBST1RPX09BX09SREVS",
            "X0VSUk9SX0VWRU5UEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYBSACKAMSEQoJ",
            "ZXJyb3JDb2RlGAIgAigJEg8KB29yZGVySWQYAyABKAMSEgoKcG9zaXRpb25J",
            "ZBgGIAEoAxITCgtkZXNjcmlwdGlvbhgHIAEoCSKwAQoSUHJvdG9PQURlYWxM",
            "aXN0UmVxEkAKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRU",
            "eXBlOhZQUk9UT19PQV9ERUFMX0xJU1RfUkVREhsKE2N0aWRUcmFkZXJBY2Nv",
            "dW50SWQYAiACKAMSFQoNZnJvbVRpbWVzdGFtcBgDIAIoAxITCgt0b1RpbWVz",
            "dGFtcBgEIAIoAxIPCgdtYXhSb3dzGAUgASgFIqABChJQcm90b09BRGVhbExp",
            "c3RSZXMSQAoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5",
            "cGU6FlBST1RPX09BX0RFQUxfTElTVF9SRVMSGwoTY3RpZFRyYWRlckFjY291",
            "bnRJZBgCIAIoAxIaCgRkZWFsGAMgAygLMgwuUHJvdG9PQURlYWwSDwoHaGFz",
            "TW9yZRgEIAIoCCKhAQoTUHJvdG9PQU9yZGVyTGlzdFJlcRJBCgtwYXlsb2Fk",
            "VHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZToXUFJPVE9fT0FfT1JE",
            "RVJfTElTVF9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAxIVCg1m",
            "cm9tVGltZXN0YW1wGAMgAigDEhMKC3RvVGltZXN0YW1wGAQgAigDIqQBChNQ",
            "cm90b09BT3JkZXJMaXN0UmVzEkEKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJv",
            "dG9PQVBheWxvYWRUeXBlOhdQUk9UT19PQV9PUkRFUl9MSVNUX1JFUxIbChNj",
            "dGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhwKBW9yZGVyGAMgAygLMg0uUHJv",
            "dG9PQU9yZGVyEg8KB2hhc01vcmUYBCACKAgioQEKGFByb3RvT0FFeHBlY3Rl",
            "ZE1hcmdpblJlcRJGCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXls",
            "b2FkVHlwZTocUFJPVE9fT0FfRVhQRUNURURfTUFSR0lOX1JFURIbChNjdGlk",
            "VHJhZGVyQWNjb3VudElkGAIgAigDEhAKCHN5bWJvbElkGAMgAigDEg4KBnZv",
            "bHVtZRgEIAMoAyK8AQoYUHJvdG9PQUV4cGVjdGVkTWFyZ2luUmVzEkYKC3Bh",
            "eWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhxQUk9UT19P",
            "QV9FWFBFQ1RFRF9NQVJHSU5fUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQY",
            "AiACKAMSJgoGbWFyZ2luGAMgAygLMhYuUHJvdG9PQUV4cGVjdGVkTWFyZ2lu",
            "EhMKC21vbmV5RGlnaXRzGAQgASgNIr4BChlQcm90b09BTWFyZ2luQ2hhbmdl",
            "ZEV2ZW50EkcKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRU",
            "eXBlOh1QUk9UT19PQV9NQVJHSU5fQ0hBTkdFRF9FVkVOVBIbChNjdGlkVHJh",
            "ZGVyQWNjb3VudElkGAIgAigDEhIKCnBvc2l0aW9uSWQYAyACKAQSEgoKdXNl",
            "ZE1hcmdpbhgEIAIoBBITCgttb25leURpZ2l0cxgFIAEoDSK3AQodUHJvdG9P",
            "QUNhc2hGbG93SGlzdG9yeUxpc3RSZXESTQoLcGF5bG9hZFR5cGUYASABKA4y",
            "Ey5Qcm90b09BUGF5bG9hZFR5cGU6I1BST1RPX09BX0NBU0hfRkxPV19ISVNU",
            "T1JZX0xJU1RfUkVREhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSFQoN",
            "ZnJvbVRpbWVzdGFtcBgDIAIoAxITCgt0b1RpbWVzdGFtcBgEIAIoAyK9AQod",
            "UHJvdG9PQUNhc2hGbG93SGlzdG9yeUxpc3RSZXMSTQoLcGF5bG9hZFR5cGUY",
            "ASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6I1BST1RPX09BX0NBU0hfRkxP",
            "V19ISVNUT1JZX0xJU1RfUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiAC",
            "KAMSMAoPZGVwb3NpdFdpdGhkcmF3GAMgAygLMhcuUHJvdG9PQURlcG9zaXRX",
            "aXRoZHJhdyKRAQolUHJvdG9PQUdldEFjY291bnRMaXN0QnlBY2Nlc3NUb2tl",
            "blJlcRJTCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlw",
            "ZTopUFJPVE9fT0FfR0VUX0FDQ09VTlRTX0JZX0FDQ0VTU19UT0tFTl9SRVES",
            "EwoLYWNjZXNzVG9rZW4YAiACKAki/wEKJVByb3RvT0FHZXRBY2NvdW50TGlz",
            "dEJ5QWNjZXNzVG9rZW5SZXMSUwoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90",
            "b09BUGF5bG9hZFR5cGU6KVBST1RPX09BX0dFVF9BQ0NPVU5UU19CWV9BQ0NF",
            "U1NfVE9LRU5fUkVTEhMKC2FjY2Vzc1Rva2VuGAIgAigJEjYKD3Blcm1pc3Np",
            "b25TY29wZRgDIAEoDjIdLlByb3RvT0FDbGllbnRQZXJtaXNzaW9uU2NvcGUS",
            "NAoRY3RpZFRyYWRlckFjY291bnQYBCADKAsyGS5Qcm90b09BQ3RpZFRyYWRl",
            "ckFjY291bnQidAoWUHJvdG9PQVJlZnJlc2hUb2tlblJlcRJECgtwYXlsb2Fk",
            "VHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZToaUFJPVE9fT0FfUkVG",
            "UkVTSF9UT0tFTl9SRVESFAoMcmVmcmVzaFRva2VuGAIgAigJIq8BChZQcm90",
            "b09BUmVmcmVzaFRva2VuUmVzEkQKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJv",
            "dG9PQVBheWxvYWRUeXBlOhpQUk9UT19PQV9SRUZSRVNIX1RPS0VOX1JFUxIT",
            "CgthY2Nlc3NUb2tlbhgCIAIoCRIRCgl0b2tlblR5cGUYAyACKAkSEQoJZXhw",
            "aXJlc0luGAQgAigDEhQKDHJlZnJlc2hUb2tlbhgFIAIoCSKzAQoYUHJvdG9P",
            "QVN1YnNjcmliZVNwb3RzUmVxEkYKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJv",
            "dG9PQVBheWxvYWRUeXBlOhxQUk9UT19PQV9TVUJTQ1JJQkVfU1BPVFNfUkVR",
            "EhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSEAoIc3ltYm9sSWQYAyAD",
            "KAMSIAoYc3Vic2NyaWJlVG9TcG90VGltZXN0YW1wGAQgASgIIn8KGFByb3Rv",
            "T0FTdWJzY3JpYmVTcG90c1JlcxJGCgtwYXlsb2FkVHlwZRgBIAEoDjITLlBy",
            "b3RvT0FQYXlsb2FkVHlwZTocUFJPVE9fT0FfU1VCU0NSSUJFX1NQT1RTX1JF",
            "UxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDIpUBChpQcm90b09BVW5z",
            "dWJzY3JpYmVTcG90c1JlcRJICgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3Rv",
            "T0FQYXlsb2FkVHlwZToeUFJPVE9fT0FfVU5TVUJTQ1JJQkVfU1BPVFNfUkVR",
            "EhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSEAoIc3ltYm9sSWQYAyAD",
            "KAMigwEKGlByb3RvT0FVbnN1YnNjcmliZVNwb3RzUmVzEkgKC3BheWxvYWRU",
            "eXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOh5QUk9UT19PQV9VTlNV",
            "QlNDUklCRV9TUE9UU19SRVMSGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIo",
            "AyLnAQoQUHJvdG9PQVNwb3RFdmVudBI9CgtwYXlsb2FkVHlwZRgBIAEoDjIT",
            "LlByb3RvT0FQYXlsb2FkVHlwZToTUFJPVE9fT0FfU1BPVF9FVkVOVBIbChNj",
            "dGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhAKCHN5bWJvbElkGAMgAigDEgsK",
            "A2JpZBgEIAEoBBILCgNhc2sYBSABKAQSIgoIdHJlbmRiYXIYBiADKAsyEC5Q",
            "cm90b09BVHJlbmRiYXISFAoMc2Vzc2lvbkNsb3NlGAcgASgEEhEKCXRpbWVz",
            "dGFtcBgIIAEoAyLIAQofUHJvdG9PQVN1YnNjcmliZUxpdmVUcmVuZGJhclJl",
            "cRJOCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZTok",
            "UFJPVE9fT0FfU1VCU0NSSUJFX0xJVkVfVFJFTkRCQVJfUkVREhsKE2N0aWRU",
            "cmFkZXJBY2NvdW50SWQYAiACKAMSJgoGcGVyaW9kGAMgAigOMhYuUHJvdG9P",
            "QVRyZW5kYmFyUGVyaW9kEhAKCHN5bWJvbElkGAQgAigDIo4BCh9Qcm90b09B",
            "U3Vic2NyaWJlTGl2ZVRyZW5kYmFyUmVzEk4KC3BheWxvYWRUeXBlGAEgASgO",
            "MhMuUHJvdG9PQVBheWxvYWRUeXBlOiRQUk9UT19PQV9TVUJTQ1JJQkVfTElW",
            "RV9UUkVOREJBUl9SRVMSGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAyLM",
            "AQohUHJvdG9PQVVuc3Vic2NyaWJlTGl2ZVRyZW5kYmFyUmVxElAKC3BheWxv",
            "YWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOiZQUk9UT19PQV9V",
            "TlNVQlNDUklCRV9MSVZFX1RSRU5EQkFSX1JFURIbChNjdGlkVHJhZGVyQWNj",
            "b3VudElkGAIgAigDEiYKBnBlcmlvZBgDIAIoDjIWLlByb3RvT0FUcmVuZGJh",
            "clBlcmlvZBIQCghzeW1ib2xJZBgEIAIoAyKSAQohUHJvdG9PQVVuc3Vic2Ny",
            "aWJlTGl2ZVRyZW5kYmFyUmVzElAKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJv",
            "dG9PQVBheWxvYWRUeXBlOiZQUk9UT19PQV9VTlNVQlNDUklCRV9MSVZFX1RS",
            "RU5EQkFSX1JFUxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDIvABChZQ",
            "cm90b09BR2V0VHJlbmRiYXJzUmVxEkQKC3BheWxvYWRUeXBlGAEgASgOMhMu",
            "UHJvdG9PQVBheWxvYWRUeXBlOhpQUk9UT19PQV9HRVRfVFJFTkRCQVJTX1JF",
            "URIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhUKDWZyb21UaW1lc3Rh",
            "bXAYAyACKAMSEwoLdG9UaW1lc3RhbXAYBCACKAMSJgoGcGVyaW9kGAUgAigO",
            "MhYuUHJvdG9PQVRyZW5kYmFyUGVyaW9kEhAKCHN5bWJvbElkGAYgAigDEg0K",
            "BWNvdW50GAcgASgNIuwBChZQcm90b09BR2V0VHJlbmRiYXJzUmVzEkQKC3Bh",
            "eWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhpQUk9UT19P",
            "QV9HRVRfVFJFTkRCQVJTX1JFUxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIg",
            "AigDEiYKBnBlcmlvZBgDIAIoDjIWLlByb3RvT0FUcmVuZGJhclBlcmlvZBIR",
            "Cgl0aW1lc3RhbXAYBCACKAMSIgoIdHJlbmRiYXIYBSADKAsyEC5Qcm90b09B",
            "VHJlbmRiYXISEAoIc3ltYm9sSWQYBiABKAMi2AEKFVByb3RvT0FHZXRUaWNr",
            "RGF0YVJlcRJDCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2Fk",
            "VHlwZToZUFJPVE9fT0FfR0VUX1RJQ0tEQVRBX1JFURIbChNjdGlkVHJhZGVy",
            "QWNjb3VudElkGAIgAigDEhAKCHN5bWJvbElkGAMgAigDEh8KBHR5cGUYBCAC",
            "KA4yES5Qcm90b09BUXVvdGVUeXBlEhUKDWZyb21UaW1lc3RhbXAYBSACKAMS",
            "EwoLdG9UaW1lc3RhbXAYBiACKAMirgEKFVByb3RvT0FHZXRUaWNrRGF0YVJl",
            "cxJDCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZToZ",
            "UFJPVE9fT0FfR0VUX1RJQ0tEQVRBX1JFUxIbChNjdGlkVHJhZGVyQWNjb3Vu",
            "dElkGAIgAigDEiIKCHRpY2tEYXRhGAMgAygLMhAuUHJvdG9PQVRpY2tEYXRh",
            "Eg8KB2hhc01vcmUYBCACKAgiiAEKH1Byb3RvT0FHZXRDdGlkUHJvZmlsZUJ5",
            "VG9rZW5SZXESUAoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9h",
            "ZFR5cGU6JlBST1RPX09BX0dFVF9DVElEX1BST0ZJTEVfQllfVE9LRU5fUkVR",
            "EhMKC2FjY2Vzc1Rva2VuGAIgAigJIpkBCh9Qcm90b09BR2V0Q3RpZFByb2Zp",
            "bGVCeVRva2VuUmVzElAKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBh",
            "eWxvYWRUeXBlOiZQUk9UT19PQV9HRVRfQ1RJRF9QUk9GSUxFX0JZX1RPS0VO",
            "X1JFUxIkCgdwcm9maWxlGAIgAigLMhMuUHJvdG9PQUN0aWRQcm9maWxlIsQB",
            "ChFQcm90b09BRGVwdGhFdmVudBI+CgtwYXlsb2FkVHlwZRgBIAEoDjITLlBy",
            "b3RvT0FQYXlsb2FkVHlwZToUUFJPVE9fT0FfREVQVEhfRVZFTlQSGwoTY3Rp",
            "ZFRyYWRlckFjY291bnRJZBgCIAIoAxIQCghzeW1ib2xJZBgDIAIoBBIlCglu",
            "ZXdRdW90ZXMYBCADKAsyEi5Qcm90b09BRGVwdGhRdW90ZRIZCg1kZWxldGVk",
            "UXVvdGVzGAUgAygEQgIQASKeAQoeUHJvdG9PQVN1YnNjcmliZURlcHRoUXVv",
            "dGVzUmVxEk0KC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRU",
            "eXBlOiNQUk9UT19PQV9TVUJTQ1JJQkVfREVQVEhfUVVPVEVTX1JFURIbChNj",
            "dGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhAKCHN5bWJvbElkGAMgAygDIowB",
            "Ch5Qcm90b09BU3Vic2NyaWJlRGVwdGhRdW90ZXNSZXMSTQoLcGF5bG9hZFR5",
            "cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6I1BST1RPX09BX1NVQlND",
            "UklCRV9ERVBUSF9RVU9URVNfUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQY",
            "AiACKAMiogEKIFByb3RvT0FVbnN1YnNjcmliZURlcHRoUXVvdGVzUmVxEk8K",
            "C3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOiVQUk9U",
            "T19PQV9VTlNVQlNDUklCRV9ERVBUSF9RVU9URVNfUkVREhsKE2N0aWRUcmFk",
            "ZXJBY2NvdW50SWQYAiACKAMSEAoIc3ltYm9sSWQYAyADKAMikAEKIFByb3Rv",
            "T0FVbnN1YnNjcmliZURlcHRoUXVvdGVzUmVzEk8KC3BheWxvYWRUeXBlGAEg",
            "ASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOiVQUk9UT19PQV9VTlNVQlNDUklC",
            "RV9ERVBUSF9RVU9URVNfUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiAC",
            "KAMigwEKHFByb3RvT0FTeW1ib2xDYXRlZ29yeUxpc3RSZXESRgoLcGF5bG9h",
            "ZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6HFBST1RPX09BX1NZ",
            "TUJPTF9DQVRFR09SWV9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIo",
            "AyKzAQocUHJvdG9PQVN5bWJvbENhdGVnb3J5TGlzdFJlcxJGCgtwYXlsb2Fk",
            "VHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZTocUFJPVE9fT0FfU1lN",
            "Qk9MX0NBVEVHT1JZX1JFUxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigD",
            "Ei4KDnN5bWJvbENhdGVnb3J5GAMgAygLMhYuUHJvdG9PQVN5bWJvbENhdGVn",
            "b3J5In0KF1Byb3RvT0FBY2NvdW50TG9nb3V0UmVxEkUKC3BheWxvYWRUeXBl",
            "GAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhtQUk9UT19PQV9BQ0NPVU5U",
            "X0xPR09VVF9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAyJ9ChdQ",
            "cm90b09BQWNjb3VudExvZ291dFJlcxJFCgtwYXlsb2FkVHlwZRgBIAEoDjIT",
            "LlByb3RvT0FQYXlsb2FkVHlwZTobUFJPVE9fT0FfQUNDT1VOVF9MT0dPVVRf",
            "UkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMiiQEKHVByb3RvT0FB",
            "Y2NvdW50RGlzY29ubmVjdEV2ZW50EksKC3BheWxvYWRUeXBlGAEgASgOMhMu",
            "UHJvdG9PQVBheWxvYWRUeXBlOiFQUk9UT19PQV9BQ0NPVU5UX0RJU0NPTk5F",
            "Q1RfRVZFTlQSGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAyKAAQoYUHJv",
            "dG9PQU1hcmdpbkNhbGxMaXN0UmVxEkcKC3BheWxvYWRUeXBlGAEgASgOMhMu",
            "UHJvdG9PQVBheWxvYWRUeXBlOh1QUk9UT19PQV9NQVJHSU5fQ0FMTF9MSVNU",
            "X1JFURIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDIosBChhQcm90b09B",
            "TWFyZ2luQ2FsbExpc3RSZXMSRwoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90",
            "b09BUGF5bG9hZFR5cGU6HVBST1RPX09BX01BUkdJTl9DQUxMX0xJU1RfUkVT",
            "EiYKCm1hcmdpbkNhbGwYAiADKAsyEi5Qcm90b09BTWFyZ2luQ2FsbCKsAQoa",
            "UHJvdG9PQU1hcmdpbkNhbGxVcGRhdGVSZXESSQoLcGF5bG9hZFR5cGUYASAB",
            "KA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6H1BST1RPX09BX01BUkdJTl9DQUxM",
            "X1VQREFURV9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAxImCgpt",
            "YXJnaW5DYWxsGAMgAigLMhIuUHJvdG9PQU1hcmdpbkNhbGwiZwoaUHJvdG9P",
            "QU1hcmdpbkNhbGxVcGRhdGVSZXMSSQoLcGF5bG9hZFR5cGUYASABKA4yEy5Q",
            "cm90b09BUGF5bG9hZFR5cGU6H1BST1RPX09BX01BUkdJTl9DQUxMX1VQREFU",
            "RV9SRVMisAEKHFByb3RvT0FNYXJnaW5DYWxsVXBkYXRlRXZlbnQSSwoLcGF5",
            "bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6IVBST1RPX09B",
            "X01BUkdJTl9DQUxMX1VQREFURV9FVkVOVBIbChNjdGlkVHJhZGVyQWNjb3Vu",
            "dElkGAIgAigDEiYKCm1hcmdpbkNhbGwYAyACKAsyEi5Qcm90b09BTWFyZ2lu",
            "Q2FsbCKyAQodUHJvdG9PQU1hcmdpbkNhbGxUcmlnZ2VyRXZlbnQSTAoLcGF5",
            "bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6IlBST1RPX09B",
            "X01BUkdJTl9DQUxMX1RSSUdHRVJfRVZFTlQSGwoTY3RpZFRyYWRlckFjY291",
            "bnRJZBgCIAIoAxImCgptYXJnaW5DYWxsGAMgAigLMhIuUHJvdG9PQU1hcmdp",
            "bkNhbGwioAEKIFByb3RvT0FHZXREeW5hbWljTGV2ZXJhZ2VCeUlEUmVxEksK",
            "C3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOiFQUk9U",
            "T19PQV9HRVRfRFlOQU1JQ19MRVZFUkFHRV9SRVESGwoTY3RpZFRyYWRlckFj",
            "Y291bnRJZBgCIAIoAxISCgpsZXZlcmFnZUlkGAMgAigDIrcBCiBQcm90b09B",
            "R2V0RHluYW1pY0xldmVyYWdlQnlJRFJlcxJLCgtwYXlsb2FkVHlwZRgBIAEo",
            "DjITLlByb3RvT0FQYXlsb2FkVHlwZTohUFJPVE9fT0FfR0VUX0RZTkFNSUNf",
            "TEVWRVJBR0VfUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSKQoI",
            "bGV2ZXJhZ2UYAyACKAsyFy5Qcm90b09BRHluYW1pY0xldmVyYWdlIs4BCh5Q",
            "cm90b09BRGVhbExpc3RCeVBvc2l0aW9uSWRSZXESTwoLcGF5bG9hZFR5cGUY",
            "ASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6JVBST1RPX09BX0RFQUxfTElT",
            "VF9CWV9QT1NJVElPTl9JRF9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgC",
            "IAIoAxISCgpwb3NpdGlvbklkGAMgAigDEhUKDWZyb21UaW1lc3RhbXAYBCAC",
            "KAMSEwoLdG9UaW1lc3RhbXAYBSACKAMiuwEKHlByb3RvT0FEZWFsTGlzdEJ5",
            "UG9zaXRpb25JZFJlcxJPCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQ",
            "YXlsb2FkVHlwZTolUFJPVE9fT0FfREVBTF9MSVNUX0JZX1BPU0lUSU9OX0lE",
            "X1JFUxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhoKBGRlYWwYAyAD",
            "KAsyDC5Qcm90b09BRGVhbBIPCgdoYXNNb3JlGAQgAigIQkIKH2NvbS54dHJh",
            "ZGVyLnByb3RvY29sLm9wZW5hcGkudjJCGkNvbnRhaW5lck9wZW5BcGlWMk1l",
            "c3NhZ2VzUAGgAQE="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { OpenApiModelMessagesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(ApplicationAuthReq), ApplicationAuthReq.Parser, new[]{ "PayloadType", "ClientId", "ClientSecret" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(AccountAuthReq), AccountAuthReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "AccessToken" }, null, null, null, null),
            null,
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(VersionReq), VersionReq.Parser, new[]{ "PayloadType" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(NewOrderReq), NewOrderReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "SymbolId", "OrderType", "TradeSide", "Volume", "LimitPrice", "StopPrice", "TimeInForce", "ExpirationTimestamp", "StopLoss", "TakeProfit", "Comment", "BaseSlippagePrice", "SlippageInPoints", "Label", "PositionId", "ClientOrderId", "RelativeStopLoss", "RelativeTakeProfit", "GuaranteedStopLoss", "TrailingStopLoss", "StopTriggerMethod" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(CancelOrderReq), CancelOrderReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "OrderId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(AmendOrderReq), AmendOrderReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "OrderId", "Volume", "LimitPrice", "StopPrice", "ExpirationTimestamp", "StopLoss", "TakeProfit", "SlippageInPoints", "RelativeStopLoss", "RelativeTakeProfit", "GuaranteedStopLoss", "TrailingStopLoss", "StopTriggerMethod" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(AmendPositionSLTPReq), AmendPositionSLTPReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "PositionId", "StopLoss", "TakeProfit", "GuaranteedStopLoss", "TrailingStopLoss", "StopLossTriggerMethod" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(ClosePositionReq), ClosePositionReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "PositionId", "Volume" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(AssetListReq), AssetListReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(SymbolsListReq), SymbolsListReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "IncludeArchivedSymbols" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(SymbolByIdReq), SymbolByIdReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "SymbolId" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(SymbolsForConversionReq), SymbolsForConversionReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "FirstAssetId", "LastAssetId" }, null, null, null, null),
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(AssetClassListReq), AssetClassListReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(TraderReq), TraderReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId" }, null, null, null, null),
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(ReconcileReq), ReconcileReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId" }, null, null, null, null),
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(DealListReq), DealListReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "FromTimestamp", "ToTimestamp", "MaxRows" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(OrderListReq), OrderListReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "FromTimestamp", "ToTimestamp" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(ExpectedMarginReq), ExpectedMarginReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "SymbolId", "Volume" }, null, null, null, null),
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(CashFlowHistoryListReq), CashFlowHistoryListReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "FromTimestamp", "ToTimestamp" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(GetAccountListByAccessTokenReq), GetAccountListByAccessTokenReq.Parser, new[]{ "PayloadType", "AccessToken" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(RefreshTokenReq), RefreshTokenReq.Parser, new[]{ "PayloadType", "RefreshToken" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(SubscribeSpotsReq), SubscribeSpotsReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "SymbolId", "SubscribeToSpotTimestamp" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(UnsubscribeSpotsReq), UnsubscribeSpotsReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "SymbolId" }, null, null, null, null),
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(SubscribeLiveTrendbarReq), SubscribeLiveTrendbarReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "Period", "SymbolId" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(UnsubscribeLiveTrendbarReq), UnsubscribeLiveTrendbarReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "Period", "SymbolId" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(GetTrendbarsReq), GetTrendbarsReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "FromTimestamp", "ToTimestamp", "Period", "SymbolId", "Count" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(GetTickDataReq), GetTickDataReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "SymbolId", "Type", "FromTimestamp", "ToTimestamp" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(GetCtidProfileByTokenReq), GetCtidProfileByTokenReq.Parser, new[]{ "PayloadType", "AccessToken" }, null, null, null, null),
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(SubscribeDepthQuotesReq), SubscribeDepthQuotesReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "SymbolId" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(UnsubscribeDepthQuotesReq), UnsubscribeDepthQuotesReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "SymbolId" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(SymbolCategoryListReq), SymbolCategoryListReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(AccountLogoutReq), AccountLogoutReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId" }, null, null, null, null),
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(MarginCallListReq), MarginCallListReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(MarginCallUpdateReq), MarginCallUpdateReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "MarginCall" }, null, null, null, null),
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(GetDynamicLeverageByIDReq), GetDynamicLeverageByIDReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "LeverageId" }, null, null, null, null),
            null,
            new pbr::GeneratedClrTypeInfo(typeof(DealListByPositionIdReq), DealListByPositionIdReq.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "PositionId", "FromTimestamp", "ToTimestamp" }, null, null, null, null),
            null,
          }));
    }
    #endregion
  
  }
  #region Messages
      /// <summary>
  ///* Request for the authorizing an application to work with the cTrader platform Proxies. 
  /// </summary>
  public sealed partial class ApplicationAuthReq : pb::IMessage<ApplicationAuthReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ApplicationAuthReq> _parser = new pb::MessageParser<ApplicationAuthReq>(() => new ApplicationAuthReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ApplicationAuthReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[0]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ApplicationAuthReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ApplicationAuthReq(ApplicationAuthReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      clientId_ = other.clientId_;
      clientSecret_ = other.clientSecret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ApplicationAuthReq Clone() {
      return new ApplicationAuthReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaApplicationAuthReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private readonly static string ClientIdDefaultValue = "";
  
    private string clientId_;
    /// <summary>
    ///The unique Client ID provided during the registration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientId {
      get { return clientId_ ?? ClientIdDefaultValue; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clientId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientId {
      get { return clientId_ != null; }
    }
    /// <summary>Clears the value of the "clientId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientId() {
      clientId_ = null;
    }
  
    /// <summary>Field number for the "clientSecret" field.</summary>
    public const int ClientSecretFieldNumber = 3;
    private readonly static string ClientSecretDefaultValue = "";
  
    private string clientSecret_;
    /// <summary>
    ///The unique Client Secret provided during the registration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientSecret {
      get { return clientSecret_ ?? ClientSecretDefaultValue; }
      set {
        clientSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clientSecret" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientSecret {
      get { return clientSecret_ != null; }
    }
    /// <summary>Clears the value of the "clientSecret" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientSecret() {
      clientSecret_ = null;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ApplicationAuthReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ApplicationAuthReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (ClientId != other.ClientId) return false;
      if (ClientSecret != other.ClientSecret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasClientId) hash ^= ClientId.GetHashCode();
      if (HasClientSecret) hash ^= ClientSecret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasClientId) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (HasClientSecret) {
        output.WriteRawTag(26);
        output.WriteString(ClientSecret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasClientId) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (HasClientSecret) {
        output.WriteRawTag(26);
        output.WriteString(ClientSecret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasClientId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (HasClientSecret) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientSecret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ApplicationAuthReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasClientId) {
        ClientId = other.ClientId;
      }
      if (other.HasClientSecret) {
        ClientSecret = other.ClientSecret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 26: {
            ClientSecret = input.ReadString();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 26: {
            ClientSecret = input.ReadString();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for the authorizing trading account session. Requires established authorized connection with the client application using ApplicationAuthReq. 
  /// </summary>
  public sealed partial class AccountAuthReq : pb::IMessage<AccountAuthReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountAuthReq> _parser = new pb::MessageParser<AccountAuthReq>(() => new AccountAuthReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccountAuthReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[2]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountAuthReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountAuthReq(AccountAuthReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      accessToken_ = other.accessToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountAuthReq Clone() {
      return new AccountAuthReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaAccountAuthReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// The unique identifier of the trader's account in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "accessToken" field.</summary>
    public const int AccessTokenFieldNumber = 3;
    private readonly static string AccessTokenDefaultValue = "";
  
    private string accessToken_;
    /// <summary>
    /// The Access Token issued for providing access to the Trader's Account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccessToken {
      get { return accessToken_ ?? AccessTokenDefaultValue; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accessToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccessToken {
      get { return accessToken_ != null; }
    }
    /// <summary>Clears the value of the "accessToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccessToken() {
      accessToken_ = null;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccountAuthReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccountAuthReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (AccessToken != other.AccessToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasAccessToken) hash ^= AccessToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasAccessToken) {
        output.WriteRawTag(26);
        output.WriteString(AccessToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasAccessToken) {
        output.WriteRawTag(26);
        output.WriteString(AccessToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasAccessToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccountAuthReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasAccessToken) {
        AccessToken = other.AccessToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting the proxy version. Can be used to check the current version of the Open API scheme. 
  /// </summary>
  public sealed partial class VersionReq : pb::IMessage<VersionReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VersionReq> _parser = new pb::MessageParser<VersionReq>(() => new VersionReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VersionReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[7]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VersionReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VersionReq(VersionReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VersionReq Clone() {
      return new VersionReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaVersionReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VersionReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VersionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VersionReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for sending a new trading order. Allowed only if the accessToken has the "trade" permissions for the trading account. 
  /// </summary>
  public sealed partial class NewOrderReq : pb::IMessage<NewOrderReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewOrderReq> _parser = new pb::MessageParser<NewOrderReq>(() => new NewOrderReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NewOrderReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[9]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewOrderReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewOrderReq(NewOrderReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      symbolId_ = other.symbolId_;
      orderType_ = other.orderType_;
      tradeSide_ = other.tradeSide_;
      volume_ = other.volume_;
      limitPrice_ = other.limitPrice_;
      stopPrice_ = other.stopPrice_;
      timeInForce_ = other.timeInForce_;
      expirationTimestamp_ = other.expirationTimestamp_;
      stopLoss_ = other.stopLoss_;
      takeProfit_ = other.takeProfit_;
      comment_ = other.comment_;
      baseSlippagePrice_ = other.baseSlippagePrice_;
      slippageInPoints_ = other.slippageInPoints_;
      label_ = other.label_;
      positionId_ = other.positionId_;
      clientOrderId_ = other.clientOrderId_;
      relativeStopLoss_ = other.relativeStopLoss_;
      relativeTakeProfit_ = other.relativeTakeProfit_;
      guaranteedStopLoss_ = other.guaranteedStopLoss_;
      trailingStopLoss_ = other.trailingStopLoss_;
      stopTriggerMethod_ = other.stopTriggerMethod_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewOrderReq Clone() {
      return new NewOrderReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaNewOrderReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// The unique identifier of the trader's account in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 3;
    private readonly static long SymbolIdDefaultValue = 0L;
  
    private long symbolId_;
    /// <summary>
    /// The unique identifier of a symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SymbolId {
      get { if ((_hasBits0 & 4) != 0) { return symbolId_; } else { return SymbolIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        symbolId_ = value;
      }
    }
    /// <summary>Gets whether the "symbolId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSymbolId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "symbolId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSymbolId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "orderType" field.</summary>
    public const int OrderTypeFieldNumber = 4;
    private readonly static OrderType OrderTypeDefaultValue = OrderType.Market;
  
    private OrderType orderType_;
    /// <summary>
    /// The type of an order - MARKET, LIMIT, STOP, MARKET_RANGE, STOP_LIMIT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderType OrderType {
      get { if ((_hasBits0 & 8) != 0) { return orderType_; } else { return OrderTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        orderType_ = value;
      }
    }
    /// <summary>Gets whether the "orderType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrderType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "orderType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrderType() {
      _hasBits0 &= ~8;
    }
  
    /// <summary>Field number for the "tradeSide" field.</summary>
    public const int TradeSideFieldNumber = 5;
    private readonly static TradeSide TradeSideDefaultValue = TradeSide.Buy;
  
    private TradeSide tradeSide_;
    /// <summary>
    /// The trade direction - BUY or SELL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeSide TradeSide {
      get { if ((_hasBits0 & 16) != 0) { return tradeSide_; } else { return TradeSideDefaultValue; } }
      set {
        _hasBits0 |= 16;
        tradeSide_ = value;
      }
    }
    /// <summary>Gets whether the "tradeSide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTradeSide {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "tradeSide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTradeSide() {
      _hasBits0 &= ~16;
    }
  
    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 6;
    private readonly static long VolumeDefaultValue = 0L;
  
    private long volume_;
    /// <summary>
    /// The volume represented in 0.01 of a unit (e.g. US$ 10.00 = 1000).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Volume {
      get { if ((_hasBits0 & 32) != 0) { return volume_; } else { return VolumeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        volume_ = value;
      }
    }
    /// <summary>Gets whether the "volume" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVolume {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "volume" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVolume() {
      _hasBits0 &= ~32;
    }
  
    /// <summary>Field number for the "limitPrice" field.</summary>
    public const int LimitPriceFieldNumber = 7;
    private readonly static double LimitPriceDefaultValue = 0D;
  
    private double limitPrice_;
    /// <summary>
    /// The limit price, can be specified for the LIMIT order only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LimitPrice {
      get { if ((_hasBits0 & 64) != 0) { return limitPrice_; } else { return LimitPriceDefaultValue; } }
      set {
        _hasBits0 |= 64;
        limitPrice_ = value;
      }
    }
    /// <summary>Gets whether the "limitPrice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitPrice {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "limitPrice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitPrice() {
      _hasBits0 &= ~64;
    }
  
    /// <summary>Field number for the "stopPrice" field.</summary>
    public const int StopPriceFieldNumber = 8;
    private readonly static double StopPriceDefaultValue = 0D;
  
    private double stopPrice_;
    /// <summary>
    /// Stop Price, can be specified for the STOP and the STOP_LIMIT orders only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StopPrice {
      get { if ((_hasBits0 & 128) != 0) { return stopPrice_; } else { return StopPriceDefaultValue; } }
      set {
        _hasBits0 |= 128;
        stopPrice_ = value;
      }
    }
    /// <summary>Gets whether the "stopPrice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStopPrice {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "stopPrice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStopPrice() {
      _hasBits0 &= ~128;
    }
  
    /// <summary>Field number for the "timeInForce" field.</summary>
    public const int TimeInForceFieldNumber = 9;
    private readonly static TimeInForce TimeInForceDefaultValue = TimeInForce.GoodTillCancel;
  
    private TimeInForce timeInForce_;
    /// <summary>
    /// The specific order execution or expiration instruction - GOOD_TILL_DATE, GOOD_TILL_CANCEL, IMMEDIATE_OR_CANCEL, FILL_OR_KILL, MARKET_ON_OPEN.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeInForce TimeInForce {
      get { if ((_hasBits0 & 256) != 0) { return timeInForce_; } else { return TimeInForceDefaultValue; } }
      set {
        _hasBits0 |= 256;
        timeInForce_ = value;
      }
    }
    /// <summary>Gets whether the "timeInForce" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeInForce {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "timeInForce" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeInForce() {
      _hasBits0 &= ~256;
    }
  
    /// <summary>Field number for the "expirationTimestamp" field.</summary>
    public const int ExpirationTimestampFieldNumber = 10;
    private readonly static long ExpirationTimestampDefaultValue = 0L;
  
    private long expirationTimestamp_;
    /// <summary>
    /// The exact Order expiration time. Should be set for the Good Till Date orders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpirationTimestamp {
      get { if ((_hasBits0 & 512) != 0) { return expirationTimestamp_; } else { return ExpirationTimestampDefaultValue; } }
      set {
        _hasBits0 |= 512;
        expirationTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "expirationTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpirationTimestamp {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "expirationTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpirationTimestamp() {
      _hasBits0 &= ~512;
    }
  
    /// <summary>Field number for the "stopLoss" field.</summary>
    public const int StopLossFieldNumber = 11;
    private readonly static double StopLossDefaultValue = 0D;
  
    private double stopLoss_;
    /// <summary>
    /// The absolute Stop Loss price (1.23456 for example). Not supported for the MARKER orders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StopLoss {
      get { if ((_hasBits0 & 1024) != 0) { return stopLoss_; } else { return StopLossDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        stopLoss_ = value;
      }
    }
    /// <summary>Gets whether the "stopLoss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStopLoss {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "stopLoss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStopLoss() {
      _hasBits0 &= ~1024;
    }
  
    /// <summary>Field number for the "takeProfit" field.</summary>
    public const int TakeProfitFieldNumber = 12;
    private readonly static double TakeProfitDefaultValue = 0D;
  
    private double takeProfit_;
    /// <summary>
    /// The absolute Take Profit price (1.23456 for example). Unsupported for the MARKER orders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TakeProfit {
      get { if ((_hasBits0 & 2048) != 0) { return takeProfit_; } else { return TakeProfitDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        takeProfit_ = value;
      }
    }
    /// <summary>Gets whether the "takeProfit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTakeProfit {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "takeProfit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTakeProfit() {
      _hasBits0 &= ~2048;
    }
  
    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 13;
    private readonly static string CommentDefaultValue = "";
  
    private string comment_;
    /// <summary>
    /// User-specified comment. MaxLength = 512.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_ ?? CommentDefaultValue; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComment {
      get { return comment_ != null; }
    }
    /// <summary>Clears the value of the "comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComment() {
      comment_ = null;
    }
  
    /// <summary>Field number for the "baseSlippagePrice" field.</summary>
    public const int BaseSlippagePriceFieldNumber = 14;
    private readonly static double BaseSlippagePriceDefaultValue = 0D;
  
    private double baseSlippagePrice_;
    /// <summary>
    /// Base price to calculate relative slippage price for MARKET_RANGE order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BaseSlippagePrice {
      get { if ((_hasBits0 & 4096) != 0) { return baseSlippagePrice_; } else { return BaseSlippagePriceDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        baseSlippagePrice_ = value;
      }
    }
    /// <summary>Gets whether the "baseSlippagePrice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBaseSlippagePrice {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "baseSlippagePrice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBaseSlippagePrice() {
      _hasBits0 &= ~4096;
    }
  
    /// <summary>Field number for the "slippageInPoints" field.</summary>
    public const int SlippageInPointsFieldNumber = 15;
    private readonly static int SlippageInPointsDefaultValue = 0;
  
    private int slippageInPoints_;
    /// <summary>
    /// Slippage distance for MARKET_RANGE and STOP_LIMIT order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SlippageInPoints {
      get { if ((_hasBits0 & 8192) != 0) { return slippageInPoints_; } else { return SlippageInPointsDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        slippageInPoints_ = value;
      }
    }
    /// <summary>Gets whether the "slippageInPoints" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSlippageInPoints {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "slippageInPoints" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSlippageInPoints() {
      _hasBits0 &= ~8192;
    }
  
    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 16;
    private readonly static string LabelDefaultValue = "";
  
    private string label_;
    /// <summary>
    /// User-specified label. MaxLength = 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Label {
      get { return label_ ?? LabelDefaultValue; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLabel {
      get { return label_ != null; }
    }
    /// <summary>Clears the value of the "label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLabel() {
      label_ = null;
    }
  
    /// <summary>Field number for the "positionId" field.</summary>
    public const int PositionIdFieldNumber = 17;
    private readonly static long PositionIdDefaultValue = 0L;
  
    private long positionId_;
    /// <summary>
    /// Reference to the existing position if the Order is intended to modify it.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PositionId {
      get { if ((_hasBits0 & 16384) != 0) { return positionId_; } else { return PositionIdDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        positionId_ = value;
      }
    }
    /// <summary>Gets whether the "positionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPositionId {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "positionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPositionId() {
      _hasBits0 &= ~16384;
    }
  
    /// <summary>Field number for the "clientOrderId" field.</summary>
    public const int ClientOrderIdFieldNumber = 18;
    private readonly static string ClientOrderIdDefaultValue = "";
  
    private string clientOrderId_;
    /// <summary>
    /// Optional user-specific clientOrderId (similar to FIX ClOrderID). MaxLength = 50.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientOrderId {
      get { return clientOrderId_ ?? ClientOrderIdDefaultValue; }
      set {
        clientOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clientOrderId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientOrderId {
      get { return clientOrderId_ != null; }
    }
    /// <summary>Clears the value of the "clientOrderId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientOrderId() {
      clientOrderId_ = null;
    }
  
    /// <summary>Field number for the "relativeStopLoss" field.</summary>
    public const int RelativeStopLossFieldNumber = 19;
    private readonly static long RelativeStopLossDefaultValue = 0L;
  
    private long relativeStopLoss_;
    /// <summary>
    /// Relative Stop Loss that can be specified instead of the absolute as one. Specified in 1/100000 of unit of a price. For BUY stopLoss = entryPrice - relativeStopLoss, for SELL stopLoss = entryPrice + relativeStopLoss.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RelativeStopLoss {
      get { if ((_hasBits0 & 32768) != 0) { return relativeStopLoss_; } else { return RelativeStopLossDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        relativeStopLoss_ = value;
      }
    }
    /// <summary>Gets whether the "relativeStopLoss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRelativeStopLoss {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "relativeStopLoss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRelativeStopLoss() {
      _hasBits0 &= ~32768;
    }
  
    /// <summary>Field number for the "relativeTakeProfit" field.</summary>
    public const int RelativeTakeProfitFieldNumber = 20;
    private readonly static long RelativeTakeProfitDefaultValue = 0L;
  
    private long relativeTakeProfit_;
    /// <summary>
    /// Relative Take Profit that can be specified instead of the absolute one. Specified in 1/100000 of unit of a price. For BUY takeProfit = entryPrice + relativeTakeProfit, for SELL takeProfit = entryPrice - relativeTakeProfit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RelativeTakeProfit {
      get { if ((_hasBits0 & 65536) != 0) { return relativeTakeProfit_; } else { return RelativeTakeProfitDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        relativeTakeProfit_ = value;
      }
    }
    /// <summary>Gets whether the "relativeTakeProfit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRelativeTakeProfit {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "relativeTakeProfit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRelativeTakeProfit() {
      _hasBits0 &= ~65536;
    }
  
    /// <summary>Field number for the "guaranteedStopLoss" field.</summary>
    public const int GuaranteedStopLossFieldNumber = 21;
    private readonly static bool GuaranteedStopLossDefaultValue = false;
  
    private bool guaranteedStopLoss_;
    /// <summary>
    /// If TRUE then stopLoss is guaranteed. Available for the French Risk or the Guaranteed Stop Loss Accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GuaranteedStopLoss {
      get { if ((_hasBits0 & 131072) != 0) { return guaranteedStopLoss_; } else { return GuaranteedStopLossDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        guaranteedStopLoss_ = value;
      }
    }
    /// <summary>Gets whether the "guaranteedStopLoss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuaranteedStopLoss {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "guaranteedStopLoss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuaranteedStopLoss() {
      _hasBits0 &= ~131072;
    }
  
    /// <summary>Field number for the "trailingStopLoss" field.</summary>
    public const int TrailingStopLossFieldNumber = 22;
    private readonly static bool TrailingStopLossDefaultValue = false;
  
    private bool trailingStopLoss_;
    /// <summary>
    /// If TRUE then the Stop Loss is Trailing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TrailingStopLoss {
      get { if ((_hasBits0 & 262144) != 0) { return trailingStopLoss_; } else { return TrailingStopLossDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        trailingStopLoss_ = value;
      }
    }
    /// <summary>Gets whether the "trailingStopLoss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrailingStopLoss {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "trailingStopLoss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrailingStopLoss() {
      _hasBits0 &= ~262144;
    }
  
    /// <summary>Field number for the "stopTriggerMethod" field.</summary>
    public const int StopTriggerMethodFieldNumber = 23;
    private readonly static OrderTriggerMethod StopTriggerMethodDefaultValue = OrderTriggerMethod.Trade;
  
    private OrderTriggerMethod stopTriggerMethod_;
    /// <summary>
    /// Trigger method for the STOP or the STOP_LIMIT pending order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderTriggerMethod StopTriggerMethod {
      get { if ((_hasBits0 & 524288) != 0) { return stopTriggerMethod_; } else { return StopTriggerMethodDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        stopTriggerMethod_ = value;
      }
    }
    /// <summary>Gets whether the "stopTriggerMethod" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStopTriggerMethod {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "stopTriggerMethod" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStopTriggerMethod() {
      _hasBits0 &= ~524288;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NewOrderReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NewOrderReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (SymbolId != other.SymbolId) return false;
      if (OrderType != other.OrderType) return false;
      if (TradeSide != other.TradeSide) return false;
      if (Volume != other.Volume) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LimitPrice, other.LimitPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StopPrice, other.StopPrice)) return false;
      if (TimeInForce != other.TimeInForce) return false;
      if (ExpirationTimestamp != other.ExpirationTimestamp) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StopLoss, other.StopLoss)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TakeProfit, other.TakeProfit)) return false;
      if (Comment != other.Comment) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BaseSlippagePrice, other.BaseSlippagePrice)) return false;
      if (SlippageInPoints != other.SlippageInPoints) return false;
      if (Label != other.Label) return false;
      if (PositionId != other.PositionId) return false;
      if (ClientOrderId != other.ClientOrderId) return false;
      if (RelativeStopLoss != other.RelativeStopLoss) return false;
      if (RelativeTakeProfit != other.RelativeTakeProfit) return false;
      if (GuaranteedStopLoss != other.GuaranteedStopLoss) return false;
      if (TrailingStopLoss != other.TrailingStopLoss) return false;
      if (StopTriggerMethod != other.StopTriggerMethod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasSymbolId) hash ^= SymbolId.GetHashCode();
      if (HasOrderType) hash ^= OrderType.GetHashCode();
      if (HasTradeSide) hash ^= TradeSide.GetHashCode();
      if (HasVolume) hash ^= Volume.GetHashCode();
      if (HasLimitPrice) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LimitPrice);
      if (HasStopPrice) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StopPrice);
      if (HasTimeInForce) hash ^= TimeInForce.GetHashCode();
      if (HasExpirationTimestamp) hash ^= ExpirationTimestamp.GetHashCode();
      if (HasStopLoss) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StopLoss);
      if (HasTakeProfit) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TakeProfit);
      if (HasComment) hash ^= Comment.GetHashCode();
      if (HasBaseSlippagePrice) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BaseSlippagePrice);
      if (HasSlippageInPoints) hash ^= SlippageInPoints.GetHashCode();
      if (HasLabel) hash ^= Label.GetHashCode();
      if (HasPositionId) hash ^= PositionId.GetHashCode();
      if (HasClientOrderId) hash ^= ClientOrderId.GetHashCode();
      if (HasRelativeStopLoss) hash ^= RelativeStopLoss.GetHashCode();
      if (HasRelativeTakeProfit) hash ^= RelativeTakeProfit.GetHashCode();
      if (HasGuaranteedStopLoss) hash ^= GuaranteedStopLoss.GetHashCode();
      if (HasTrailingStopLoss) hash ^= TrailingStopLoss.GetHashCode();
      if (HasStopTriggerMethod) hash ^= StopTriggerMethod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        output.WriteRawTag(24);
        output.WriteInt64(SymbolId);
      }
      if (HasOrderType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OrderType);
      }
      if (HasTradeSide) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TradeSide);
      }
      if (HasVolume) {
        output.WriteRawTag(48);
        output.WriteInt64(Volume);
      }
      if (HasLimitPrice) {
        output.WriteRawTag(57);
        output.WriteDouble(LimitPrice);
      }
      if (HasStopPrice) {
        output.WriteRawTag(65);
        output.WriteDouble(StopPrice);
      }
      if (HasTimeInForce) {
        output.WriteRawTag(72);
        output.WriteEnum((int) TimeInForce);
      }
      if (HasExpirationTimestamp) {
        output.WriteRawTag(80);
        output.WriteInt64(ExpirationTimestamp);
      }
      if (HasStopLoss) {
        output.WriteRawTag(89);
        output.WriteDouble(StopLoss);
      }
      if (HasTakeProfit) {
        output.WriteRawTag(97);
        output.WriteDouble(TakeProfit);
      }
      if (HasComment) {
        output.WriteRawTag(106);
        output.WriteString(Comment);
      }
      if (HasBaseSlippagePrice) {
        output.WriteRawTag(113);
        output.WriteDouble(BaseSlippagePrice);
      }
      if (HasSlippageInPoints) {
        output.WriteRawTag(120);
        output.WriteInt32(SlippageInPoints);
      }
      if (HasLabel) {
        output.WriteRawTag(130, 1);
        output.WriteString(Label);
      }
      if (HasPositionId) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(PositionId);
      }
      if (HasClientOrderId) {
        output.WriteRawTag(146, 1);
        output.WriteString(ClientOrderId);
      }
      if (HasRelativeStopLoss) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(RelativeStopLoss);
      }
      if (HasRelativeTakeProfit) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(RelativeTakeProfit);
      }
      if (HasGuaranteedStopLoss) {
        output.WriteRawTag(168, 1);
        output.WriteBool(GuaranteedStopLoss);
      }
      if (HasTrailingStopLoss) {
        output.WriteRawTag(176, 1);
        output.WriteBool(TrailingStopLoss);
      }
      if (HasStopTriggerMethod) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) StopTriggerMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        output.WriteRawTag(24);
        output.WriteInt64(SymbolId);
      }
      if (HasOrderType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OrderType);
      }
      if (HasTradeSide) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TradeSide);
      }
      if (HasVolume) {
        output.WriteRawTag(48);
        output.WriteInt64(Volume);
      }
      if (HasLimitPrice) {
        output.WriteRawTag(57);
        output.WriteDouble(LimitPrice);
      }
      if (HasStopPrice) {
        output.WriteRawTag(65);
        output.WriteDouble(StopPrice);
      }
      if (HasTimeInForce) {
        output.WriteRawTag(72);
        output.WriteEnum((int) TimeInForce);
      }
      if (HasExpirationTimestamp) {
        output.WriteRawTag(80);
        output.WriteInt64(ExpirationTimestamp);
      }
      if (HasStopLoss) {
        output.WriteRawTag(89);
        output.WriteDouble(StopLoss);
      }
      if (HasTakeProfit) {
        output.WriteRawTag(97);
        output.WriteDouble(TakeProfit);
      }
      if (HasComment) {
        output.WriteRawTag(106);
        output.WriteString(Comment);
      }
      if (HasBaseSlippagePrice) {
        output.WriteRawTag(113);
        output.WriteDouble(BaseSlippagePrice);
      }
      if (HasSlippageInPoints) {
        output.WriteRawTag(120);
        output.WriteInt32(SlippageInPoints);
      }
      if (HasLabel) {
        output.WriteRawTag(130, 1);
        output.WriteString(Label);
      }
      if (HasPositionId) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(PositionId);
      }
      if (HasClientOrderId) {
        output.WriteRawTag(146, 1);
        output.WriteString(ClientOrderId);
      }
      if (HasRelativeStopLoss) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(RelativeStopLoss);
      }
      if (HasRelativeTakeProfit) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(RelativeTakeProfit);
      }
      if (HasGuaranteedStopLoss) {
        output.WriteRawTag(168, 1);
        output.WriteBool(GuaranteedStopLoss);
      }
      if (HasTrailingStopLoss) {
        output.WriteRawTag(176, 1);
        output.WriteBool(TrailingStopLoss);
      }
      if (HasStopTriggerMethod) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) StopTriggerMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SymbolId);
      }
      if (HasOrderType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
      }
      if (HasTradeSide) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TradeSide);
      }
      if (HasVolume) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Volume);
      }
      if (HasLimitPrice) {
        size += 1 + 8;
      }
      if (HasStopPrice) {
        size += 1 + 8;
      }
      if (HasTimeInForce) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TimeInForce);
      }
      if (HasExpirationTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationTimestamp);
      }
      if (HasStopLoss) {
        size += 1 + 8;
      }
      if (HasTakeProfit) {
        size += 1 + 8;
      }
      if (HasComment) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (HasBaseSlippagePrice) {
        size += 1 + 8;
      }
      if (HasSlippageInPoints) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlippageInPoints);
      }
      if (HasLabel) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (HasPositionId) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PositionId);
      }
      if (HasClientOrderId) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientOrderId);
      }
      if (HasRelativeStopLoss) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RelativeStopLoss);
      }
      if (HasRelativeTakeProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RelativeTakeProfit);
      }
      if (HasGuaranteedStopLoss) {
        size += 2 + 1;
      }
      if (HasTrailingStopLoss) {
        size += 2 + 1;
      }
      if (HasStopTriggerMethod) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) StopTriggerMethod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NewOrderReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      if (other.HasOrderType) {
        OrderType = other.OrderType;
      }
      if (other.HasTradeSide) {
        TradeSide = other.TradeSide;
      }
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      if (other.HasLimitPrice) {
        LimitPrice = other.LimitPrice;
      }
      if (other.HasStopPrice) {
        StopPrice = other.StopPrice;
      }
      if (other.HasTimeInForce) {
        TimeInForce = other.TimeInForce;
      }
      if (other.HasExpirationTimestamp) {
        ExpirationTimestamp = other.ExpirationTimestamp;
      }
      if (other.HasStopLoss) {
        StopLoss = other.StopLoss;
      }
      if (other.HasTakeProfit) {
        TakeProfit = other.TakeProfit;
      }
      if (other.HasComment) {
        Comment = other.Comment;
      }
      if (other.HasBaseSlippagePrice) {
        BaseSlippagePrice = other.BaseSlippagePrice;
      }
      if (other.HasSlippageInPoints) {
        SlippageInPoints = other.SlippageInPoints;
      }
      if (other.HasLabel) {
        Label = other.Label;
      }
      if (other.HasPositionId) {
        PositionId = other.PositionId;
      }
      if (other.HasClientOrderId) {
        ClientOrderId = other.ClientOrderId;
      }
      if (other.HasRelativeStopLoss) {
        RelativeStopLoss = other.RelativeStopLoss;
      }
      if (other.HasRelativeTakeProfit) {
        RelativeTakeProfit = other.RelativeTakeProfit;
      }
      if (other.HasGuaranteedStopLoss) {
        GuaranteedStopLoss = other.GuaranteedStopLoss;
      }
      if (other.HasTrailingStopLoss) {
        TrailingStopLoss = other.TrailingStopLoss;
      }
      if (other.HasStopTriggerMethod) {
        StopTriggerMethod = other.StopTriggerMethod;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            SymbolId = input.ReadInt64();
            break;
          }
          case 32: {
            OrderType = (OrderType) input.ReadEnum();
            break;
          }
          case 40: {
            TradeSide = (TradeSide) input.ReadEnum();
            break;
          }
          case 48: {
            Volume = input.ReadInt64();
            break;
          }
          case 57: {
            LimitPrice = input.ReadDouble();
            break;
          }
          case 65: {
            StopPrice = input.ReadDouble();
            break;
          }
          case 72: {
            TimeInForce = (TimeInForce) input.ReadEnum();
            break;
          }
          case 80: {
            ExpirationTimestamp = input.ReadInt64();
            break;
          }
          case 89: {
            StopLoss = input.ReadDouble();
            break;
          }
          case 97: {
            TakeProfit = input.ReadDouble();
            break;
          }
          case 106: {
            Comment = input.ReadString();
            break;
          }
          case 113: {
            BaseSlippagePrice = input.ReadDouble();
            break;
          }
          case 120: {
            SlippageInPoints = input.ReadInt32();
            break;
          }
          case 130: {
            Label = input.ReadString();
            break;
          }
          case 136: {
            PositionId = input.ReadInt64();
            break;
          }
          case 146: {
            ClientOrderId = input.ReadString();
            break;
          }
          case 152: {
            RelativeStopLoss = input.ReadInt64();
            break;
          }
          case 160: {
            RelativeTakeProfit = input.ReadInt64();
            break;
          }
          case 168: {
            GuaranteedStopLoss = input.ReadBool();
            break;
          }
          case 176: {
            TrailingStopLoss = input.ReadBool();
            break;
          }
          case 184: {
            StopTriggerMethod = (OrderTriggerMethod) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            SymbolId = input.ReadInt64();
            break;
          }
          case 32: {
            OrderType = (OrderType) input.ReadEnum();
            break;
          }
          case 40: {
            TradeSide = (TradeSide) input.ReadEnum();
            break;
          }
          case 48: {
            Volume = input.ReadInt64();
            break;
          }
          case 57: {
            LimitPrice = input.ReadDouble();
            break;
          }
          case 65: {
            StopPrice = input.ReadDouble();
            break;
          }
          case 72: {
            TimeInForce = (TimeInForce) input.ReadEnum();
            break;
          }
          case 80: {
            ExpirationTimestamp = input.ReadInt64();
            break;
          }
          case 89: {
            StopLoss = input.ReadDouble();
            break;
          }
          case 97: {
            TakeProfit = input.ReadDouble();
            break;
          }
          case 106: {
            Comment = input.ReadString();
            break;
          }
          case 113: {
            BaseSlippagePrice = input.ReadDouble();
            break;
          }
          case 120: {
            SlippageInPoints = input.ReadInt32();
            break;
          }
          case 130: {
            Label = input.ReadString();
            break;
          }
          case 136: {
            PositionId = input.ReadInt64();
            break;
          }
          case 146: {
            ClientOrderId = input.ReadString();
            break;
          }
          case 152: {
            RelativeStopLoss = input.ReadInt64();
            break;
          }
          case 160: {
            RelativeTakeProfit = input.ReadInt64();
            break;
          }
          case 168: {
            GuaranteedStopLoss = input.ReadBool();
            break;
          }
          case 176: {
            TrailingStopLoss = input.ReadBool();
            break;
          }
          case 184: {
            StopTriggerMethod = (OrderTriggerMethod) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for cancelling existing pending order. Allowed only if the accessToken has "trade" permissions for the trading account. 
  /// </summary>
  public sealed partial class CancelOrderReq : pb::IMessage<CancelOrderReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelOrderReq> _parser = new pb::MessageParser<CancelOrderReq>(() => new CancelOrderReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CancelOrderReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[11]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelOrderReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelOrderReq(CancelOrderReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      orderId_ = other.orderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelOrderReq Clone() {
      return new CancelOrderReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaCancelOrderReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "orderId" field.</summary>
    public const int OrderIdFieldNumber = 3;
    private readonly static long OrderIdDefaultValue = 0L;
  
    private long orderId_;
    /// <summary>
    /// The unique ID of the order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OrderId {
      get { if ((_hasBits0 & 4) != 0) { return orderId_; } else { return OrderIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        orderId_ = value;
      }
    }
    /// <summary>Gets whether the "orderId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrderId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "orderId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrderId() {
      _hasBits0 &= ~4;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CancelOrderReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CancelOrderReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (OrderId != other.OrderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasOrderId) hash ^= OrderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasOrderId) {
        output.WriteRawTag(24);
        output.WriteInt64(OrderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasOrderId) {
        output.WriteRawTag(24);
        output.WriteInt64(OrderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CancelOrderReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasOrderId) {
        OrderId = other.OrderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            OrderId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            OrderId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for amending the existing pending order. Allowed only if the Access Token has "trade" permissions for the trading account. 
  /// </summary>
  public sealed partial class AmendOrderReq : pb::IMessage<AmendOrderReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AmendOrderReq> _parser = new pb::MessageParser<AmendOrderReq>(() => new AmendOrderReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AmendOrderReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[12]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmendOrderReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmendOrderReq(AmendOrderReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      orderId_ = other.orderId_;
      volume_ = other.volume_;
      limitPrice_ = other.limitPrice_;
      stopPrice_ = other.stopPrice_;
      expirationTimestamp_ = other.expirationTimestamp_;
      stopLoss_ = other.stopLoss_;
      takeProfit_ = other.takeProfit_;
      slippageInPoints_ = other.slippageInPoints_;
      relativeStopLoss_ = other.relativeStopLoss_;
      relativeTakeProfit_ = other.relativeTakeProfit_;
      guaranteedStopLoss_ = other.guaranteedStopLoss_;
      trailingStopLoss_ = other.trailingStopLoss_;
      stopTriggerMethod_ = other.stopTriggerMethod_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmendOrderReq Clone() {
      return new AmendOrderReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaAmendOrderReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "orderId" field.</summary>
    public const int OrderIdFieldNumber = 3;
    private readonly static long OrderIdDefaultValue = 0L;
  
    private long orderId_;
    /// <summary>
    /// The unique ID of the order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OrderId {
      get { if ((_hasBits0 & 4) != 0) { return orderId_; } else { return OrderIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        orderId_ = value;
      }
    }
    /// <summary>Gets whether the "orderId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrderId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "orderId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrderId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 4;
    private readonly static long VolumeDefaultValue = 0L;
  
    private long volume_;
    /// <summary>
    /// Volume, represented in 0.01 of a unit (e.g. cents).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Volume {
      get { if ((_hasBits0 & 8) != 0) { return volume_; } else { return VolumeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        volume_ = value;
      }
    }
    /// <summary>Gets whether the "volume" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVolume {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "volume" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVolume() {
      _hasBits0 &= ~8;
    }
  
    /// <summary>Field number for the "limitPrice" field.</summary>
    public const int LimitPriceFieldNumber = 5;
    private readonly static double LimitPriceDefaultValue = 0D;
  
    private double limitPrice_;
    /// <summary>
    /// The Limit Price, can be specified for the LIMIT order only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LimitPrice {
      get { if ((_hasBits0 & 16) != 0) { return limitPrice_; } else { return LimitPriceDefaultValue; } }
      set {
        _hasBits0 |= 16;
        limitPrice_ = value;
      }
    }
    /// <summary>Gets whether the "limitPrice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitPrice {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "limitPrice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitPrice() {
      _hasBits0 &= ~16;
    }
  
    /// <summary>Field number for the "stopPrice" field.</summary>
    public const int StopPriceFieldNumber = 6;
    private readonly static double StopPriceDefaultValue = 0D;
  
    private double stopPrice_;
    /// <summary>
    /// The Stop Price, can be specified for the STOP and the STOP_LIMIT orders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StopPrice {
      get { if ((_hasBits0 & 32) != 0) { return stopPrice_; } else { return StopPriceDefaultValue; } }
      set {
        _hasBits0 |= 32;
        stopPrice_ = value;
      }
    }
    /// <summary>Gets whether the "stopPrice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStopPrice {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "stopPrice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStopPrice() {
      _hasBits0 &= ~32;
    }
  
    /// <summary>Field number for the "expirationTimestamp" field.</summary>
    public const int ExpirationTimestampFieldNumber = 7;
    private readonly static long ExpirationTimestampDefaultValue = 0L;
  
    private long expirationTimestamp_;
    /// <summary>
    /// The exact Order expiration time. Should be set for the Good Till Date orders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpirationTimestamp {
      get { if ((_hasBits0 & 64) != 0) { return expirationTimestamp_; } else { return ExpirationTimestampDefaultValue; } }
      set {
        _hasBits0 |= 64;
        expirationTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "expirationTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpirationTimestamp {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "expirationTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpirationTimestamp() {
      _hasBits0 &= ~64;
    }
  
    /// <summary>Field number for the "stopLoss" field.</summary>
    public const int StopLossFieldNumber = 8;
    private readonly static double StopLossDefaultValue = 0D;
  
    private double stopLoss_;
    /// <summary>
    /// The absolute Stop Loss price (e.g. 1.23456). Not supported for the MARKER orders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StopLoss {
      get { if ((_hasBits0 & 128) != 0) { return stopLoss_; } else { return StopLossDefaultValue; } }
      set {
        _hasBits0 |= 128;
        stopLoss_ = value;
      }
    }
    /// <summary>Gets whether the "stopLoss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStopLoss {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "stopLoss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStopLoss() {
      _hasBits0 &= ~128;
    }
  
    /// <summary>Field number for the "takeProfit" field.</summary>
    public const int TakeProfitFieldNumber = 9;
    private readonly static double TakeProfitDefaultValue = 0D;
  
    private double takeProfit_;
    /// <summary>
    /// The absolute Take Profit price (e.g. 1.23456). Not supported for the MARKER orders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TakeProfit {
      get { if ((_hasBits0 & 256) != 0) { return takeProfit_; } else { return TakeProfitDefaultValue; } }
      set {
        _hasBits0 |= 256;
        takeProfit_ = value;
      }
    }
    /// <summary>Gets whether the "takeProfit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTakeProfit {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "takeProfit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTakeProfit() {
      _hasBits0 &= ~256;
    }
  
    /// <summary>Field number for the "slippageInPoints" field.</summary>
    public const int SlippageInPointsFieldNumber = 10;
    private readonly static int SlippageInPointsDefaultValue = 0;
  
    private int slippageInPoints_;
    /// <summary>
    /// Slippage distance for the MARKET_RANGE and the STOP_LIMIT orders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SlippageInPoints {
      get { if ((_hasBits0 & 512) != 0) { return slippageInPoints_; } else { return SlippageInPointsDefaultValue; } }
      set {
        _hasBits0 |= 512;
        slippageInPoints_ = value;
      }
    }
    /// <summary>Gets whether the "slippageInPoints" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSlippageInPoints {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "slippageInPoints" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSlippageInPoints() {
      _hasBits0 &= ~512;
    }
  
    /// <summary>Field number for the "relativeStopLoss" field.</summary>
    public const int RelativeStopLossFieldNumber = 11;
    private readonly static long RelativeStopLossDefaultValue = 0L;
  
    private long relativeStopLoss_;
    /// <summary>
    /// The relative Stop Loss can be specified instead of the absolute one. Specified in 1/100000 of a unit of price. For BUY stopLoss = entryPrice - relativeStopLoss, for SELL stopLoss = entryPrice + relativeStopLoss.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RelativeStopLoss {
      get { if ((_hasBits0 & 1024) != 0) { return relativeStopLoss_; } else { return RelativeStopLossDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        relativeStopLoss_ = value;
      }
    }
    /// <summary>Gets whether the "relativeStopLoss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRelativeStopLoss {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "relativeStopLoss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRelativeStopLoss() {
      _hasBits0 &= ~1024;
    }
  
    /// <summary>Field number for the "relativeTakeProfit" field.</summary>
    public const int RelativeTakeProfitFieldNumber = 12;
    private readonly static long RelativeTakeProfitDefaultValue = 0L;
  
    private long relativeTakeProfit_;
    /// <summary>
    /// The relative Take Profit can be specified instead of the absolute one. Specified in 1/100000 of a unit of price. For BUY takeProfit = entryPrice + relativeTakeProfit, for SELL takeProfit = entryPrice - relativeTakeProfit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RelativeTakeProfit {
      get { if ((_hasBits0 & 2048) != 0) { return relativeTakeProfit_; } else { return RelativeTakeProfitDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        relativeTakeProfit_ = value;
      }
    }
    /// <summary>Gets whether the "relativeTakeProfit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRelativeTakeProfit {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "relativeTakeProfit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRelativeTakeProfit() {
      _hasBits0 &= ~2048;
    }
  
    /// <summary>Field number for the "guaranteedStopLoss" field.</summary>
    public const int GuaranteedStopLossFieldNumber = 13;
    private readonly static bool GuaranteedStopLossDefaultValue = false;
  
    private bool guaranteedStopLoss_;
    /// <summary>
    /// If TRUE then the Stop Loss is guaranteed. Available for the French Risk or the Guaranteed Stop Loss Accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GuaranteedStopLoss {
      get { if ((_hasBits0 & 4096) != 0) { return guaranteedStopLoss_; } else { return GuaranteedStopLossDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        guaranteedStopLoss_ = value;
      }
    }
    /// <summary>Gets whether the "guaranteedStopLoss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuaranteedStopLoss {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "guaranteedStopLoss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuaranteedStopLoss() {
      _hasBits0 &= ~4096;
    }
  
    /// <summary>Field number for the "trailingStopLoss" field.</summary>
    public const int TrailingStopLossFieldNumber = 14;
    private readonly static bool TrailingStopLossDefaultValue = false;
  
    private bool trailingStopLoss_;
    /// <summary>
    /// If TRUE then the Trailing Stop Loss is applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TrailingStopLoss {
      get { if ((_hasBits0 & 8192) != 0) { return trailingStopLoss_; } else { return TrailingStopLossDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        trailingStopLoss_ = value;
      }
    }
    /// <summary>Gets whether the "trailingStopLoss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrailingStopLoss {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "trailingStopLoss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrailingStopLoss() {
      _hasBits0 &= ~8192;
    }
  
    /// <summary>Field number for the "stopTriggerMethod" field.</summary>
    public const int StopTriggerMethodFieldNumber = 15;
    private readonly static OrderTriggerMethod StopTriggerMethodDefaultValue = OrderTriggerMethod.Trade;
  
    private OrderTriggerMethod stopTriggerMethod_;
    /// <summary>
    /// Trigger method for the STOP or the STOP_LIMIT pending order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderTriggerMethod StopTriggerMethod {
      get { if ((_hasBits0 & 16384) != 0) { return stopTriggerMethod_; } else { return StopTriggerMethodDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        stopTriggerMethod_ = value;
      }
    }
    /// <summary>Gets whether the "stopTriggerMethod" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStopTriggerMethod {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "stopTriggerMethod" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStopTriggerMethod() {
      _hasBits0 &= ~16384;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AmendOrderReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AmendOrderReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (OrderId != other.OrderId) return false;
      if (Volume != other.Volume) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LimitPrice, other.LimitPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StopPrice, other.StopPrice)) return false;
      if (ExpirationTimestamp != other.ExpirationTimestamp) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StopLoss, other.StopLoss)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TakeProfit, other.TakeProfit)) return false;
      if (SlippageInPoints != other.SlippageInPoints) return false;
      if (RelativeStopLoss != other.RelativeStopLoss) return false;
      if (RelativeTakeProfit != other.RelativeTakeProfit) return false;
      if (GuaranteedStopLoss != other.GuaranteedStopLoss) return false;
      if (TrailingStopLoss != other.TrailingStopLoss) return false;
      if (StopTriggerMethod != other.StopTriggerMethod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasOrderId) hash ^= OrderId.GetHashCode();
      if (HasVolume) hash ^= Volume.GetHashCode();
      if (HasLimitPrice) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LimitPrice);
      if (HasStopPrice) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StopPrice);
      if (HasExpirationTimestamp) hash ^= ExpirationTimestamp.GetHashCode();
      if (HasStopLoss) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StopLoss);
      if (HasTakeProfit) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TakeProfit);
      if (HasSlippageInPoints) hash ^= SlippageInPoints.GetHashCode();
      if (HasRelativeStopLoss) hash ^= RelativeStopLoss.GetHashCode();
      if (HasRelativeTakeProfit) hash ^= RelativeTakeProfit.GetHashCode();
      if (HasGuaranteedStopLoss) hash ^= GuaranteedStopLoss.GetHashCode();
      if (HasTrailingStopLoss) hash ^= TrailingStopLoss.GetHashCode();
      if (HasStopTriggerMethod) hash ^= StopTriggerMethod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasOrderId) {
        output.WriteRawTag(24);
        output.WriteInt64(OrderId);
      }
      if (HasVolume) {
        output.WriteRawTag(32);
        output.WriteInt64(Volume);
      }
      if (HasLimitPrice) {
        output.WriteRawTag(41);
        output.WriteDouble(LimitPrice);
      }
      if (HasStopPrice) {
        output.WriteRawTag(49);
        output.WriteDouble(StopPrice);
      }
      if (HasExpirationTimestamp) {
        output.WriteRawTag(56);
        output.WriteInt64(ExpirationTimestamp);
      }
      if (HasStopLoss) {
        output.WriteRawTag(65);
        output.WriteDouble(StopLoss);
      }
      if (HasTakeProfit) {
        output.WriteRawTag(73);
        output.WriteDouble(TakeProfit);
      }
      if (HasSlippageInPoints) {
        output.WriteRawTag(80);
        output.WriteInt32(SlippageInPoints);
      }
      if (HasRelativeStopLoss) {
        output.WriteRawTag(88);
        output.WriteInt64(RelativeStopLoss);
      }
      if (HasRelativeTakeProfit) {
        output.WriteRawTag(96);
        output.WriteInt64(RelativeTakeProfit);
      }
      if (HasGuaranteedStopLoss) {
        output.WriteRawTag(104);
        output.WriteBool(GuaranteedStopLoss);
      }
      if (HasTrailingStopLoss) {
        output.WriteRawTag(112);
        output.WriteBool(TrailingStopLoss);
      }
      if (HasStopTriggerMethod) {
        output.WriteRawTag(120);
        output.WriteEnum((int) StopTriggerMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasOrderId) {
        output.WriteRawTag(24);
        output.WriteInt64(OrderId);
      }
      if (HasVolume) {
        output.WriteRawTag(32);
        output.WriteInt64(Volume);
      }
      if (HasLimitPrice) {
        output.WriteRawTag(41);
        output.WriteDouble(LimitPrice);
      }
      if (HasStopPrice) {
        output.WriteRawTag(49);
        output.WriteDouble(StopPrice);
      }
      if (HasExpirationTimestamp) {
        output.WriteRawTag(56);
        output.WriteInt64(ExpirationTimestamp);
      }
      if (HasStopLoss) {
        output.WriteRawTag(65);
        output.WriteDouble(StopLoss);
      }
      if (HasTakeProfit) {
        output.WriteRawTag(73);
        output.WriteDouble(TakeProfit);
      }
      if (HasSlippageInPoints) {
        output.WriteRawTag(80);
        output.WriteInt32(SlippageInPoints);
      }
      if (HasRelativeStopLoss) {
        output.WriteRawTag(88);
        output.WriteInt64(RelativeStopLoss);
      }
      if (HasRelativeTakeProfit) {
        output.WriteRawTag(96);
        output.WriteInt64(RelativeTakeProfit);
      }
      if (HasGuaranteedStopLoss) {
        output.WriteRawTag(104);
        output.WriteBool(GuaranteedStopLoss);
      }
      if (HasTrailingStopLoss) {
        output.WriteRawTag(112);
        output.WriteBool(TrailingStopLoss);
      }
      if (HasStopTriggerMethod) {
        output.WriteRawTag(120);
        output.WriteEnum((int) StopTriggerMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderId);
      }
      if (HasVolume) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Volume);
      }
      if (HasLimitPrice) {
        size += 1 + 8;
      }
      if (HasStopPrice) {
        size += 1 + 8;
      }
      if (HasExpirationTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationTimestamp);
      }
      if (HasStopLoss) {
        size += 1 + 8;
      }
      if (HasTakeProfit) {
        size += 1 + 8;
      }
      if (HasSlippageInPoints) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlippageInPoints);
      }
      if (HasRelativeStopLoss) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RelativeStopLoss);
      }
      if (HasRelativeTakeProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RelativeTakeProfit);
      }
      if (HasGuaranteedStopLoss) {
        size += 1 + 1;
      }
      if (HasTrailingStopLoss) {
        size += 1 + 1;
      }
      if (HasStopTriggerMethod) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StopTriggerMethod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AmendOrderReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasOrderId) {
        OrderId = other.OrderId;
      }
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      if (other.HasLimitPrice) {
        LimitPrice = other.LimitPrice;
      }
      if (other.HasStopPrice) {
        StopPrice = other.StopPrice;
      }
      if (other.HasExpirationTimestamp) {
        ExpirationTimestamp = other.ExpirationTimestamp;
      }
      if (other.HasStopLoss) {
        StopLoss = other.StopLoss;
      }
      if (other.HasTakeProfit) {
        TakeProfit = other.TakeProfit;
      }
      if (other.HasSlippageInPoints) {
        SlippageInPoints = other.SlippageInPoints;
      }
      if (other.HasRelativeStopLoss) {
        RelativeStopLoss = other.RelativeStopLoss;
      }
      if (other.HasRelativeTakeProfit) {
        RelativeTakeProfit = other.RelativeTakeProfit;
      }
      if (other.HasGuaranteedStopLoss) {
        GuaranteedStopLoss = other.GuaranteedStopLoss;
      }
      if (other.HasTrailingStopLoss) {
        TrailingStopLoss = other.TrailingStopLoss;
      }
      if (other.HasStopTriggerMethod) {
        StopTriggerMethod = other.StopTriggerMethod;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            OrderId = input.ReadInt64();
            break;
          }
          case 32: {
            Volume = input.ReadInt64();
            break;
          }
          case 41: {
            LimitPrice = input.ReadDouble();
            break;
          }
          case 49: {
            StopPrice = input.ReadDouble();
            break;
          }
          case 56: {
            ExpirationTimestamp = input.ReadInt64();
            break;
          }
          case 65: {
            StopLoss = input.ReadDouble();
            break;
          }
          case 73: {
            TakeProfit = input.ReadDouble();
            break;
          }
          case 80: {
            SlippageInPoints = input.ReadInt32();
            break;
          }
          case 88: {
            RelativeStopLoss = input.ReadInt64();
            break;
          }
          case 96: {
            RelativeTakeProfit = input.ReadInt64();
            break;
          }
          case 104: {
            GuaranteedStopLoss = input.ReadBool();
            break;
          }
          case 112: {
            TrailingStopLoss = input.ReadBool();
            break;
          }
          case 120: {
            StopTriggerMethod = (OrderTriggerMethod) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            OrderId = input.ReadInt64();
            break;
          }
          case 32: {
            Volume = input.ReadInt64();
            break;
          }
          case 41: {
            LimitPrice = input.ReadDouble();
            break;
          }
          case 49: {
            StopPrice = input.ReadDouble();
            break;
          }
          case 56: {
            ExpirationTimestamp = input.ReadInt64();
            break;
          }
          case 65: {
            StopLoss = input.ReadDouble();
            break;
          }
          case 73: {
            TakeProfit = input.ReadDouble();
            break;
          }
          case 80: {
            SlippageInPoints = input.ReadInt32();
            break;
          }
          case 88: {
            RelativeStopLoss = input.ReadInt64();
            break;
          }
          case 96: {
            RelativeTakeProfit = input.ReadInt64();
            break;
          }
          case 104: {
            GuaranteedStopLoss = input.ReadBool();
            break;
          }
          case 112: {
            TrailingStopLoss = input.ReadBool();
            break;
          }
          case 120: {
            StopTriggerMethod = (OrderTriggerMethod) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for amending StopLoss and TakeProfit of existing position. Allowed only if the accessToken has "trade" permissions for the trading account. 
  /// </summary>
  public sealed partial class AmendPositionSLTPReq : pb::IMessage<AmendPositionSLTPReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AmendPositionSLTPReq> _parser = new pb::MessageParser<AmendPositionSLTPReq>(() => new AmendPositionSLTPReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AmendPositionSLTPReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[13]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmendPositionSLTPReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmendPositionSLTPReq(AmendPositionSLTPReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      positionId_ = other.positionId_;
      stopLoss_ = other.stopLoss_;
      takeProfit_ = other.takeProfit_;
      guaranteedStopLoss_ = other.guaranteedStopLoss_;
      trailingStopLoss_ = other.trailingStopLoss_;
      stopLossTriggerMethod_ = other.stopLossTriggerMethod_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmendPositionSLTPReq Clone() {
      return new AmendPositionSLTPReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaAmendPositionSltpReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "positionId" field.</summary>
    public const int PositionIdFieldNumber = 3;
    private readonly static long PositionIdDefaultValue = 0L;
  
    private long positionId_;
    /// <summary>
    /// The unique ID of the position to amend.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PositionId {
      get { if ((_hasBits0 & 4) != 0) { return positionId_; } else { return PositionIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        positionId_ = value;
      }
    }
    /// <summary>Gets whether the "positionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPositionId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "positionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPositionId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "stopLoss" field.</summary>
    public const int StopLossFieldNumber = 4;
    private readonly static double StopLossDefaultValue = 0D;
  
    private double stopLoss_;
    /// <summary>
    /// Absolute Stop Loss price (1.23456 for example).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StopLoss {
      get { if ((_hasBits0 & 8) != 0) { return stopLoss_; } else { return StopLossDefaultValue; } }
      set {
        _hasBits0 |= 8;
        stopLoss_ = value;
      }
    }
    /// <summary>Gets whether the "stopLoss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStopLoss {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "stopLoss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStopLoss() {
      _hasBits0 &= ~8;
    }
  
    /// <summary>Field number for the "takeProfit" field.</summary>
    public const int TakeProfitFieldNumber = 5;
    private readonly static double TakeProfitDefaultValue = 0D;
  
    private double takeProfit_;
    /// <summary>
    /// Absolute Take Profit price (1.26543 for example).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TakeProfit {
      get { if ((_hasBits0 & 16) != 0) { return takeProfit_; } else { return TakeProfitDefaultValue; } }
      set {
        _hasBits0 |= 16;
        takeProfit_ = value;
      }
    }
    /// <summary>Gets whether the "takeProfit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTakeProfit {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "takeProfit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTakeProfit() {
      _hasBits0 &= ~16;
    }
  
    /// <summary>Field number for the "guaranteedStopLoss" field.</summary>
    public const int GuaranteedStopLossFieldNumber = 7;
    private readonly static bool GuaranteedStopLossDefaultValue = false;
  
    private bool guaranteedStopLoss_;
    /// <summary>
    ///If TRUE then the Stop Loss is guaranteed. Available for the French Risk or the Guaranteed Stop Loss Accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GuaranteedStopLoss {
      get { if ((_hasBits0 & 32) != 0) { return guaranteedStopLoss_; } else { return GuaranteedStopLossDefaultValue; } }
      set {
        _hasBits0 |= 32;
        guaranteedStopLoss_ = value;
      }
    }
    /// <summary>Gets whether the "guaranteedStopLoss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuaranteedStopLoss {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "guaranteedStopLoss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuaranteedStopLoss() {
      _hasBits0 &= ~32;
    }
  
    /// <summary>Field number for the "trailingStopLoss" field.</summary>
    public const int TrailingStopLossFieldNumber = 8;
    private readonly static bool TrailingStopLossDefaultValue = false;
  
    private bool trailingStopLoss_;
    /// <summary>
    ///If TRUE then the Trailing Stop Loss is applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TrailingStopLoss {
      get { if ((_hasBits0 & 64) != 0) { return trailingStopLoss_; } else { return TrailingStopLossDefaultValue; } }
      set {
        _hasBits0 |= 64;
        trailingStopLoss_ = value;
      }
    }
    /// <summary>Gets whether the "trailingStopLoss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrailingStopLoss {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "trailingStopLoss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrailingStopLoss() {
      _hasBits0 &= ~64;
    }
  
    /// <summary>Field number for the "stopLossTriggerMethod" field.</summary>
    public const int StopLossTriggerMethodFieldNumber = 9;
    private readonly static OrderTriggerMethod StopLossTriggerMethodDefaultValue = OrderTriggerMethod.Trade;
  
    private OrderTriggerMethod stopLossTriggerMethod_;
    /// <summary>
    /// The Stop trigger method for the Stop Loss/Take Profit order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderTriggerMethod StopLossTriggerMethod {
      get { if ((_hasBits0 & 128) != 0) { return stopLossTriggerMethod_; } else { return StopLossTriggerMethodDefaultValue; } }
      set {
        _hasBits0 |= 128;
        stopLossTriggerMethod_ = value;
      }
    }
    /// <summary>Gets whether the "stopLossTriggerMethod" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStopLossTriggerMethod {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "stopLossTriggerMethod" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStopLossTriggerMethod() {
      _hasBits0 &= ~128;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AmendPositionSLTPReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AmendPositionSLTPReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (PositionId != other.PositionId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StopLoss, other.StopLoss)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TakeProfit, other.TakeProfit)) return false;
      if (GuaranteedStopLoss != other.GuaranteedStopLoss) return false;
      if (TrailingStopLoss != other.TrailingStopLoss) return false;
      if (StopLossTriggerMethod != other.StopLossTriggerMethod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasPositionId) hash ^= PositionId.GetHashCode();
      if (HasStopLoss) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StopLoss);
      if (HasTakeProfit) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TakeProfit);
      if (HasGuaranteedStopLoss) hash ^= GuaranteedStopLoss.GetHashCode();
      if (HasTrailingStopLoss) hash ^= TrailingStopLoss.GetHashCode();
      if (HasStopLossTriggerMethod) hash ^= StopLossTriggerMethod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(24);
        output.WriteInt64(PositionId);
      }
      if (HasStopLoss) {
        output.WriteRawTag(33);
        output.WriteDouble(StopLoss);
      }
      if (HasTakeProfit) {
        output.WriteRawTag(41);
        output.WriteDouble(TakeProfit);
      }
      if (HasGuaranteedStopLoss) {
        output.WriteRawTag(56);
        output.WriteBool(GuaranteedStopLoss);
      }
      if (HasTrailingStopLoss) {
        output.WriteRawTag(64);
        output.WriteBool(TrailingStopLoss);
      }
      if (HasStopLossTriggerMethod) {
        output.WriteRawTag(72);
        output.WriteEnum((int) StopLossTriggerMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(24);
        output.WriteInt64(PositionId);
      }
      if (HasStopLoss) {
        output.WriteRawTag(33);
        output.WriteDouble(StopLoss);
      }
      if (HasTakeProfit) {
        output.WriteRawTag(41);
        output.WriteDouble(TakeProfit);
      }
      if (HasGuaranteedStopLoss) {
        output.WriteRawTag(56);
        output.WriteBool(GuaranteedStopLoss);
      }
      if (HasTrailingStopLoss) {
        output.WriteRawTag(64);
        output.WriteBool(TrailingStopLoss);
      }
      if (HasStopLossTriggerMethod) {
        output.WriteRawTag(72);
        output.WriteEnum((int) StopLossTriggerMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasPositionId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PositionId);
      }
      if (HasStopLoss) {
        size += 1 + 8;
      }
      if (HasTakeProfit) {
        size += 1 + 8;
      }
      if (HasGuaranteedStopLoss) {
        size += 1 + 1;
      }
      if (HasTrailingStopLoss) {
        size += 1 + 1;
      }
      if (HasStopLossTriggerMethod) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StopLossTriggerMethod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AmendPositionSLTPReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasPositionId) {
        PositionId = other.PositionId;
      }
      if (other.HasStopLoss) {
        StopLoss = other.StopLoss;
      }
      if (other.HasTakeProfit) {
        TakeProfit = other.TakeProfit;
      }
      if (other.HasGuaranteedStopLoss) {
        GuaranteedStopLoss = other.GuaranteedStopLoss;
      }
      if (other.HasTrailingStopLoss) {
        TrailingStopLoss = other.TrailingStopLoss;
      }
      if (other.HasStopLossTriggerMethod) {
        StopLossTriggerMethod = other.StopLossTriggerMethod;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            PositionId = input.ReadInt64();
            break;
          }
          case 33: {
            StopLoss = input.ReadDouble();
            break;
          }
          case 41: {
            TakeProfit = input.ReadDouble();
            break;
          }
          case 56: {
            GuaranteedStopLoss = input.ReadBool();
            break;
          }
          case 64: {
            TrailingStopLoss = input.ReadBool();
            break;
          }
          case 72: {
            StopLossTriggerMethod = (OrderTriggerMethod) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            PositionId = input.ReadInt64();
            break;
          }
          case 33: {
            StopLoss = input.ReadDouble();
            break;
          }
          case 41: {
            TakeProfit = input.ReadDouble();
            break;
          }
          case 56: {
            GuaranteedStopLoss = input.ReadBool();
            break;
          }
          case 64: {
            TrailingStopLoss = input.ReadBool();
            break;
          }
          case 72: {
            StopLossTriggerMethod = (OrderTriggerMethod) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for closing or partially closing of an existing position. Allowed only if the accessToken has "trade" permissions for the trading account. 
  /// </summary>
  public sealed partial class ClosePositionReq : pb::IMessage<ClosePositionReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClosePositionReq> _parser = new pb::MessageParser<ClosePositionReq>(() => new ClosePositionReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClosePositionReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[14]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClosePositionReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClosePositionReq(ClosePositionReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      positionId_ = other.positionId_;
      volume_ = other.volume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClosePositionReq Clone() {
      return new ClosePositionReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaClosePositionReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "positionId" field.</summary>
    public const int PositionIdFieldNumber = 3;
    private readonly static long PositionIdDefaultValue = 0L;
  
    private long positionId_;
    /// <summary>
    /// The unique ID of the position to close.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PositionId {
      get { if ((_hasBits0 & 4) != 0) { return positionId_; } else { return PositionIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        positionId_ = value;
      }
    }
    /// <summary>Gets whether the "positionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPositionId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "positionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPositionId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 4;
    private readonly static long VolumeDefaultValue = 0L;
  
    private long volume_;
    /// <summary>
    /// Volume to close, represented in 0.01 of a unit (e.g. cents).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Volume {
      get { if ((_hasBits0 & 8) != 0) { return volume_; } else { return VolumeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        volume_ = value;
      }
    }
    /// <summary>Gets whether the "volume" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVolume {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "volume" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVolume() {
      _hasBits0 &= ~8;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClosePositionReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClosePositionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (PositionId != other.PositionId) return false;
      if (Volume != other.Volume) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasPositionId) hash ^= PositionId.GetHashCode();
      if (HasVolume) hash ^= Volume.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(24);
        output.WriteInt64(PositionId);
      }
      if (HasVolume) {
        output.WriteRawTag(32);
        output.WriteInt64(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(24);
        output.WriteInt64(PositionId);
      }
      if (HasVolume) {
        output.WriteRawTag(32);
        output.WriteInt64(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasPositionId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PositionId);
      }
      if (HasVolume) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Volume);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClosePositionReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasPositionId) {
        PositionId = other.PositionId;
      }
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            PositionId = input.ReadInt64();
            break;
          }
          case 32: {
            Volume = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            PositionId = input.ReadInt64();
            break;
          }
          case 32: {
            Volume = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for the list of assets available for a trader's account. 
  /// </summary>
  public sealed partial class AssetListReq : pb::IMessage<AssetListReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AssetListReq> _parser = new pb::MessageParser<AssetListReq>(() => new AssetListReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AssetListReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[16]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssetListReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssetListReq(AssetListReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssetListReq Clone() {
      return new AssetListReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaAssetListReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AssetListReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AssetListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AssetListReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for a list of symbols available for a trading account. Symbol entries are returned with the limited set of fields. 
  /// </summary>
  public sealed partial class SymbolsListReq : pb::IMessage<SymbolsListReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SymbolsListReq> _parser = new pb::MessageParser<SymbolsListReq>(() => new SymbolsListReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SymbolsListReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[18]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolsListReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolsListReq(SymbolsListReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      includeArchivedSymbols_ = other.includeArchivedSymbols_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolsListReq Clone() {
      return new SymbolsListReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaSymbolsListReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "includeArchivedSymbols" field.</summary>
    public const int IncludeArchivedSymbolsFieldNumber = 3;
    private readonly static bool IncludeArchivedSymbolsDefaultValue = false;
  
    private bool includeArchivedSymbols_;
    /// <summary>
    /// Whether to include old archived symbols into response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeArchivedSymbols {
      get { if ((_hasBits0 & 4) != 0) { return includeArchivedSymbols_; } else { return IncludeArchivedSymbolsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        includeArchivedSymbols_ = value;
      }
    }
    /// <summary>Gets whether the "includeArchivedSymbols" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludeArchivedSymbols {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "includeArchivedSymbols" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludeArchivedSymbols() {
      _hasBits0 &= ~4;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SymbolsListReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SymbolsListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (IncludeArchivedSymbols != other.IncludeArchivedSymbols) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasIncludeArchivedSymbols) hash ^= IncludeArchivedSymbols.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasIncludeArchivedSymbols) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeArchivedSymbols);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasIncludeArchivedSymbols) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeArchivedSymbols);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasIncludeArchivedSymbols) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SymbolsListReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasIncludeArchivedSymbols) {
        IncludeArchivedSymbols = other.IncludeArchivedSymbols;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            IncludeArchivedSymbols = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            IncludeArchivedSymbols = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting a full symbol entity. 
  /// </summary>
  public sealed partial class SymbolByIdReq : pb::IMessage<SymbolByIdReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SymbolByIdReq> _parser = new pb::MessageParser<SymbolByIdReq>(() => new SymbolByIdReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SymbolByIdReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[20]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolByIdReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolByIdReq(SymbolByIdReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      symbolId_ = other.symbolId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolByIdReq Clone() {
      return new SymbolByIdReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaSymbolByIdReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_symbolId_codec
        = pb::FieldCodec.ForInt64(24);
    private readonly pbc::RepeatedField<long> symbolId_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Unique identifier of the symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> SymbolId {
      get { return symbolId_; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SymbolByIdReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SymbolByIdReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if(!symbolId_.Equals(other.symbolId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      hash ^= symbolId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(output, _repeated_symbolId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(ref output, _repeated_symbolId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      size += symbolId_.CalculateSize(_repeated_symbolId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SymbolByIdReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      symbolId_.Add(other.symbolId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(input, _repeated_symbolId_codec);
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(ref input, _repeated_symbolId_codec);
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting a conversion chain between two assets that consists of several symbols. Use when no direct quote is available 
  /// </summary>
  public sealed partial class SymbolsForConversionReq : pb::IMessage<SymbolsForConversionReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SymbolsForConversionReq> _parser = new pb::MessageParser<SymbolsForConversionReq>(() => new SymbolsForConversionReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SymbolsForConversionReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[22]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolsForConversionReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolsForConversionReq(SymbolsForConversionReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      firstAssetId_ = other.firstAssetId_;
      lastAssetId_ = other.lastAssetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolsForConversionReq Clone() {
      return new SymbolsForConversionReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaSymbolsForConversionReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "firstAssetId" field.</summary>
    public const int FirstAssetIdFieldNumber = 3;
    private readonly static long FirstAssetIdDefaultValue = 0L;
  
    private long firstAssetId_;
    /// <summary>
    /// The ID of the firs asset in the conversation chain. e.g.: for EUR/USD the firstAssetId is EUR ID and lastAssetId is USD ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FirstAssetId {
      get { if ((_hasBits0 & 4) != 0) { return firstAssetId_; } else { return FirstAssetIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        firstAssetId_ = value;
      }
    }
    /// <summary>Gets whether the "firstAssetId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFirstAssetId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "firstAssetId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFirstAssetId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "lastAssetId" field.</summary>
    public const int LastAssetIdFieldNumber = 4;
    private readonly static long LastAssetIdDefaultValue = 0L;
  
    private long lastAssetId_;
    /// <summary>
    /// The ID of the last asset in the conversation chain. e.g.: for EUR/USD the firstAssetId is EUR ID and lastAssetId is USD ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastAssetId {
      get { if ((_hasBits0 & 8) != 0) { return lastAssetId_; } else { return LastAssetIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        lastAssetId_ = value;
      }
    }
    /// <summary>Gets whether the "lastAssetId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastAssetId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "lastAssetId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastAssetId() {
      _hasBits0 &= ~8;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SymbolsForConversionReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SymbolsForConversionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (FirstAssetId != other.FirstAssetId) return false;
      if (LastAssetId != other.LastAssetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasFirstAssetId) hash ^= FirstAssetId.GetHashCode();
      if (HasLastAssetId) hash ^= LastAssetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasFirstAssetId) {
        output.WriteRawTag(24);
        output.WriteInt64(FirstAssetId);
      }
      if (HasLastAssetId) {
        output.WriteRawTag(32);
        output.WriteInt64(LastAssetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasFirstAssetId) {
        output.WriteRawTag(24);
        output.WriteInt64(FirstAssetId);
      }
      if (HasLastAssetId) {
        output.WriteRawTag(32);
        output.WriteInt64(LastAssetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasFirstAssetId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FirstAssetId);
      }
      if (HasLastAssetId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastAssetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SymbolsForConversionReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasFirstAssetId) {
        FirstAssetId = other.FirstAssetId;
      }
      if (other.HasLastAssetId) {
        LastAssetId = other.LastAssetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            FirstAssetId = input.ReadInt64();
            break;
          }
          case 32: {
            LastAssetId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            FirstAssetId = input.ReadInt64();
            break;
          }
          case 32: {
            LastAssetId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for a list of asset classes available for the trader's account. 
  /// </summary>
  public sealed partial class AssetClassListReq : pb::IMessage<AssetClassListReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AssetClassListReq> _parser = new pb::MessageParser<AssetClassListReq>(() => new AssetClassListReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AssetClassListReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[25]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssetClassListReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssetClassListReq(AssetClassListReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssetClassListReq Clone() {
      return new AssetClassListReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaAssetClassListReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AssetClassListReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AssetClassListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AssetClassListReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting data of Trader's Account. 
  /// </summary>
  public sealed partial class TraderReq : pb::IMessage<TraderReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TraderReq> _parser = new pb::MessageParser<TraderReq>(() => new TraderReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TraderReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[27]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraderReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraderReq(TraderReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraderReq Clone() {
      return new TraderReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaTraderReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TraderReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TraderReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TraderReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting Trader's current open positions and pending orders data. 
  /// </summary>
  public sealed partial class ReconcileReq : pb::IMessage<ReconcileReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReconcileReq> _parser = new pb::MessageParser<ReconcileReq>(() => new ReconcileReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReconcileReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[30]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReconcileReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReconcileReq(ReconcileReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReconcileReq Clone() {
      return new ReconcileReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaReconcileReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReconcileReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReconcileReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReconcileReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting Trader's deals historical data (execution details). 
  /// </summary>
  public sealed partial class DealListReq : pb::IMessage<DealListReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DealListReq> _parser = new pb::MessageParser<DealListReq>(() => new DealListReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DealListReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[33]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealListReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealListReq(DealListReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      fromTimestamp_ = other.fromTimestamp_;
      toTimestamp_ = other.toTimestamp_;
      maxRows_ = other.maxRows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealListReq Clone() {
      return new DealListReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaDealListReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "fromTimestamp" field.</summary>
    public const int FromTimestampFieldNumber = 3;
    private readonly static long FromTimestampDefaultValue = 0L;
  
    private long fromTimestamp_;
    /// <summary>
    /// The UNIX time from which the search starts >=0 (1-1-1970). Validation: toTimestamp - fromTimestamp &lt;= 604800000 (1 week).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FromTimestamp {
      get { if ((_hasBits0 & 4) != 0) { return fromTimestamp_; } else { return FromTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fromTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "fromTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromTimestamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fromTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromTimestamp() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "toTimestamp" field.</summary>
    public const int ToTimestampFieldNumber = 4;
    private readonly static long ToTimestampDefaultValue = 0L;
  
    private long toTimestamp_;
    /// <summary>
    /// The UNIX time where to stop searching &lt;= 2147483646000 (19-1-2038).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ToTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return toTimestamp_; } else { return ToTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        toTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "toTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "toTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToTimestamp() {
      _hasBits0 &= ~8;
    }
  
    /// <summary>Field number for the "maxRows" field.</summary>
    public const int MaxRowsFieldNumber = 5;
    private readonly static int MaxRowsDefaultValue = 0;
  
    private int maxRows_;
    /// <summary>
    /// The maximum number of the deals to return.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxRows {
      get { if ((_hasBits0 & 16) != 0) { return maxRows_; } else { return MaxRowsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        maxRows_ = value;
      }
    }
    /// <summary>Gets whether the "maxRows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxRows {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "maxRows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxRows() {
      _hasBits0 &= ~16;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DealListReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DealListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (FromTimestamp != other.FromTimestamp) return false;
      if (ToTimestamp != other.ToTimestamp) return false;
      if (MaxRows != other.MaxRows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasFromTimestamp) hash ^= FromTimestamp.GetHashCode();
      if (HasToTimestamp) hash ^= ToTimestamp.GetHashCode();
      if (HasMaxRows) hash ^= MaxRows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(ToTimestamp);
      }
      if (HasMaxRows) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxRows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(ToTimestamp);
      }
      if (HasMaxRows) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxRows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromTimestamp);
      }
      if (HasToTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToTimestamp);
      }
      if (HasMaxRows) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxRows);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DealListReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasFromTimestamp) {
        FromTimestamp = other.FromTimestamp;
      }
      if (other.HasToTimestamp) {
        ToTimestamp = other.ToTimestamp;
      }
      if (other.HasMaxRows) {
        MaxRows = other.MaxRows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            ToTimestamp = input.ReadInt64();
            break;
          }
          case 40: {
            MaxRows = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            ToTimestamp = input.ReadInt64();
            break;
          }
          case 40: {
            MaxRows = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting Trader's closed orders filtered by timestamp 
  /// </summary>
  public sealed partial class OrderListReq : pb::IMessage<OrderListReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderListReq> _parser = new pb::MessageParser<OrderListReq>(() => new OrderListReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OrderListReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[35]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderListReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderListReq(OrderListReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      fromTimestamp_ = other.fromTimestamp_;
      toTimestamp_ = other.toTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderListReq Clone() {
      return new OrderListReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaOrderListReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "fromTimestamp" field.</summary>
    public const int FromTimestampFieldNumber = 3;
    private readonly static long FromTimestampDefaultValue = 0L;
  
    private long fromTimestamp_;
    /// <summary>
    /// The UNIX time from which the search starts >=0 (1-1-1970). Validation: toTimestamp - fromTimestamp &lt;= 604800000 (1 week).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FromTimestamp {
      get { if ((_hasBits0 & 4) != 0) { return fromTimestamp_; } else { return FromTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fromTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "fromTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromTimestamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fromTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromTimestamp() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "toTimestamp" field.</summary>
    public const int ToTimestampFieldNumber = 4;
    private readonly static long ToTimestampDefaultValue = 0L;
  
    private long toTimestamp_;
    /// <summary>
    /// The UNIX time where to stop searching &lt;= 2147483646000 (19-1-2038).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ToTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return toTimestamp_; } else { return ToTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        toTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "toTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "toTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToTimestamp() {
      _hasBits0 &= ~8;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OrderListReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OrderListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (FromTimestamp != other.FromTimestamp) return false;
      if (ToTimestamp != other.ToTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasFromTimestamp) hash ^= FromTimestamp.GetHashCode();
      if (HasToTimestamp) hash ^= ToTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(ToTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(ToTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromTimestamp);
      }
      if (HasToTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OrderListReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasFromTimestamp) {
        FromTimestamp = other.FromTimestamp;
      }
      if (other.HasToTimestamp) {
        ToTimestamp = other.ToTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            ToTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            ToTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting the margin estimate. Can be used before sending a new order request. 
  /// </summary>
  public sealed partial class ExpectedMarginReq : pb::IMessage<ExpectedMarginReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExpectedMarginReq> _parser = new pb::MessageParser<ExpectedMarginReq>(() => new ExpectedMarginReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExpectedMarginReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[37]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExpectedMarginReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExpectedMarginReq(ExpectedMarginReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      symbolId_ = other.symbolId_;
      volume_ = other.volume_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExpectedMarginReq Clone() {
      return new ExpectedMarginReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaExpectedMarginReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 3;
    private readonly static long SymbolIdDefaultValue = 0L;
  
    private long symbolId_;
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SymbolId {
      get { if ((_hasBits0 & 4) != 0) { return symbolId_; } else { return SymbolIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        symbolId_ = value;
      }
    }
    /// <summary>Gets whether the "symbolId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSymbolId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "symbolId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSymbolId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 4;
    private static readonly pb::FieldCodec<long> _repeated_volume_codec
        = pb::FieldCodec.ForInt64(32);
    private readonly pbc::RepeatedField<long> volume_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Volume represented in 0.01 of a unit (e.g. cents).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> Volume {
      get { return volume_; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExpectedMarginReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExpectedMarginReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (SymbolId != other.SymbolId) return false;
      if(!volume_.Equals(other.volume_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasSymbolId) hash ^= SymbolId.GetHashCode();
      hash ^= volume_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        output.WriteRawTag(24);
        output.WriteInt64(SymbolId);
      }
      volume_.WriteTo(output, _repeated_volume_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        output.WriteRawTag(24);
        output.WriteInt64(SymbolId);
      }
      volume_.WriteTo(ref output, _repeated_volume_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SymbolId);
      }
      size += volume_.CalculateSize(_repeated_volume_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExpectedMarginReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      volume_.Add(other.volume_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            SymbolId = input.ReadInt64();
            break;
          }
          case 34:
          case 32: {
            volume_.AddEntriesFrom(input, _repeated_volume_codec);
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            SymbolId = input.ReadInt64();
            break;
          }
          case 34:
          case 32: {
            volume_.AddEntriesFrom(ref input, _repeated_volume_codec);
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting Trader's historical data of deposits and withdrawals. 
  /// </summary>
  public sealed partial class CashFlowHistoryListReq : pb::IMessage<CashFlowHistoryListReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CashFlowHistoryListReq> _parser = new pb::MessageParser<CashFlowHistoryListReq>(() => new CashFlowHistoryListReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CashFlowHistoryListReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[40]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CashFlowHistoryListReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CashFlowHistoryListReq(CashFlowHistoryListReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      fromTimestamp_ = other.fromTimestamp_;
      toTimestamp_ = other.toTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CashFlowHistoryListReq Clone() {
      return new CashFlowHistoryListReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaCashFlowHistoryListReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "fromTimestamp" field.</summary>
    public const int FromTimestampFieldNumber = 3;
    private readonly static long FromTimestampDefaultValue = 0L;
  
    private long fromTimestamp_;
    /// <summary>
    /// The UNIX time from which the search starts >=0 (1-1-1970). Validation: toTimestamp - fromTimestamp &lt;= 604800000 (1 week).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FromTimestamp {
      get { if ((_hasBits0 & 4) != 0) { return fromTimestamp_; } else { return FromTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fromTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "fromTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromTimestamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fromTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromTimestamp() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "toTimestamp" field.</summary>
    public const int ToTimestampFieldNumber = 4;
    private readonly static long ToTimestampDefaultValue = 0L;
  
    private long toTimestamp_;
    /// <summary>
    /// The UNIX time where to stop searching &lt;= 2147483646000 (19-1-2038).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ToTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return toTimestamp_; } else { return ToTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        toTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "toTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "toTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToTimestamp() {
      _hasBits0 &= ~8;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CashFlowHistoryListReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CashFlowHistoryListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (FromTimestamp != other.FromTimestamp) return false;
      if (ToTimestamp != other.ToTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasFromTimestamp) hash ^= FromTimestamp.GetHashCode();
      if (HasToTimestamp) hash ^= ToTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(ToTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(ToTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromTimestamp);
      }
      if (HasToTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CashFlowHistoryListReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasFromTimestamp) {
        FromTimestamp = other.FromTimestamp;
      }
      if (other.HasToTimestamp) {
        ToTimestamp = other.ToTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            ToTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            ToTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting the list of granted trader's account for the access token. 
  /// </summary>
  public sealed partial class GetAccountListByAccessTokenReq : pb::IMessage<GetAccountListByAccessTokenReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAccountListByAccessTokenReq> _parser = new pb::MessageParser<GetAccountListByAccessTokenReq>(() => new GetAccountListByAccessTokenReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetAccountListByAccessTokenReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[42]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAccountListByAccessTokenReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAccountListByAccessTokenReq(GetAccountListByAccessTokenReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      accessToken_ = other.accessToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetAccountListByAccessTokenReq Clone() {
      return new GetAccountListByAccessTokenReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaGetAccountsByAccessTokenReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "accessToken" field.</summary>
    public const int AccessTokenFieldNumber = 2;
    private readonly static string AccessTokenDefaultValue = "";
  
    private string accessToken_;
    /// <summary>
    /// The Access Token issued for providing access to the Trader's Account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccessToken {
      get { return accessToken_ ?? AccessTokenDefaultValue; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accessToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccessToken {
      get { return accessToken_ != null; }
    }
    /// <summary>Clears the value of the "accessToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccessToken() {
      accessToken_ = null;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetAccountListByAccessTokenReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetAccountListByAccessTokenReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (AccessToken != other.AccessToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasAccessToken) hash ^= AccessToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasAccessToken) {
        output.WriteRawTag(18);
        output.WriteString(AccessToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasAccessToken) {
        output.WriteRawTag(18);
        output.WriteString(AccessToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasAccessToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetAccountListByAccessTokenReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasAccessToken) {
        AccessToken = other.AccessToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request to refresh the access token using refresh token of granted trader's account. 
  /// </summary>
  public sealed partial class RefreshTokenReq : pb::IMessage<RefreshTokenReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RefreshTokenReq> _parser = new pb::MessageParser<RefreshTokenReq>(() => new RefreshTokenReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RefreshTokenReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[44]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefreshTokenReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefreshTokenReq(RefreshTokenReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      refreshToken_ = other.refreshToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RefreshTokenReq Clone() {
      return new RefreshTokenReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaRefreshTokenReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "refreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 2;
    private readonly static string RefreshTokenDefaultValue = "";
  
    private string refreshToken_;
    /// <summary>
    /// The Refresh Token issued for updating Access Token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RefreshToken {
      get { return refreshToken_ ?? RefreshTokenDefaultValue; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "refreshToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRefreshToken {
      get { return refreshToken_ != null; }
    }
    /// <summary>Clears the value of the "refreshToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRefreshToken() {
      refreshToken_ = null;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RefreshTokenReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RefreshTokenReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (RefreshToken != other.RefreshToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasRefreshToken) hash ^= RefreshToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasRefreshToken) {
        output.WriteRawTag(18);
        output.WriteString(RefreshToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasRefreshToken) {
        output.WriteRawTag(18);
        output.WriteString(RefreshToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasRefreshToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RefreshTokenReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasRefreshToken) {
        RefreshToken = other.RefreshToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            RefreshToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            RefreshToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for subscribing on spot events of the specified symbol. 
  /// </summary>
  public sealed partial class SubscribeSpotsReq : pb::IMessage<SubscribeSpotsReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeSpotsReq> _parser = new pb::MessageParser<SubscribeSpotsReq>(() => new SubscribeSpotsReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeSpotsReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[46]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeSpotsReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeSpotsReq(SubscribeSpotsReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      symbolId_ = other.symbolId_.Clone();
      subscribeToSpotTimestamp_ = other.subscribeToSpotTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeSpotsReq Clone() {
      return new SubscribeSpotsReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaSubscribeSpotsReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_symbolId_codec
        = pb::FieldCodec.ForInt64(24);
    private readonly pbc::RepeatedField<long> symbolId_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> SymbolId {
      get { return symbolId_; }
    }
  
    /// <summary>Field number for the "subscribeToSpotTimestamp" field.</summary>
    public const int SubscribeToSpotTimestampFieldNumber = 4;
    private readonly static bool SubscribeToSpotTimestampDefaultValue = false;
  
    private bool subscribeToSpotTimestamp_;
    /// <summary>
    /// If TRUE you will also receive the timestamp in SpotEvent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SubscribeToSpotTimestamp {
      get { if ((_hasBits0 & 4) != 0) { return subscribeToSpotTimestamp_; } else { return SubscribeToSpotTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        subscribeToSpotTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "subscribeToSpotTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubscribeToSpotTimestamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "subscribeToSpotTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubscribeToSpotTimestamp() {
      _hasBits0 &= ~4;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeSpotsReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeSpotsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if(!symbolId_.Equals(other.symbolId_)) return false;
      if (SubscribeToSpotTimestamp != other.SubscribeToSpotTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      hash ^= symbolId_.GetHashCode();
      if (HasSubscribeToSpotTimestamp) hash ^= SubscribeToSpotTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(output, _repeated_symbolId_codec);
      if (HasSubscribeToSpotTimestamp) {
        output.WriteRawTag(32);
        output.WriteBool(SubscribeToSpotTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(ref output, _repeated_symbolId_codec);
      if (HasSubscribeToSpotTimestamp) {
        output.WriteRawTag(32);
        output.WriteBool(SubscribeToSpotTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      size += symbolId_.CalculateSize(_repeated_symbolId_codec);
      if (HasSubscribeToSpotTimestamp) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeSpotsReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      symbolId_.Add(other.symbolId_);
      if (other.HasSubscribeToSpotTimestamp) {
        SubscribeToSpotTimestamp = other.SubscribeToSpotTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(input, _repeated_symbolId_codec);
            break;
          }
          case 32: {
            SubscribeToSpotTimestamp = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(ref input, _repeated_symbolId_codec);
            break;
          }
          case 32: {
            SubscribeToSpotTimestamp = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for unsubscribing from the spot events of the specified symbol. 
  /// </summary>
  public sealed partial class UnsubscribeSpotsReq : pb::IMessage<UnsubscribeSpotsReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnsubscribeSpotsReq> _parser = new pb::MessageParser<UnsubscribeSpotsReq>(() => new UnsubscribeSpotsReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnsubscribeSpotsReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[48]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnsubscribeSpotsReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnsubscribeSpotsReq(UnsubscribeSpotsReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      symbolId_ = other.symbolId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnsubscribeSpotsReq Clone() {
      return new UnsubscribeSpotsReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaUnsubscribeSpotsReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_symbolId_codec
        = pb::FieldCodec.ForInt64(24);
    private readonly pbc::RepeatedField<long> symbolId_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> SymbolId {
      get { return symbolId_; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeSpotsReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnsubscribeSpotsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if(!symbolId_.Equals(other.symbolId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      hash ^= symbolId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(output, _repeated_symbolId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(ref output, _repeated_symbolId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      size += symbolId_.CalculateSize(_repeated_symbolId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnsubscribeSpotsReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      symbolId_.Add(other.symbolId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(input, _repeated_symbolId_codec);
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(ref input, _repeated_symbolId_codec);
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for subscribing for live trend bars. Requires subscription on the spot events, see SubscribeSpotsReq. 
  /// </summary>
  public sealed partial class SubscribeLiveTrendbarReq : pb::IMessage<SubscribeLiveTrendbarReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeLiveTrendbarReq> _parser = new pb::MessageParser<SubscribeLiveTrendbarReq>(() => new SubscribeLiveTrendbarReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeLiveTrendbarReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[51]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeLiveTrendbarReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeLiveTrendbarReq(SubscribeLiveTrendbarReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      period_ = other.period_;
      symbolId_ = other.symbolId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeLiveTrendbarReq Clone() {
      return new SubscribeLiveTrendbarReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaSubscribeLiveTrendbarReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 3;
    private readonly static TrendbarPeriod PeriodDefaultValue = TrendbarPeriod.M1;
  
    private TrendbarPeriod period_;
    /// <summary>
    /// Specifies period of trend bar series (e.g. M1, M10, etc.).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrendbarPeriod Period {
      get { if ((_hasBits0 & 4) != 0) { return period_; } else { return PeriodDefaultValue; } }
      set {
        _hasBits0 |= 4;
        period_ = value;
      }
    }
    /// <summary>Gets whether the "period" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPeriod {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "period" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPeriod() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 4;
    private readonly static long SymbolIdDefaultValue = 0L;
  
    private long symbolId_;
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SymbolId {
      get { if ((_hasBits0 & 8) != 0) { return symbolId_; } else { return SymbolIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        symbolId_ = value;
      }
    }
    /// <summary>Gets whether the "symbolId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSymbolId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "symbolId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSymbolId() {
      _hasBits0 &= ~8;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeLiveTrendbarReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeLiveTrendbarReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (Period != other.Period) return false;
      if (SymbolId != other.SymbolId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasPeriod) hash ^= Period.GetHashCode();
      if (HasSymbolId) hash ^= SymbolId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPeriod) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Period);
      }
      if (HasSymbolId) {
        output.WriteRawTag(32);
        output.WriteInt64(SymbolId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPeriod) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Period);
      }
      if (HasSymbolId) {
        output.WriteRawTag(32);
        output.WriteInt64(SymbolId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasPeriod) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Period);
      }
      if (HasSymbolId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SymbolId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeLiveTrendbarReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasPeriod) {
        Period = other.Period;
      }
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            Period = (TrendbarPeriod) input.ReadEnum();
            break;
          }
          case 32: {
            SymbolId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            Period = (TrendbarPeriod) input.ReadEnum();
            break;
          }
          case 32: {
            SymbolId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for unsubscribing from the live trend bars. 
  /// </summary>
  public sealed partial class UnsubscribeLiveTrendbarReq : pb::IMessage<UnsubscribeLiveTrendbarReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnsubscribeLiveTrendbarReq> _parser = new pb::MessageParser<UnsubscribeLiveTrendbarReq>(() => new UnsubscribeLiveTrendbarReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnsubscribeLiveTrendbarReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[53]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnsubscribeLiveTrendbarReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnsubscribeLiveTrendbarReq(UnsubscribeLiveTrendbarReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      period_ = other.period_;
      symbolId_ = other.symbolId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnsubscribeLiveTrendbarReq Clone() {
      return new UnsubscribeLiveTrendbarReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaUnsubscribeLiveTrendbarReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 3;
    private readonly static TrendbarPeriod PeriodDefaultValue = TrendbarPeriod.M1;
  
    private TrendbarPeriod period_;
    /// <summary>
    /// Specifies period of trend bar series (e.g. M1, M10, etc.).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrendbarPeriod Period {
      get { if ((_hasBits0 & 4) != 0) { return period_; } else { return PeriodDefaultValue; } }
      set {
        _hasBits0 |= 4;
        period_ = value;
      }
    }
    /// <summary>Gets whether the "period" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPeriod {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "period" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPeriod() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 4;
    private readonly static long SymbolIdDefaultValue = 0L;
  
    private long symbolId_;
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SymbolId {
      get { if ((_hasBits0 & 8) != 0) { return symbolId_; } else { return SymbolIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        symbolId_ = value;
      }
    }
    /// <summary>Gets whether the "symbolId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSymbolId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "symbolId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSymbolId() {
      _hasBits0 &= ~8;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeLiveTrendbarReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnsubscribeLiveTrendbarReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (Period != other.Period) return false;
      if (SymbolId != other.SymbolId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasPeriod) hash ^= Period.GetHashCode();
      if (HasSymbolId) hash ^= SymbolId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPeriod) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Period);
      }
      if (HasSymbolId) {
        output.WriteRawTag(32);
        output.WriteInt64(SymbolId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPeriod) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Period);
      }
      if (HasSymbolId) {
        output.WriteRawTag(32);
        output.WriteInt64(SymbolId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasPeriod) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Period);
      }
      if (HasSymbolId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SymbolId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnsubscribeLiveTrendbarReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasPeriod) {
        Period = other.Period;
      }
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            Period = (TrendbarPeriod) input.ReadEnum();
            break;
          }
          case 32: {
            SymbolId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            Period = (TrendbarPeriod) input.ReadEnum();
            break;
          }
          case 32: {
            SymbolId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting historical trend bars for the symbol. 
  /// </summary>
  public sealed partial class GetTrendbarsReq : pb::IMessage<GetTrendbarsReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTrendbarsReq> _parser = new pb::MessageParser<GetTrendbarsReq>(() => new GetTrendbarsReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTrendbarsReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[55]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTrendbarsReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTrendbarsReq(GetTrendbarsReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      fromTimestamp_ = other.fromTimestamp_;
      toTimestamp_ = other.toTimestamp_;
      period_ = other.period_;
      symbolId_ = other.symbolId_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTrendbarsReq Clone() {
      return new GetTrendbarsReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaGetTrendbarsReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "fromTimestamp" field.</summary>
    public const int FromTimestampFieldNumber = 3;
    private readonly static long FromTimestampDefaultValue = 0L;
  
    private long fromTimestamp_;
    /// <summary>
    /// The exact time of starting the search in milliseconds. Must be bigger or equal to zero (1-1-1970). Validation: toTimestamp - fromTimestamp &lt;= X, where X depends on series period: M1, M2, M3, M4, M5: 302400000 (5 weeks); M10, M15, M30, H1: 21168000000 (35 weeks), H4, H12, D1: 31622400000 (1 year); W1, MN1: 158112000000 (5 years).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FromTimestamp {
      get { if ((_hasBits0 & 4) != 0) { return fromTimestamp_; } else { return FromTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fromTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "fromTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromTimestamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fromTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromTimestamp() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "toTimestamp" field.</summary>
    public const int ToTimestampFieldNumber = 4;
    private readonly static long ToTimestampDefaultValue = 0L;
  
    private long toTimestamp_;
    /// <summary>
    /// The exact time of finishing the search in milliseconds. Smaller or equal to 2147483646000 (19-1-2038).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ToTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return toTimestamp_; } else { return ToTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        toTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "toTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "toTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToTimestamp() {
      _hasBits0 &= ~8;
    }
  
    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 5;
    private readonly static TrendbarPeriod PeriodDefaultValue = TrendbarPeriod.M1;
  
    private TrendbarPeriod period_;
    /// <summary>
    /// Specifies period of trend bar series (e.g. M1, M10, etc.).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrendbarPeriod Period {
      get { if ((_hasBits0 & 16) != 0) { return period_; } else { return PeriodDefaultValue; } }
      set {
        _hasBits0 |= 16;
        period_ = value;
      }
    }
    /// <summary>Gets whether the "period" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPeriod {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "period" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPeriod() {
      _hasBits0 &= ~16;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 6;
    private readonly static long SymbolIdDefaultValue = 0L;
  
    private long symbolId_;
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SymbolId {
      get { if ((_hasBits0 & 32) != 0) { return symbolId_; } else { return SymbolIdDefaultValue; } }
      set {
        _hasBits0 |= 32;
        symbolId_ = value;
      }
    }
    /// <summary>Gets whether the "symbolId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSymbolId {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "symbolId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSymbolId() {
      _hasBits0 &= ~32;
    }
  
    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 7;
    private readonly static uint CountDefaultValue = 0;
  
    private uint count_;
    /// <summary>
    /// Limit number of trend bars in response back from toTimestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Count {
      get { if ((_hasBits0 & 64) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 64;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~64;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTrendbarsReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTrendbarsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (FromTimestamp != other.FromTimestamp) return false;
      if (ToTimestamp != other.ToTimestamp) return false;
      if (Period != other.Period) return false;
      if (SymbolId != other.SymbolId) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasFromTimestamp) hash ^= FromTimestamp.GetHashCode();
      if (HasToTimestamp) hash ^= ToTimestamp.GetHashCode();
      if (HasPeriod) hash ^= Period.GetHashCode();
      if (HasSymbolId) hash ^= SymbolId.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(ToTimestamp);
      }
      if (HasPeriod) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Period);
      }
      if (HasSymbolId) {
        output.WriteRawTag(48);
        output.WriteInt64(SymbolId);
      }
      if (HasCount) {
        output.WriteRawTag(56);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(ToTimestamp);
      }
      if (HasPeriod) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Period);
      }
      if (HasSymbolId) {
        output.WriteRawTag(48);
        output.WriteInt64(SymbolId);
      }
      if (HasCount) {
        output.WriteRawTag(56);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasFromTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromTimestamp);
      }
      if (HasToTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToTimestamp);
      }
      if (HasPeriod) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Period);
      }
      if (HasSymbolId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SymbolId);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTrendbarsReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasFromTimestamp) {
        FromTimestamp = other.FromTimestamp;
      }
      if (other.HasToTimestamp) {
        ToTimestamp = other.ToTimestamp;
      }
      if (other.HasPeriod) {
        Period = other.Period;
      }
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            ToTimestamp = input.ReadInt64();
            break;
          }
          case 40: {
            Period = (TrendbarPeriod) input.ReadEnum();
            break;
          }
          case 48: {
            SymbolId = input.ReadInt64();
            break;
          }
          case 56: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            ToTimestamp = input.ReadInt64();
            break;
          }
          case 40: {
            Period = (TrendbarPeriod) input.ReadEnum();
            break;
          }
          case 48: {
            SymbolId = input.ReadInt64();
            break;
          }
          case 56: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting historical tick data for the symbol. 
  /// </summary>
  public sealed partial class GetTickDataReq : pb::IMessage<GetTickDataReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTickDataReq> _parser = new pb::MessageParser<GetTickDataReq>(() => new GetTickDataReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTickDataReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[57]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTickDataReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTickDataReq(GetTickDataReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      symbolId_ = other.symbolId_;
      type_ = other.type_;
      fromTimestamp_ = other.fromTimestamp_;
      toTimestamp_ = other.toTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTickDataReq Clone() {
      return new GetTickDataReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaGetTickdataReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 3;
    private readonly static long SymbolIdDefaultValue = 0L;
  
    private long symbolId_;
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SymbolId {
      get { if ((_hasBits0 & 4) != 0) { return symbolId_; } else { return SymbolIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        symbolId_ = value;
      }
    }
    /// <summary>Gets whether the "symbolId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSymbolId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "symbolId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSymbolId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static QuoteType TypeDefaultValue = QuoteType.Bid;
  
    private QuoteType type_;
    /// <summary>
    /// Bid/Ask (1/2).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuoteType Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~8;
    }
  
    /// <summary>Field number for the "fromTimestamp" field.</summary>
    public const int FromTimestampFieldNumber = 5;
    private readonly static long FromTimestampDefaultValue = 0L;
  
    private long fromTimestamp_;
    /// <summary>
    /// The exact time of starting the search in milliseconds. Must be bigger of equal to zero (1-1-1970). Validation: toTimestamp - fromTimestamp &lt;= 604800000 (1 week).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FromTimestamp {
      get { if ((_hasBits0 & 16) != 0) { return fromTimestamp_; } else { return FromTimestampDefaultValue; } }
      set {
        _hasBits0 |= 16;
        fromTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "fromTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromTimestamp {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "fromTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromTimestamp() {
      _hasBits0 &= ~16;
    }
  
    /// <summary>Field number for the "toTimestamp" field.</summary>
    public const int ToTimestampFieldNumber = 6;
    private readonly static long ToTimestampDefaultValue = 0L;
  
    private long toTimestamp_;
    /// <summary>
    /// The exact time of finishing the search in milliseconds &lt;= 2147483646000 (19-1-2038).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ToTimestamp {
      get { if ((_hasBits0 & 32) != 0) { return toTimestamp_; } else { return ToTimestampDefaultValue; } }
      set {
        _hasBits0 |= 32;
        toTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "toTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToTimestamp {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "toTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToTimestamp() {
      _hasBits0 &= ~32;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTickDataReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTickDataReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (SymbolId != other.SymbolId) return false;
      if (Type != other.Type) return false;
      if (FromTimestamp != other.FromTimestamp) return false;
      if (ToTimestamp != other.ToTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasSymbolId) hash ^= SymbolId.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasFromTimestamp) hash ^= FromTimestamp.GetHashCode();
      if (HasToTimestamp) hash ^= ToTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        output.WriteRawTag(24);
        output.WriteInt64(SymbolId);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(40);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(48);
        output.WriteInt64(ToTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        output.WriteRawTag(24);
        output.WriteInt64(SymbolId);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(40);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(48);
        output.WriteInt64(ToTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SymbolId);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasFromTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromTimestamp);
      }
      if (HasToTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTickDataReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasFromTimestamp) {
        FromTimestamp = other.FromTimestamp;
      }
      if (other.HasToTimestamp) {
        ToTimestamp = other.ToTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            SymbolId = input.ReadInt64();
            break;
          }
          case 32: {
            Type = (QuoteType) input.ReadEnum();
            break;
          }
          case 40: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 48: {
            ToTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            SymbolId = input.ReadInt64();
            break;
          }
          case 32: {
            Type = (QuoteType) input.ReadEnum();
            break;
          }
          case 40: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 48: {
            ToTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting details of Trader's profile. Limited due to GDRP requirements. 
  /// </summary>
  public sealed partial class GetCtidProfileByTokenReq : pb::IMessage<GetCtidProfileByTokenReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCtidProfileByTokenReq> _parser = new pb::MessageParser<GetCtidProfileByTokenReq>(() => new GetCtidProfileByTokenReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetCtidProfileByTokenReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[59]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCtidProfileByTokenReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCtidProfileByTokenReq(GetCtidProfileByTokenReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      accessToken_ = other.accessToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCtidProfileByTokenReq Clone() {
      return new GetCtidProfileByTokenReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaGetCtidProfileByTokenReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "accessToken" field.</summary>
    public const int AccessTokenFieldNumber = 2;
    private readonly static string AccessTokenDefaultValue = "";
  
    private string accessToken_;
    /// <summary>
    /// The Access Token issued for providing access to the Trader's Account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccessToken {
      get { return accessToken_ ?? AccessTokenDefaultValue; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accessToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccessToken {
      get { return accessToken_ != null; }
    }
    /// <summary>Clears the value of the "accessToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccessToken() {
      accessToken_ = null;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetCtidProfileByTokenReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetCtidProfileByTokenReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (AccessToken != other.AccessToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasAccessToken) hash ^= AccessToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasAccessToken) {
        output.WriteRawTag(18);
        output.WriteString(AccessToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasAccessToken) {
        output.WriteRawTag(18);
        output.WriteString(AccessToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasAccessToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetCtidProfileByTokenReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasAccessToken) {
        AccessToken = other.AccessToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for subscribing on depth of market of the specified symbol. 
  /// </summary>
  public sealed partial class SubscribeDepthQuotesReq : pb::IMessage<SubscribeDepthQuotesReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeDepthQuotesReq> _parser = new pb::MessageParser<SubscribeDepthQuotesReq>(() => new SubscribeDepthQuotesReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeDepthQuotesReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[62]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeDepthQuotesReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeDepthQuotesReq(SubscribeDepthQuotesReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      symbolId_ = other.symbolId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeDepthQuotesReq Clone() {
      return new SubscribeDepthQuotesReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaSubscribeDepthQuotesReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_symbolId_codec
        = pb::FieldCodec.ForInt64(24);
    private readonly pbc::RepeatedField<long> symbolId_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> SymbolId {
      get { return symbolId_; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeDepthQuotesReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeDepthQuotesReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if(!symbolId_.Equals(other.symbolId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      hash ^= symbolId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(output, _repeated_symbolId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(ref output, _repeated_symbolId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      size += symbolId_.CalculateSize(_repeated_symbolId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeDepthQuotesReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      symbolId_.Add(other.symbolId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(input, _repeated_symbolId_codec);
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(ref input, _repeated_symbolId_codec);
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for unsubscribing from the depth of market of the specified symbol. 
  /// </summary>
  public sealed partial class UnsubscribeDepthQuotesReq : pb::IMessage<UnsubscribeDepthQuotesReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnsubscribeDepthQuotesReq> _parser = new pb::MessageParser<UnsubscribeDepthQuotesReq>(() => new UnsubscribeDepthQuotesReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnsubscribeDepthQuotesReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[64]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnsubscribeDepthQuotesReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnsubscribeDepthQuotesReq(UnsubscribeDepthQuotesReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      symbolId_ = other.symbolId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnsubscribeDepthQuotesReq Clone() {
      return new UnsubscribeDepthQuotesReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaUnsubscribeDepthQuotesReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_symbolId_codec
        = pb::FieldCodec.ForInt64(24);
    private readonly pbc::RepeatedField<long> symbolId_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> SymbolId {
      get { return symbolId_; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeDepthQuotesReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnsubscribeDepthQuotesReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if(!symbolId_.Equals(other.symbolId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      hash ^= symbolId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(output, _repeated_symbolId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(ref output, _repeated_symbolId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      size += symbolId_.CalculateSize(_repeated_symbolId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnsubscribeDepthQuotesReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      symbolId_.Add(other.symbolId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(input, _repeated_symbolId_codec);
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(ref input, _repeated_symbolId_codec);
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for a list of symbol categories available for a trading account. 
  /// </summary>
  public sealed partial class SymbolCategoryListReq : pb::IMessage<SymbolCategoryListReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SymbolCategoryListReq> _parser = new pb::MessageParser<SymbolCategoryListReq>(() => new SymbolCategoryListReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SymbolCategoryListReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[66]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolCategoryListReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolCategoryListReq(SymbolCategoryListReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolCategoryListReq Clone() {
      return new SymbolCategoryListReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaSymbolCategoryReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SymbolCategoryListReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SymbolCategoryListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SymbolCategoryListReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for logout of  trading account session.
  /// </summary>
  public sealed partial class AccountLogoutReq : pb::IMessage<AccountLogoutReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountLogoutReq> _parser = new pb::MessageParser<AccountLogoutReq>(() => new AccountLogoutReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccountLogoutReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[68]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountLogoutReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountLogoutReq(AccountLogoutReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountLogoutReq Clone() {
      return new AccountLogoutReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaAccountLogoutReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// The unique identifier of the trader's account in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccountLogoutReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccountLogoutReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccountLogoutReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for a list of existing margin call thresholds configured for a user. 
  /// </summary>
  public sealed partial class MarginCallListReq : pb::IMessage<MarginCallListReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarginCallListReq> _parser = new pb::MessageParser<MarginCallListReq>(() => new MarginCallListReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarginCallListReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[71]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallListReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallListReq(MarginCallListReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallListReq Clone() {
      return new MarginCallListReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaMarginCallListReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarginCallListReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarginCallListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarginCallListReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request to modify marginLevelThreshold of specified marginCallType for ctidTraderAccountId. 
  /// </summary>
  public sealed partial class MarginCallUpdateReq : pb::IMessage<MarginCallUpdateReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarginCallUpdateReq> _parser = new pb::MessageParser<MarginCallUpdateReq>(() => new MarginCallUpdateReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarginCallUpdateReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[73]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallUpdateReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallUpdateReq(MarginCallUpdateReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      marginCall_ = other.marginCall_ != null ? other.marginCall_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallUpdateReq Clone() {
      return new MarginCallUpdateReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaMarginCallUpdateReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "marginCall" field.</summary>
    public const int MarginCallFieldNumber = 3;
    private MarginCall marginCall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCall MarginCall {
      get { return marginCall_; }
      set {
        marginCall_ = value;
      }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarginCallUpdateReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarginCallUpdateReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (!object.Equals(MarginCall, other.MarginCall)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (marginCall_ != null) hash ^= MarginCall.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (marginCall_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MarginCall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (marginCall_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MarginCall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (marginCall_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MarginCall);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarginCallUpdateReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.marginCall_ != null) {
        if (marginCall_ == null) {
          MarginCall = new MarginCall();
        }
        MarginCall.MergeFrom(other.MarginCall);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26: {
            if (marginCall_ == null) {
              MarginCall = new MarginCall();
            }
            input.ReadMessage(MarginCall);
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26: {
            if (marginCall_ == null) {
              MarginCall = new MarginCall();
            }
            input.ReadMessage(MarginCall);
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for getting a dynamic leverage entity referenced in Symbol.leverageId. 
  /// </summary>
  public sealed partial class GetDynamicLeverageByIDReq : pb::IMessage<GetDynamicLeverageByIDReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDynamicLeverageByIDReq> _parser = new pb::MessageParser<GetDynamicLeverageByIDReq>(() => new GetDynamicLeverageByIDReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetDynamicLeverageByIDReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[77]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDynamicLeverageByIDReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDynamicLeverageByIDReq(GetDynamicLeverageByIDReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      leverageId_ = other.leverageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDynamicLeverageByIDReq Clone() {
      return new GetDynamicLeverageByIDReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaGetDynamicLeverageReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "leverageId" field.</summary>
    public const int LeverageIdFieldNumber = 3;
    private readonly static long LeverageIdDefaultValue = 0L;
  
    private long leverageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LeverageId {
      get { if ((_hasBits0 & 4) != 0) { return leverageId_; } else { return LeverageIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leverageId_ = value;
      }
    }
    /// <summary>Gets whether the "leverageId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeverageId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "leverageId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeverageId() {
      _hasBits0 &= ~4;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetDynamicLeverageByIDReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetDynamicLeverageByIDReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (LeverageId != other.LeverageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasLeverageId) hash ^= LeverageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasLeverageId) {
        output.WriteRawTag(24);
        output.WriteInt64(LeverageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasLeverageId) {
        output.WriteRawTag(24);
        output.WriteInt64(LeverageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasLeverageId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LeverageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetDynamicLeverageByIDReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasLeverageId) {
        LeverageId = other.LeverageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            LeverageId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            LeverageId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

      /// <summary>
  ///* Request for retrieving the deals related to a position. 
  /// </summary>
  public sealed partial class DealListByPositionIdReq : pb::IMessage<DealListByPositionIdReq>, IOAMessage
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DealListByPositionIdReq> _parser = new pb::MessageParser<DealListByPositionIdReq>(() => new DealListByPositionIdReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DealListByPositionIdReq> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[79]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealListByPositionIdReq() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealListByPositionIdReq(DealListByPositionIdReq other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      positionId_ = other.positionId_;
      fromTimestamp_ = other.fromTimestamp_;
      toTimestamp_ = other.toTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealListByPositionIdReq Clone() {
      return new DealListByPositionIdReq(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaDealListByPositionIdReq;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "positionId" field.</summary>
    public const int PositionIdFieldNumber = 3;
    private readonly static long PositionIdDefaultValue = 0L;
  
    private long positionId_;
    /// <summary>
    /// The unique ID of the position.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PositionId {
      get { if ((_hasBits0 & 4) != 0) { return positionId_; } else { return PositionIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        positionId_ = value;
      }
    }
    /// <summary>Gets whether the "positionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPositionId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "positionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPositionId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "fromTimestamp" field.</summary>
    public const int FromTimestampFieldNumber = 4;
    private readonly static long FromTimestampDefaultValue = 0L;
  
    private long fromTimestamp_;
    /// <summary>
    /// The exact time of starting the search in milliseconds. Must be bigger of equal to zero (1-1-1970). Validation: toTimestamp - fromTimestamp &lt;= 604800000 (1 week).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FromTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return fromTimestamp_; } else { return FromTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        fromTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "fromTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "fromTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromTimestamp() {
      _hasBits0 &= ~8;
    }
  
    /// <summary>Field number for the "toTimestamp" field.</summary>
    public const int ToTimestampFieldNumber = 5;
    private readonly static long ToTimestampDefaultValue = 0L;
  
    private long toTimestamp_;
    /// <summary>
    /// The exact time of finishing the search in milliseconds &lt;= 2147483646000 (19-1-2038).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ToTimestamp {
      get { if ((_hasBits0 & 16) != 0) { return toTimestamp_; } else { return ToTimestampDefaultValue; } }
      set {
        _hasBits0 |= 16;
        toTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "toTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToTimestamp {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "toTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToTimestamp() {
      _hasBits0 &= ~16;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DealListByPositionIdReq);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DealListByPositionIdReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (PositionId != other.PositionId) return false;
      if (FromTimestamp != other.FromTimestamp) return false;
      if (ToTimestamp != other.ToTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasPositionId) hash ^= PositionId.GetHashCode();
      if (HasFromTimestamp) hash ^= FromTimestamp.GetHashCode();
      if (HasToTimestamp) hash ^= ToTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(24);
        output.WriteInt64(PositionId);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(40);
        output.WriteInt64(ToTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(24);
        output.WriteInt64(PositionId);
      }
      if (HasFromTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(FromTimestamp);
      }
      if (HasToTimestamp) {
        output.WriteRawTag(40);
        output.WriteInt64(ToTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasPositionId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PositionId);
      }
      if (HasFromTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromTimestamp);
      }
      if (HasToTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DealListByPositionIdReq other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasPositionId) {
        PositionId = other.PositionId;
      }
      if (other.HasFromTimestamp) {
        FromTimestamp = other.FromTimestamp;
      }
      if (other.HasToTimestamp) {
        ToTimestamp = other.ToTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            PositionId = input.ReadInt64();
            break;
          }
          case 32: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 40: {
            ToTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            PositionId = input.ReadInt64();
            break;
          }
          case 32: {
            FromTimestamp = input.ReadInt64();
            break;
          }
          case 40: {
            ToTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  #endregion
  
  
  #endregion Designer generated code
}