// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OpenApiMessages.proto
// </auto-generated>

using ProtoOA.Enums;
using ProtoOA.Model;

namespace ProtoOA.Event
{
  #pragma warning disable 1591, 0612, 3021
  #region Designer generated code
  
  using pb = global::Google.Protobuf;
  using pbc = global::Google.Protobuf.Collections;
  using pbr = global::Google.Protobuf.Reflection;
  using scg = global::System.Collections.Generic;
  /// <summary>Holder for reflection information generated from OpenApiMessages.proto</summary>
  public static partial class OpenApiMessagesReflection {
  
    #region Descriptor
    /// <summary>File descriptor for OpenApiMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;
  
    static OpenApiMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVPcGVuQXBpTWVzc2FnZXMucHJvdG8aGk9wZW5BcGlNb2RlbE1lc3NhZ2Vz",
            "LnByb3RvIowBChlQcm90b09BQXBwbGljYXRpb25BdXRoUmVxEkcKC3BheWxv",
            "YWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOh1QUk9UT19PQV9B",
            "UFBMSUNBVElPTl9BVVRIX1JFURIQCghjbGllbnRJZBgCIAIoCRIUCgxjbGll",
            "bnRTZWNyZXQYAyACKAkiZAoZUHJvdG9PQUFwcGxpY2F0aW9uQXV0aFJlcxJH",
            "CgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZTodUFJP",
            "VE9fT0FfQVBQTElDQVRJT05fQVVUSF9SRVMijgEKFVByb3RvT0FBY2NvdW50",
            "QXV0aFJlcRJDCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2Fk",
            "VHlwZToZUFJPVE9fT0FfQUNDT1VOVF9BVVRIX1JFURIbChNjdGlkVHJhZGVy",
            "QWNjb3VudElkGAIgAigDEhMKC2FjY2Vzc1Rva2VuGAMgAigJInkKFVByb3Rv",
            "T0FBY2NvdW50QXV0aFJlcxJDCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3Rv",
            "T0FQYXlsb2FkVHlwZToZUFJPVE9fT0FfQUNDT1VOVF9BVVRIX1JFUxIbChNj",
            "dGlkVHJhZGVyQWNjb3VudElkGAIgAigDIrUBCg9Qcm90b09BRXJyb3JSZXMS",
            "PAoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6ElBS",
            "T1RPX09BX0VSUk9SX1JFUxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgASgD",
            "EhEKCWVycm9yQ29kZRgDIAIoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRIfChdt",
            "YWludGVuYW5jZUVuZFRpbWVzdGFtcBgFIAEoAyJ6ChxQcm90b09BQ2xpZW50",
            "RGlzY29ubmVjdEV2ZW50EkoKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9P",
            "QVBheWxvYWRUeXBlOiBQUk9UT19PQV9DTElFTlRfRElTQ09OTkVDVF9FVkVO",
            "VBIOCgZyZWFzb24YAiABKAkiqQEKJFByb3RvT0FBY2NvdW50c1Rva2VuSW52",
            "YWxpZGF0ZWRFdmVudBJTCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQ",
            "YXlsb2FkVHlwZTopUFJPVE9fT0FfQUNDT1VOVFNfVE9LRU5fSU5WQUxJREFU",
            "RURfRVZFTlQSHAoUY3RpZFRyYWRlckFjY291bnRJZHMYAiADKAMSDgoGcmVh",
            "c29uGAMgASgJIlMKEVByb3RvT0FWZXJzaW9uUmVxEj4KC3BheWxvYWRUeXBl",
            "GAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhRQUk9UT19PQV9WRVJTSU9O",
            "X1JFUSJkChFQcm90b09BVmVyc2lvblJlcxI+CgtwYXlsb2FkVHlwZRgBIAEo",
            "DjITLlByb3RvT0FQYXlsb2FkVHlwZToUUFJPVE9fT0FfVkVSU0lPTl9SRVMS",
            "DwoHdmVyc2lvbhgCIAIoCSKxBQoSUHJvdG9PQU5ld09yZGVyUmVxEkAKC3Bh",
            "eWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhZQUk9UT19P",
            "QV9ORVdfT1JERVJfUkVREhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMS",
            "EAoIc3ltYm9sSWQYAyACKAMSJAoJb3JkZXJUeXBlGAQgAigOMhEuUHJvdG9P",
            "QU9yZGVyVHlwZRIkCgl0cmFkZVNpZGUYBSACKA4yES5Qcm90b09BVHJhZGVT",
            "aWRlEg4KBnZvbHVtZRgGIAIoAxISCgpsaW1pdFByaWNlGAcgASgBEhEKCXN0",
            "b3BQcmljZRgIIAEoARI6Cgt0aW1lSW5Gb3JjZRgJIAEoDjITLlByb3RvT0FU",
            "aW1lSW5Gb3JjZToQR09PRF9USUxMX0NBTkNFTBIbChNleHBpcmF0aW9uVGlt",
            "ZXN0YW1wGAogASgDEhAKCHN0b3BMb3NzGAsgASgBEhIKCnRha2VQcm9maXQY",
            "DCABKAESDwoHY29tbWVudBgNIAEoCRIZChFiYXNlU2xpcHBhZ2VQcmljZRgO",
            "IAEoARIYChBzbGlwcGFnZUluUG9pbnRzGA8gASgFEg0KBWxhYmVsGBAgASgJ",
            "EhIKCnBvc2l0aW9uSWQYESABKAMSFQoNY2xpZW50T3JkZXJJZBgSIAEoCRIY",
            "ChByZWxhdGl2ZVN0b3BMb3NzGBMgASgDEhoKEnJlbGF0aXZlVGFrZVByb2Zp",
            "dBgUIAEoAxIaChJndWFyYW50ZWVkU3RvcExvc3MYFSABKAgSGAoQdHJhaWxp",
            "bmdTdG9wTG9zcxgWIAEoCBI8ChFzdG9wVHJpZ2dlck1ldGhvZBgXIAEoDjIa",
            "LlByb3RvT0FPcmRlclRyaWdnZXJNZXRob2Q6BVRSQURFIpwDChVQcm90b09B",
            "RXhlY3V0aW9uRXZlbnQSQgoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09B",
            "UGF5bG9hZFR5cGU6GFBST1RPX09BX0VYRUNVVElPTl9FVkVOVBIbChNjdGlk",
            "VHJhZGVyQWNjb3VudElkGAIgAigDEiwKDWV4ZWN1dGlvblR5cGUYAyACKA4y",
            "FS5Qcm90b09BRXhlY3V0aW9uVHlwZRIiCghwb3NpdGlvbhgEIAEoCzIQLlBy",
            "b3RvT0FQb3NpdGlvbhIcCgVvcmRlchgFIAEoCzINLlByb3RvT0FPcmRlchIa",
            "CgRkZWFsGAYgASgLMgwuUHJvdG9PQURlYWwSOgoUYm9udXNEZXBvc2l0V2l0",
            "aGRyYXcYByABKAsyHC5Qcm90b09BQm9udXNEZXBvc2l0V2l0aGRyYXcSMAoP",
            "ZGVwb3NpdFdpdGhkcmF3GAggASgLMhcuUHJvdG9PQURlcG9zaXRXaXRoZHJh",
            "dxIRCgllcnJvckNvZGUYCSABKAkSFQoNaXNTZXJ2ZXJFdmVudBgKIAEoCCKK",
            "AQoVUHJvdG9PQUNhbmNlbE9yZGVyUmVxEkMKC3BheWxvYWRUeXBlGAEgASgO",
            "MhMuUHJvdG9PQVBheWxvYWRUeXBlOhlQUk9UT19PQV9DQU5DRUxfT1JERVJf",
            "UkVREhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSDwoHb3JkZXJJZBgD",
            "IAIoAyLGAwoUUHJvdG9PQUFtZW5kT3JkZXJSZXESQgoLcGF5bG9hZFR5cGUY",
            "ASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6GFBST1RPX09BX0FNRU5EX09S",
            "REVSX1JFURIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDEg8KB29yZGVy",
            "SWQYAyACKAMSDgoGdm9sdW1lGAQgASgDEhIKCmxpbWl0UHJpY2UYBSABKAES",
            "EQoJc3RvcFByaWNlGAYgASgBEhsKE2V4cGlyYXRpb25UaW1lc3RhbXAYByAB",
            "KAMSEAoIc3RvcExvc3MYCCABKAESEgoKdGFrZVByb2ZpdBgJIAEoARIYChBz",
            "bGlwcGFnZUluUG9pbnRzGAogASgFEhgKEHJlbGF0aXZlU3RvcExvc3MYCyAB",
            "KAMSGgoScmVsYXRpdmVUYWtlUHJvZml0GAwgASgDEhoKEmd1YXJhbnRlZWRT",
            "dG9wTG9zcxgNIAEoCBIYChB0cmFpbGluZ1N0b3BMb3NzGA4gASgIEjwKEXN0",
            "b3BUcmlnZ2VyTWV0aG9kGA8gASgOMhouUHJvdG9PQU9yZGVyVHJpZ2dlck1l",
            "dGhvZDoFVFJBREUiuAIKG1Byb3RvT0FBbWVuZFBvc2l0aW9uU0xUUFJlcRJK",
            "CgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZTogUFJP",
            "VE9fT0FfQU1FTkRfUE9TSVRJT05fU0xUUF9SRVESGwoTY3RpZFRyYWRlckFj",
            "Y291bnRJZBgCIAIoAxISCgpwb3NpdGlvbklkGAMgAigDEhAKCHN0b3BMb3Nz",
            "GAQgASgBEhIKCnRha2VQcm9maXQYBSABKAESGgoSZ3VhcmFudGVlZFN0b3BM",
            "b3NzGAcgASgIEhgKEHRyYWlsaW5nU3RvcExvc3MYCCABKAgSQAoVc3RvcExv",
            "c3NUcmlnZ2VyTWV0aG9kGAkgASgOMhouUHJvdG9PQU9yZGVyVHJpZ2dlck1l",
            "dGhvZDoFVFJBREUioQEKF1Byb3RvT0FDbG9zZVBvc2l0aW9uUmVxEkUKC3Bh",
            "eWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhtQUk9UT19P",
            "QV9DTE9TRV9QT1NJVElPTl9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgC",
            "IAIoAxISCgpwb3NpdGlvbklkGAMgAigDEg4KBnZvbHVtZRgEIAIoAyLiAQod",
            "UHJvdG9PQVRyYWlsaW5nU0xDaGFuZ2VkRXZlbnQSTAoLcGF5bG9hZFR5cGUY",
            "ASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6IlBST1RPX09BX1RSQUlMSU5H",
            "X1NMX0NIQU5HRURfRVZFTlQSGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIo",
            "AxISCgpwb3NpdGlvbklkGAMgAigDEg8KB29yZGVySWQYBCACKAMSEQoJc3Rv",
            "cFByaWNlGAUgAigBEh4KFnV0Y0xhc3RVcGRhdGVUaW1lc3RhbXAYBiACKAMi",
            "dQoTUHJvdG9PQUFzc2V0TGlzdFJlcRJBCgtwYXlsb2FkVHlwZRgBIAEoDjIT",
            "LlByb3RvT0FQYXlsb2FkVHlwZToXUFJPVE9fT0FfQVNTRVRfTElTVF9SRVES",
            "GwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAyKTAQoTUHJvdG9PQUFzc2V0",
            "TGlzdFJlcxJBCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2Fk",
            "VHlwZToXUFJPVE9fT0FfQVNTRVRfTElTVF9SRVMSGwoTY3RpZFRyYWRlckFj",
            "Y291bnRJZBgCIAIoAxIcCgVhc3NldBgDIAMoCzINLlByb3RvT0FBc3NldCKg",
            "AQoVUHJvdG9PQVN5bWJvbHNMaXN0UmVxEkMKC3BheWxvYWRUeXBlGAEgASgO",
            "MhMuUHJvdG9PQVBheWxvYWRUeXBlOhlQUk9UT19PQV9TWU1CT0xTX0xJU1Rf",
            "UkVREhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSJQoWaW5jbHVkZUFy",
            "Y2hpdmVkU3ltYm9scxgDIAEoCDoFZmFsc2UizgEKFVByb3RvT0FTeW1ib2xz",
            "TGlzdFJlcxJDCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2Fk",
            "VHlwZToZUFJPVE9fT0FfU1lNQk9MU19MSVNUX1JFUxIbChNjdGlkVHJhZGVy",
            "QWNjb3VudElkGAIgAigDEiMKBnN5bWJvbBgDIAMoCzITLlByb3RvT0FMaWdo",
            "dFN5bWJvbBIuCg5hcmNoaXZlZFN5bWJvbBgEIAMoCzIWLlByb3RvT0FBcmNo",
            "aXZlZFN5bWJvbCKKAQoUUHJvdG9PQVN5bWJvbEJ5SWRSZXESQwoLcGF5bG9h",
            "ZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6GVBST1RPX09BX1NZ",
            "TUJPTF9CWV9JRF9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAxIQ",
            "CghzeW1ib2xJZBgDIAMoAyLIAQoUUHJvdG9PQVN5bWJvbEJ5SWRSZXMSQwoL",
            "cGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6GVBST1RP",
            "X09BX1NZTUJPTF9CWV9JRF9SRVMSGwoTY3RpZFRyYWRlckFjY291bnRJZBgC",
            "IAIoAxIeCgZzeW1ib2wYAyADKAsyDi5Qcm90b09BU3ltYm9sEi4KDmFyY2hp",
            "dmVkU3ltYm9sGAQgAygLMhYuUHJvdG9PQUFyY2hpdmVkU3ltYm9sIrcBCh5Q",
            "cm90b09BU3ltYm9sc0ZvckNvbnZlcnNpb25SZXESTQoLcGF5bG9hZFR5cGUY",
            "ASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6I1BST1RPX09BX1NZTUJPTFNf",
            "Rk9SX0NPTlZFUlNJT05fUkVREhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiAC",
            "KAMSFAoMZmlyc3RBc3NldElkGAMgAigDEhMKC2xhc3RBc3NldElkGAQgAigD",
            "IrEBCh5Qcm90b09BU3ltYm9sc0ZvckNvbnZlcnNpb25SZXMSTQoLcGF5bG9h",
            "ZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6I1BST1RPX09BX1NZ",
            "TUJPTFNfRk9SX0NPTlZFUlNJT05fUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50",
            "SWQYAiACKAMSIwoGc3ltYm9sGAMgAygLMhMuUHJvdG9PQUxpZ2h0U3ltYm9s",
            "IpMBChlQcm90b09BU3ltYm9sQ2hhbmdlZEV2ZW50EkcKC3BheWxvYWRUeXBl",
            "GAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOh1QUk9UT19PQV9TWU1CT0xf",
            "Q0hBTkdFRF9FVkVOVBIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhAK",
            "CHN5bWJvbElkGAMgAygDIoABChhQcm90b09BQXNzZXRDbGFzc0xpc3RSZXES",
            "RwoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6HVBS",
            "T1RPX09BX0FTU0VUX0NMQVNTX0xJU1RfUkVREhsKE2N0aWRUcmFkZXJBY2Nv",
            "dW50SWQYAiACKAMiqAEKGFByb3RvT0FBc3NldENsYXNzTGlzdFJlcxJHCgtw",
            "YXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZTodUFJPVE9f",
            "T0FfQVNTRVRfQ0xBU1NfTElTVF9SRVMSGwoTY3RpZFRyYWRlckFjY291bnRJ",
            "ZBgCIAIoAxImCgphc3NldENsYXNzGAMgAygLMhIuUHJvdG9PQUFzc2V0Q2xh",
            "c3MibgoQUHJvdG9PQVRyYWRlclJlcRI9CgtwYXlsb2FkVHlwZRgBIAEoDjIT",
            "LlByb3RvT0FQYXlsb2FkVHlwZToTUFJPVE9fT0FfVFJBREVSX1JFURIbChNj",
            "dGlkVHJhZGVyQWNjb3VudElkGAIgAigDIo4BChBQcm90b09BVHJhZGVyUmVz",
            "Ej0KC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhNQ",
            "Uk9UT19PQV9UUkFERVJfUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiAC",
            "KAMSHgoGdHJhZGVyGAMgAigLMg4uUHJvdG9PQVRyYWRlciKgAQoZUHJvdG9P",
            "QVRyYWRlclVwZGF0ZWRFdmVudBJGCgtwYXlsb2FkVHlwZRgBIAEoDjITLlBy",
            "b3RvT0FQYXlsb2FkVHlwZTocUFJPVE9fT0FfVFJBREVSX1VQREFURV9FVkVO",
            "VBIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDEh4KBnRyYWRlchgDIAIo",
            "CzIOLlByb3RvT0FUcmFkZXIidAoTUHJvdG9PQVJlY29uY2lsZVJlcRJACgtw",
            "YXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZToWUFJPVE9f",
            "T0FfUkVDT05DSUxFX1JFURIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigD",
            "IrYBChNQcm90b09BUmVjb25jaWxlUmVzEkAKC3BheWxvYWRUeXBlGAEgASgO",
            "MhMuUHJvdG9PQVBheWxvYWRUeXBlOhZQUk9UT19PQV9SRUNPTkNJTEVfUkVT",
            "EhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSIgoIcG9zaXRpb24YAyAD",
            "KAsyEC5Qcm90b09BUG9zaXRpb24SHAoFb3JkZXIYBCADKAsyDS5Qcm90b09B",
            "T3JkZXIiyAEKFlByb3RvT0FPcmRlckVycm9yRXZlbnQSRAoLcGF5bG9hZFR5",
            "cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6GlBST1RPX09BX09SREVS",
            "X0VSUk9SX0VWRU5UEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYBSACKAMSEQoJ",
            "ZXJyb3JDb2RlGAIgAigJEg8KB29yZGVySWQYAyABKAMSEgoKcG9zaXRpb25J",
            "ZBgGIAEoAxITCgtkZXNjcmlwdGlvbhgHIAEoCSKwAQoSUHJvdG9PQURlYWxM",
            "aXN0UmVxEkAKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRU",
            "eXBlOhZQUk9UT19PQV9ERUFMX0xJU1RfUkVREhsKE2N0aWRUcmFkZXJBY2Nv",
            "dW50SWQYAiACKAMSFQoNZnJvbVRpbWVzdGFtcBgDIAIoAxITCgt0b1RpbWVz",
            "dGFtcBgEIAIoAxIPCgdtYXhSb3dzGAUgASgFIqABChJQcm90b09BRGVhbExp",
            "c3RSZXMSQAoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5",
            "cGU6FlBST1RPX09BX0RFQUxfTElTVF9SRVMSGwoTY3RpZFRyYWRlckFjY291",
            "bnRJZBgCIAIoAxIaCgRkZWFsGAMgAygLMgwuUHJvdG9PQURlYWwSDwoHaGFz",
            "TW9yZRgEIAIoCCKhAQoTUHJvdG9PQU9yZGVyTGlzdFJlcRJBCgtwYXlsb2Fk",
            "VHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZToXUFJPVE9fT0FfT1JE",
            "RVJfTElTVF9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAxIVCg1m",
            "cm9tVGltZXN0YW1wGAMgAigDEhMKC3RvVGltZXN0YW1wGAQgAigDIqQBChNQ",
            "cm90b09BT3JkZXJMaXN0UmVzEkEKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJv",
            "dG9PQVBheWxvYWRUeXBlOhdQUk9UT19PQV9PUkRFUl9MSVNUX1JFUxIbChNj",
            "dGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhwKBW9yZGVyGAMgAygLMg0uUHJv",
            "dG9PQU9yZGVyEg8KB2hhc01vcmUYBCACKAgioQEKGFByb3RvT0FFeHBlY3Rl",
            "ZE1hcmdpblJlcRJGCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXls",
            "b2FkVHlwZTocUFJPVE9fT0FfRVhQRUNURURfTUFSR0lOX1JFURIbChNjdGlk",
            "VHJhZGVyQWNjb3VudElkGAIgAigDEhAKCHN5bWJvbElkGAMgAigDEg4KBnZv",
            "bHVtZRgEIAMoAyK8AQoYUHJvdG9PQUV4cGVjdGVkTWFyZ2luUmVzEkYKC3Bh",
            "eWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhxQUk9UT19P",
            "QV9FWFBFQ1RFRF9NQVJHSU5fUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQY",
            "AiACKAMSJgoGbWFyZ2luGAMgAygLMhYuUHJvdG9PQUV4cGVjdGVkTWFyZ2lu",
            "EhMKC21vbmV5RGlnaXRzGAQgASgNIr4BChlQcm90b09BTWFyZ2luQ2hhbmdl",
            "ZEV2ZW50EkcKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRU",
            "eXBlOh1QUk9UT19PQV9NQVJHSU5fQ0hBTkdFRF9FVkVOVBIbChNjdGlkVHJh",
            "ZGVyQWNjb3VudElkGAIgAigDEhIKCnBvc2l0aW9uSWQYAyACKAQSEgoKdXNl",
            "ZE1hcmdpbhgEIAIoBBITCgttb25leURpZ2l0cxgFIAEoDSK3AQodUHJvdG9P",
            "QUNhc2hGbG93SGlzdG9yeUxpc3RSZXESTQoLcGF5bG9hZFR5cGUYASABKA4y",
            "Ey5Qcm90b09BUGF5bG9hZFR5cGU6I1BST1RPX09BX0NBU0hfRkxPV19ISVNU",
            "T1JZX0xJU1RfUkVREhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSFQoN",
            "ZnJvbVRpbWVzdGFtcBgDIAIoAxITCgt0b1RpbWVzdGFtcBgEIAIoAyK9AQod",
            "UHJvdG9PQUNhc2hGbG93SGlzdG9yeUxpc3RSZXMSTQoLcGF5bG9hZFR5cGUY",
            "ASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6I1BST1RPX09BX0NBU0hfRkxP",
            "V19ISVNUT1JZX0xJU1RfUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiAC",
            "KAMSMAoPZGVwb3NpdFdpdGhkcmF3GAMgAygLMhcuUHJvdG9PQURlcG9zaXRX",
            "aXRoZHJhdyKRAQolUHJvdG9PQUdldEFjY291bnRMaXN0QnlBY2Nlc3NUb2tl",
            "blJlcRJTCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlw",
            "ZTopUFJPVE9fT0FfR0VUX0FDQ09VTlRTX0JZX0FDQ0VTU19UT0tFTl9SRVES",
            "EwoLYWNjZXNzVG9rZW4YAiACKAki/wEKJVByb3RvT0FHZXRBY2NvdW50TGlz",
            "dEJ5QWNjZXNzVG9rZW5SZXMSUwoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90",
            "b09BUGF5bG9hZFR5cGU6KVBST1RPX09BX0dFVF9BQ0NPVU5UU19CWV9BQ0NF",
            "U1NfVE9LRU5fUkVTEhMKC2FjY2Vzc1Rva2VuGAIgAigJEjYKD3Blcm1pc3Np",
            "b25TY29wZRgDIAEoDjIdLlByb3RvT0FDbGllbnRQZXJtaXNzaW9uU2NvcGUS",
            "NAoRY3RpZFRyYWRlckFjY291bnQYBCADKAsyGS5Qcm90b09BQ3RpZFRyYWRl",
            "ckFjY291bnQidAoWUHJvdG9PQVJlZnJlc2hUb2tlblJlcRJECgtwYXlsb2Fk",
            "VHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZToaUFJPVE9fT0FfUkVG",
            "UkVTSF9UT0tFTl9SRVESFAoMcmVmcmVzaFRva2VuGAIgAigJIq8BChZQcm90",
            "b09BUmVmcmVzaFRva2VuUmVzEkQKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJv",
            "dG9PQVBheWxvYWRUeXBlOhpQUk9UT19PQV9SRUZSRVNIX1RPS0VOX1JFUxIT",
            "CgthY2Nlc3NUb2tlbhgCIAIoCRIRCgl0b2tlblR5cGUYAyACKAkSEQoJZXhw",
            "aXJlc0luGAQgAigDEhQKDHJlZnJlc2hUb2tlbhgFIAIoCSKzAQoYUHJvdG9P",
            "QVN1YnNjcmliZVNwb3RzUmVxEkYKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJv",
            "dG9PQVBheWxvYWRUeXBlOhxQUk9UT19PQV9TVUJTQ1JJQkVfU1BPVFNfUkVR",
            "EhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSEAoIc3ltYm9sSWQYAyAD",
            "KAMSIAoYc3Vic2NyaWJlVG9TcG90VGltZXN0YW1wGAQgASgIIn8KGFByb3Rv",
            "T0FTdWJzY3JpYmVTcG90c1JlcxJGCgtwYXlsb2FkVHlwZRgBIAEoDjITLlBy",
            "b3RvT0FQYXlsb2FkVHlwZTocUFJPVE9fT0FfU1VCU0NSSUJFX1NQT1RTX1JF",
            "UxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDIpUBChpQcm90b09BVW5z",
            "dWJzY3JpYmVTcG90c1JlcRJICgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3Rv",
            "T0FQYXlsb2FkVHlwZToeUFJPVE9fT0FfVU5TVUJTQ1JJQkVfU1BPVFNfUkVR",
            "EhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSEAoIc3ltYm9sSWQYAyAD",
            "KAMigwEKGlByb3RvT0FVbnN1YnNjcmliZVNwb3RzUmVzEkgKC3BheWxvYWRU",
            "eXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOh5QUk9UT19PQV9VTlNV",
            "QlNDUklCRV9TUE9UU19SRVMSGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIo",
            "AyLnAQoQUHJvdG9PQVNwb3RFdmVudBI9CgtwYXlsb2FkVHlwZRgBIAEoDjIT",
            "LlByb3RvT0FQYXlsb2FkVHlwZToTUFJPVE9fT0FfU1BPVF9FVkVOVBIbChNj",
            "dGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhAKCHN5bWJvbElkGAMgAigDEgsK",
            "A2JpZBgEIAEoBBILCgNhc2sYBSABKAQSIgoIdHJlbmRiYXIYBiADKAsyEC5Q",
            "cm90b09BVHJlbmRiYXISFAoMc2Vzc2lvbkNsb3NlGAcgASgEEhEKCXRpbWVz",
            "dGFtcBgIIAEoAyLIAQofUHJvdG9PQVN1YnNjcmliZUxpdmVUcmVuZGJhclJl",
            "cRJOCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZTok",
            "UFJPVE9fT0FfU1VCU0NSSUJFX0xJVkVfVFJFTkRCQVJfUkVREhsKE2N0aWRU",
            "cmFkZXJBY2NvdW50SWQYAiACKAMSJgoGcGVyaW9kGAMgAigOMhYuUHJvdG9P",
            "QVRyZW5kYmFyUGVyaW9kEhAKCHN5bWJvbElkGAQgAigDIo4BCh9Qcm90b09B",
            "U3Vic2NyaWJlTGl2ZVRyZW5kYmFyUmVzEk4KC3BheWxvYWRUeXBlGAEgASgO",
            "MhMuUHJvdG9PQVBheWxvYWRUeXBlOiRQUk9UT19PQV9TVUJTQ1JJQkVfTElW",
            "RV9UUkVOREJBUl9SRVMSGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAyLM",
            "AQohUHJvdG9PQVVuc3Vic2NyaWJlTGl2ZVRyZW5kYmFyUmVxElAKC3BheWxv",
            "YWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOiZQUk9UT19PQV9V",
            "TlNVQlNDUklCRV9MSVZFX1RSRU5EQkFSX1JFURIbChNjdGlkVHJhZGVyQWNj",
            "b3VudElkGAIgAigDEiYKBnBlcmlvZBgDIAIoDjIWLlByb3RvT0FUcmVuZGJh",
            "clBlcmlvZBIQCghzeW1ib2xJZBgEIAIoAyKSAQohUHJvdG9PQVVuc3Vic2Ny",
            "aWJlTGl2ZVRyZW5kYmFyUmVzElAKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJv",
            "dG9PQVBheWxvYWRUeXBlOiZQUk9UT19PQV9VTlNVQlNDUklCRV9MSVZFX1RS",
            "RU5EQkFSX1JFUxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDIvABChZQ",
            "cm90b09BR2V0VHJlbmRiYXJzUmVxEkQKC3BheWxvYWRUeXBlGAEgASgOMhMu",
            "UHJvdG9PQVBheWxvYWRUeXBlOhpQUk9UT19PQV9HRVRfVFJFTkRCQVJTX1JF",
            "URIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhUKDWZyb21UaW1lc3Rh",
            "bXAYAyACKAMSEwoLdG9UaW1lc3RhbXAYBCACKAMSJgoGcGVyaW9kGAUgAigO",
            "MhYuUHJvdG9PQVRyZW5kYmFyUGVyaW9kEhAKCHN5bWJvbElkGAYgAigDEg0K",
            "BWNvdW50GAcgASgNIuwBChZQcm90b09BR2V0VHJlbmRiYXJzUmVzEkQKC3Bh",
            "eWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhpQUk9UT19P",
            "QV9HRVRfVFJFTkRCQVJTX1JFUxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIg",
            "AigDEiYKBnBlcmlvZBgDIAIoDjIWLlByb3RvT0FUcmVuZGJhclBlcmlvZBIR",
            "Cgl0aW1lc3RhbXAYBCACKAMSIgoIdHJlbmRiYXIYBSADKAsyEC5Qcm90b09B",
            "VHJlbmRiYXISEAoIc3ltYm9sSWQYBiABKAMi2AEKFVByb3RvT0FHZXRUaWNr",
            "RGF0YVJlcRJDCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2Fk",
            "VHlwZToZUFJPVE9fT0FfR0VUX1RJQ0tEQVRBX1JFURIbChNjdGlkVHJhZGVy",
            "QWNjb3VudElkGAIgAigDEhAKCHN5bWJvbElkGAMgAigDEh8KBHR5cGUYBCAC",
            "KA4yES5Qcm90b09BUXVvdGVUeXBlEhUKDWZyb21UaW1lc3RhbXAYBSACKAMS",
            "EwoLdG9UaW1lc3RhbXAYBiACKAMirgEKFVByb3RvT0FHZXRUaWNrRGF0YVJl",
            "cxJDCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZToZ",
            "UFJPVE9fT0FfR0VUX1RJQ0tEQVRBX1JFUxIbChNjdGlkVHJhZGVyQWNjb3Vu",
            "dElkGAIgAigDEiIKCHRpY2tEYXRhGAMgAygLMhAuUHJvdG9PQVRpY2tEYXRh",
            "Eg8KB2hhc01vcmUYBCACKAgiiAEKH1Byb3RvT0FHZXRDdGlkUHJvZmlsZUJ5",
            "VG9rZW5SZXESUAoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9h",
            "ZFR5cGU6JlBST1RPX09BX0dFVF9DVElEX1BST0ZJTEVfQllfVE9LRU5fUkVR",
            "EhMKC2FjY2Vzc1Rva2VuGAIgAigJIpkBCh9Qcm90b09BR2V0Q3RpZFByb2Zp",
            "bGVCeVRva2VuUmVzElAKC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBh",
            "eWxvYWRUeXBlOiZQUk9UT19PQV9HRVRfQ1RJRF9QUk9GSUxFX0JZX1RPS0VO",
            "X1JFUxIkCgdwcm9maWxlGAIgAigLMhMuUHJvdG9PQUN0aWRQcm9maWxlIsQB",
            "ChFQcm90b09BRGVwdGhFdmVudBI+CgtwYXlsb2FkVHlwZRgBIAEoDjITLlBy",
            "b3RvT0FQYXlsb2FkVHlwZToUUFJPVE9fT0FfREVQVEhfRVZFTlQSGwoTY3Rp",
            "ZFRyYWRlckFjY291bnRJZBgCIAIoAxIQCghzeW1ib2xJZBgDIAIoBBIlCglu",
            "ZXdRdW90ZXMYBCADKAsyEi5Qcm90b09BRGVwdGhRdW90ZRIZCg1kZWxldGVk",
            "UXVvdGVzGAUgAygEQgIQASKeAQoeUHJvdG9PQVN1YnNjcmliZURlcHRoUXVv",
            "dGVzUmVxEk0KC3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRU",
            "eXBlOiNQUk9UT19PQV9TVUJTQ1JJQkVfREVQVEhfUVVPVEVTX1JFURIbChNj",
            "dGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhAKCHN5bWJvbElkGAMgAygDIowB",
            "Ch5Qcm90b09BU3Vic2NyaWJlRGVwdGhRdW90ZXNSZXMSTQoLcGF5bG9hZFR5",
            "cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6I1BST1RPX09BX1NVQlND",
            "UklCRV9ERVBUSF9RVU9URVNfUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQY",
            "AiACKAMiogEKIFByb3RvT0FVbnN1YnNjcmliZURlcHRoUXVvdGVzUmVxEk8K",
            "C3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOiVQUk9U",
            "T19PQV9VTlNVQlNDUklCRV9ERVBUSF9RVU9URVNfUkVREhsKE2N0aWRUcmFk",
            "ZXJBY2NvdW50SWQYAiACKAMSEAoIc3ltYm9sSWQYAyADKAMikAEKIFByb3Rv",
            "T0FVbnN1YnNjcmliZURlcHRoUXVvdGVzUmVzEk8KC3BheWxvYWRUeXBlGAEg",
            "ASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOiVQUk9UT19PQV9VTlNVQlNDUklC",
            "RV9ERVBUSF9RVU9URVNfUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiAC",
            "KAMigwEKHFByb3RvT0FTeW1ib2xDYXRlZ29yeUxpc3RSZXESRgoLcGF5bG9h",
            "ZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6HFBST1RPX09BX1NZ",
            "TUJPTF9DQVRFR09SWV9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIo",
            "AyKzAQocUHJvdG9PQVN5bWJvbENhdGVnb3J5TGlzdFJlcxJGCgtwYXlsb2Fk",
            "VHlwZRgBIAEoDjITLlByb3RvT0FQYXlsb2FkVHlwZTocUFJPVE9fT0FfU1lN",
            "Qk9MX0NBVEVHT1JZX1JFUxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigD",
            "Ei4KDnN5bWJvbENhdGVnb3J5GAMgAygLMhYuUHJvdG9PQVN5bWJvbENhdGVn",
            "b3J5In0KF1Byb3RvT0FBY2NvdW50TG9nb3V0UmVxEkUKC3BheWxvYWRUeXBl",
            "GAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOhtQUk9UT19PQV9BQ0NPVU5U",
            "X0xPR09VVF9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAyJ9ChdQ",
            "cm90b09BQWNjb3VudExvZ291dFJlcxJFCgtwYXlsb2FkVHlwZRgBIAEoDjIT",
            "LlByb3RvT0FQYXlsb2FkVHlwZTobUFJPVE9fT0FfQUNDT1VOVF9MT0dPVVRf",
            "UkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMiiQEKHVByb3RvT0FB",
            "Y2NvdW50RGlzY29ubmVjdEV2ZW50EksKC3BheWxvYWRUeXBlGAEgASgOMhMu",
            "UHJvdG9PQVBheWxvYWRUeXBlOiFQUk9UT19PQV9BQ0NPVU5UX0RJU0NPTk5F",
            "Q1RfRVZFTlQSGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAyKAAQoYUHJv",
            "dG9PQU1hcmdpbkNhbGxMaXN0UmVxEkcKC3BheWxvYWRUeXBlGAEgASgOMhMu",
            "UHJvdG9PQVBheWxvYWRUeXBlOh1QUk9UT19PQV9NQVJHSU5fQ0FMTF9MSVNU",
            "X1JFURIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDIosBChhQcm90b09B",
            "TWFyZ2luQ2FsbExpc3RSZXMSRwoLcGF5bG9hZFR5cGUYASABKA4yEy5Qcm90",
            "b09BUGF5bG9hZFR5cGU6HVBST1RPX09BX01BUkdJTl9DQUxMX0xJU1RfUkVT",
            "EiYKCm1hcmdpbkNhbGwYAiADKAsyEi5Qcm90b09BTWFyZ2luQ2FsbCKsAQoa",
            "UHJvdG9PQU1hcmdpbkNhbGxVcGRhdGVSZXESSQoLcGF5bG9hZFR5cGUYASAB",
            "KA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6H1BST1RPX09BX01BUkdJTl9DQUxM",
            "X1VQREFURV9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgCIAIoAxImCgpt",
            "YXJnaW5DYWxsGAMgAigLMhIuUHJvdG9PQU1hcmdpbkNhbGwiZwoaUHJvdG9P",
            "QU1hcmdpbkNhbGxVcGRhdGVSZXMSSQoLcGF5bG9hZFR5cGUYASABKA4yEy5Q",
            "cm90b09BUGF5bG9hZFR5cGU6H1BST1RPX09BX01BUkdJTl9DQUxMX1VQREFU",
            "RV9SRVMisAEKHFByb3RvT0FNYXJnaW5DYWxsVXBkYXRlRXZlbnQSSwoLcGF5",
            "bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6IVBST1RPX09B",
            "X01BUkdJTl9DQUxMX1VQREFURV9FVkVOVBIbChNjdGlkVHJhZGVyQWNjb3Vu",
            "dElkGAIgAigDEiYKCm1hcmdpbkNhbGwYAyACKAsyEi5Qcm90b09BTWFyZ2lu",
            "Q2FsbCKyAQodUHJvdG9PQU1hcmdpbkNhbGxUcmlnZ2VyRXZlbnQSTAoLcGF5",
            "bG9hZFR5cGUYASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6IlBST1RPX09B",
            "X01BUkdJTl9DQUxMX1RSSUdHRVJfRVZFTlQSGwoTY3RpZFRyYWRlckFjY291",
            "bnRJZBgCIAIoAxImCgptYXJnaW5DYWxsGAMgAigLMhIuUHJvdG9PQU1hcmdp",
            "bkNhbGwioAEKIFByb3RvT0FHZXREeW5hbWljTGV2ZXJhZ2VCeUlEUmVxEksK",
            "C3BheWxvYWRUeXBlGAEgASgOMhMuUHJvdG9PQVBheWxvYWRUeXBlOiFQUk9U",
            "T19PQV9HRVRfRFlOQU1JQ19MRVZFUkFHRV9SRVESGwoTY3RpZFRyYWRlckFj",
            "Y291bnRJZBgCIAIoAxISCgpsZXZlcmFnZUlkGAMgAigDIrcBCiBQcm90b09B",
            "R2V0RHluYW1pY0xldmVyYWdlQnlJRFJlcxJLCgtwYXlsb2FkVHlwZRgBIAEo",
            "DjITLlByb3RvT0FQYXlsb2FkVHlwZTohUFJPVE9fT0FfR0VUX0RZTkFNSUNf",
            "TEVWRVJBR0VfUkVTEhsKE2N0aWRUcmFkZXJBY2NvdW50SWQYAiACKAMSKQoI",
            "bGV2ZXJhZ2UYAyACKAsyFy5Qcm90b09BRHluYW1pY0xldmVyYWdlIs4BCh5Q",
            "cm90b09BRGVhbExpc3RCeVBvc2l0aW9uSWRSZXESTwoLcGF5bG9hZFR5cGUY",
            "ASABKA4yEy5Qcm90b09BUGF5bG9hZFR5cGU6JVBST1RPX09BX0RFQUxfTElT",
            "VF9CWV9QT1NJVElPTl9JRF9SRVESGwoTY3RpZFRyYWRlckFjY291bnRJZBgC",
            "IAIoAxISCgpwb3NpdGlvbklkGAMgAigDEhUKDWZyb21UaW1lc3RhbXAYBCAC",
            "KAMSEwoLdG9UaW1lc3RhbXAYBSACKAMiuwEKHlByb3RvT0FEZWFsTGlzdEJ5",
            "UG9zaXRpb25JZFJlcxJPCgtwYXlsb2FkVHlwZRgBIAEoDjITLlByb3RvT0FQ",
            "YXlsb2FkVHlwZTolUFJPVE9fT0FfREVBTF9MSVNUX0JZX1BPU0lUSU9OX0lE",
            "X1JFUxIbChNjdGlkVHJhZGVyQWNjb3VudElkGAIgAigDEhoKBGRlYWwYAyAD",
            "KAsyDC5Qcm90b09BRGVhbBIPCgdoYXNNb3JlGAQgAigIQkIKH2NvbS54dHJh",
            "ZGVyLnByb3RvY29sLm9wZW5hcGkudjJCGkNvbnRhaW5lck9wZW5BcGlWMk1l",
            "c3NhZ2VzUAGgAQE="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { OpenApiModelMessagesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            null,
            null,
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(ClientDisconnectEvent), ClientDisconnectEvent.Parser, new[]{ "PayloadType", "Reason" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(AccountsTokenInvalidatedEvent), AccountsTokenInvalidatedEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountIds", "Reason" }, null, null, null, null),
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(ExecutionEvent), ExecutionEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "ExecutionType", "Position", "Order", "Deal", "BonusDepositWithdraw", "DepositWithdraw", "ErrorCode", "IsServerEvent" }, null, null, null, null),
            null,
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(TrailingSLChangedEvent), TrailingSLChangedEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "PositionId", "OrderId", "StopPrice", "UtcLastUpdateTimestamp" }, null, null, null, null),
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(SymbolChangedEvent), SymbolChangedEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "SymbolId" }, null, null, null, null),
            null,
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(TraderUpdatedEvent), TraderUpdatedEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "Trader" }, null, null, null, null),
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(OrderErrorEvent), OrderErrorEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "ErrorCode", "OrderId", "PositionId", "Description" }, null, null, null, null),
            null,
            null,
            null,
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(MarginChangedEvent), MarginChangedEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "PositionId", "UsedMargin", "MoneyDigits" }, null, null, null, null),
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(SpotEvent), SpotEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "SymbolId", "Bid", "Ask", "Trendbar", "SessionClose", "Timestamp" }, null, null, null, null),
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(DepthEvent), DepthEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "SymbolId", "NewQuotes", "DeletedQuotes" }, null, null, null, null),
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(AccountDisconnectEvent), AccountDisconnectEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountId" }, null, null, null, null),
            null,
            null,
            null,
            null,
            new pbr::GeneratedClrTypeInfo(typeof(MarginCallUpdateEvent), MarginCallUpdateEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "MarginCall" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(MarginCallTriggerEvent), MarginCallTriggerEvent.Parser, new[]{ "PayloadType", "CtidTraderAccountId", "MarginCall" }, null, null, null, null),
            null,
            null,
            null,
            null,
          }));
    }
    #endregion
  
  }
  #region Messages
  /// <summary>
  ///* Event that is sent when the connection with the client application is cancelled by the server. All the sessions for the traders' accounts will be terminated. 
  /// </summary>
  public sealed partial class ClientDisconnectEvent : pb::IMessage<ClientDisconnectEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientDisconnectEvent> _parser = new pb::MessageParser<ClientDisconnectEvent>(() => new ClientDisconnectEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientDisconnectEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[5]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientDisconnectEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientDisconnectEvent(ClientDisconnectEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientDisconnectEvent Clone() {
      return new ClientDisconnectEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaClientDisconnectEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private readonly static string ReasonDefaultValue = "";
  
    private string reason_;
    /// <summary>
    /// The disconnection reason explained. For example: The application access was blocked by cTrader Administrator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientDisconnectEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientDisconnectEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientDisconnectEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent when a session to a specific trader's account is terminated by the server but the existing connections with the other trader's accounts are maintained. 
  /// </summary>
  public sealed partial class AccountsTokenInvalidatedEvent : pb::IMessage<AccountsTokenInvalidatedEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountsTokenInvalidatedEvent> _parser = new pb::MessageParser<AccountsTokenInvalidatedEvent>(() => new AccountsTokenInvalidatedEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccountsTokenInvalidatedEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[6]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountsTokenInvalidatedEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountsTokenInvalidatedEvent(AccountsTokenInvalidatedEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountIds_ = other.ctidTraderAccountIds_.Clone();
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountsTokenInvalidatedEvent Clone() {
      return new AccountsTokenInvalidatedEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaAccountsTokenInvalidatedEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountIds" field.</summary>
    public const int CtidTraderAccountIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_ctidTraderAccountIds_codec
        = pb::FieldCodec.ForInt64(16);
    private readonly pbc::RepeatedField<long> ctidTraderAccountIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// The unique identifier of the trader's account in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> CtidTraderAccountIds {
      get { return ctidTraderAccountIds_; }
    }
  
    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 3;
    private readonly static string ReasonDefaultValue = "";
  
    private string reason_;
    /// <summary>
    /// The disconnection reason explained. For example: Access Token is expired or recalled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccountsTokenInvalidatedEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccountsTokenInvalidatedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if(!ctidTraderAccountIds_.Equals(other.ctidTraderAccountIds_)) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      hash ^= ctidTraderAccountIds_.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      ctidTraderAccountIds_.WriteTo(output, _repeated_ctidTraderAccountIds_codec);
      if (HasReason) {
        output.WriteRawTag(26);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      ctidTraderAccountIds_.WriteTo(ref output, _repeated_ctidTraderAccountIds_codec);
      if (HasReason) {
        output.WriteRawTag(26);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      size += ctidTraderAccountIds_.CalculateSize(_repeated_ctidTraderAccountIds_codec);
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccountsTokenInvalidatedEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      ctidTraderAccountIds_.Add(other.ctidTraderAccountIds_);
      if (other.HasReason) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            ctidTraderAccountIds_.AddEntriesFrom(input, _repeated_ctidTraderAccountIds_codec);
            break;
          }
          case 26: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            ctidTraderAccountIds_.AddEntriesFrom(ref input, _repeated_ctidTraderAccountIds_codec);
            break;
          }
          case 26: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent following the successful order acceptance or execution by the server. Acts as response to the NewOrderReq, CancelOrderReq, AmendOrderReq, AmendPositionSLTPReq, ClosePositionReq requests. Also, the event is sent when a Deposit/Withdrawal took place. 
  /// </summary>
  public sealed partial class ExecutionEvent : pb::IMessage<ExecutionEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecutionEvent> _parser = new pb::MessageParser<ExecutionEvent>(() => new ExecutionEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExecutionEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[10]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionEvent(ExecutionEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      executionType_ = other.executionType_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      order_ = other.order_ != null ? other.order_.Clone() : null;
      deal_ = other.deal_ != null ? other.deal_.Clone() : null;
      bonusDepositWithdraw_ = other.bonusDepositWithdraw_ != null ? other.bonusDepositWithdraw_.Clone() : null;
      depositWithdraw_ = other.depositWithdraw_ != null ? other.depositWithdraw_.Clone() : null;
      errorCode_ = other.errorCode_;
      isServerEvent_ = other.isServerEvent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionEvent Clone() {
      return new ExecutionEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaExecutionEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "executionType" field.</summary>
    public const int ExecutionTypeFieldNumber = 3;
    private readonly static ExecutionType ExecutionTypeDefaultValue = ExecutionType.OrderAccepted;
  
    private ExecutionType executionType_;
    /// <summary>
    /// Type of the order operation. For example: ACCEPTED, FILLED, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionType ExecutionType {
      get { if ((_hasBits0 & 4) != 0) { return executionType_; } else { return ExecutionTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        executionType_ = value;
      }
    }
    /// <summary>Gets whether the "executionType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExecutionType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "executionType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExecutionType() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private Model.Position position_;
    /// <summary>
    /// Reference to the position linked with the execution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Model.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }
  
    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 5;
    private Model.Order order_;
    /// <summary>
    /// Reference to the initial order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Model.Order Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }
  
    /// <summary>Field number for the "deal" field.</summary>
    public const int DealFieldNumber = 6;
    private Model.Deal deal_;
    /// <summary>
    /// Reference to the deal (execution).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Model.Deal Deal {
      get { return deal_; }
      set {
        deal_ = value;
      }
    }
  
    /// <summary>Field number for the "bonusDepositWithdraw" field.</summary>
    public const int BonusDepositWithdrawFieldNumber = 7;
    private BonusDepositWithdraw bonusDepositWithdraw_;
    /// <summary>
    /// Reference to the Bonus Deposit or Withdrawal operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BonusDepositWithdraw BonusDepositWithdraw {
      get { return bonusDepositWithdraw_; }
      set {
        bonusDepositWithdraw_ = value;
      }
    }
  
    /// <summary>Field number for the "depositWithdraw" field.</summary>
    public const int DepositWithdrawFieldNumber = 8;
    private Model.DepositWithdraw depositWithdraw_;
    /// <summary>
    /// Reference to the Deposit or Withdrawal operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Model.DepositWithdraw DepositWithdraw {
      get { return depositWithdraw_; }
      set {
        depositWithdraw_ = value;
      }
    }
  
    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 9;
    private readonly static string ErrorCodeDefaultValue = "";
  
    private string errorCode_;
    /// <summary>
    ///The name of the ProtoErrorCode or the other custom ErrorCodes (e.g. ProtoCHErrorCode).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorCode {
      get { return errorCode_ ?? ErrorCodeDefaultValue; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorCode {
      get { return errorCode_ != null; }
    }
    /// <summary>Clears the value of the "errorCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorCode() {
      errorCode_ = null;
    }
  
    /// <summary>Field number for the "isServerEvent" field.</summary>
    public const int IsServerEventFieldNumber = 10;
    private readonly static bool IsServerEventDefaultValue = false;
  
    private bool isServerEvent_;
    /// <summary>
    /// If TRUE then the event generated by the server logic instead of the trader's request. (e.g. stop-out).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsServerEvent {
      get { if ((_hasBits0 & 8) != 0) { return isServerEvent_; } else { return IsServerEventDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isServerEvent_ = value;
      }
    }
    /// <summary>Gets whether the "isServerEvent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsServerEvent {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "isServerEvent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsServerEvent() {
      _hasBits0 &= ~8;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExecutionEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExecutionEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (ExecutionType != other.ExecutionType) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Order, other.Order)) return false;
      if (!object.Equals(Deal, other.Deal)) return false;
      if (!object.Equals(BonusDepositWithdraw, other.BonusDepositWithdraw)) return false;
      if (!object.Equals(DepositWithdraw, other.DepositWithdraw)) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (IsServerEvent != other.IsServerEvent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasExecutionType) hash ^= ExecutionType.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (order_ != null) hash ^= Order.GetHashCode();
      if (deal_ != null) hash ^= Deal.GetHashCode();
      if (bonusDepositWithdraw_ != null) hash ^= BonusDepositWithdraw.GetHashCode();
      if (depositWithdraw_ != null) hash ^= DepositWithdraw.GetHashCode();
      if (HasErrorCode) hash ^= ErrorCode.GetHashCode();
      if (HasIsServerEvent) hash ^= IsServerEvent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasExecutionType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ExecutionType);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (order_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Order);
      }
      if (deal_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Deal);
      }
      if (bonusDepositWithdraw_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BonusDepositWithdraw);
      }
      if (depositWithdraw_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DepositWithdraw);
      }
      if (HasErrorCode) {
        output.WriteRawTag(74);
        output.WriteString(ErrorCode);
      }
      if (HasIsServerEvent) {
        output.WriteRawTag(80);
        output.WriteBool(IsServerEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasExecutionType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ExecutionType);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (order_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Order);
      }
      if (deal_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Deal);
      }
      if (bonusDepositWithdraw_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BonusDepositWithdraw);
      }
      if (depositWithdraw_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DepositWithdraw);
      }
      if (HasErrorCode) {
        output.WriteRawTag(74);
        output.WriteString(ErrorCode);
      }
      if (HasIsServerEvent) {
        output.WriteRawTag(80);
        output.WriteBool(IsServerEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasExecutionType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ExecutionType);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      if (deal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deal);
      }
      if (bonusDepositWithdraw_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BonusDepositWithdraw);
      }
      if (depositWithdraw_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepositWithdraw);
      }
      if (HasErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (HasIsServerEvent) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExecutionEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasExecutionType) {
        ExecutionType = other.ExecutionType;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new Model.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.order_ != null) {
        if (order_ == null) {
          Order = new Model.Order();
        }
        Order.MergeFrom(other.Order);
      }
      if (other.deal_ != null) {
        if (deal_ == null) {
          Deal = new Model.Deal();
        }
        Deal.MergeFrom(other.Deal);
      }
      if (other.bonusDepositWithdraw_ != null) {
        if (bonusDepositWithdraw_ == null) {
          BonusDepositWithdraw = new BonusDepositWithdraw();
        }
        BonusDepositWithdraw.MergeFrom(other.BonusDepositWithdraw);
      }
      if (other.depositWithdraw_ != null) {
        if (depositWithdraw_ == null) {
          DepositWithdraw = new Model.DepositWithdraw();
        }
        DepositWithdraw.MergeFrom(other.DepositWithdraw);
      }
      if (other.HasErrorCode) {
        ErrorCode = other.ErrorCode;
      }
      if (other.HasIsServerEvent) {
        IsServerEvent = other.IsServerEvent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            ExecutionType = (ExecutionType) input.ReadEnum();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new Model.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 42: {
            if (order_ == null) {
              Order = new Model.Order();
            }
            input.ReadMessage(Order);
            break;
          }
          case 50: {
            if (deal_ == null) {
              Deal = new Model.Deal();
            }
            input.ReadMessage(Deal);
            break;
          }
          case 58: {
            if (bonusDepositWithdraw_ == null) {
              BonusDepositWithdraw = new BonusDepositWithdraw();
            }
            input.ReadMessage(BonusDepositWithdraw);
            break;
          }
          case 66: {
            if (depositWithdraw_ == null) {
              DepositWithdraw = new Model.DepositWithdraw();
            }
            input.ReadMessage(DepositWithdraw);
            break;
          }
          case 74: {
            ErrorCode = input.ReadString();
            break;
          }
          case 80: {
            IsServerEvent = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            ExecutionType = (ExecutionType) input.ReadEnum();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new Model.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 42: {
            if (order_ == null) {
              Order = new Model.Order();
            }
            input.ReadMessage(Order);
            break;
          }
          case 50: {
            if (deal_ == null) {
              Deal = new Model.Deal();
            }
            input.ReadMessage(Deal);
            break;
          }
          case 58: {
            if (bonusDepositWithdraw_ == null) {
              BonusDepositWithdraw = new BonusDepositWithdraw();
            }
            input.ReadMessage(BonusDepositWithdraw);
            break;
          }
          case 66: {
            if (depositWithdraw_ == null) {
              DepositWithdraw = new Model.DepositWithdraw();
            }
            input.ReadMessage(DepositWithdraw);
            break;
          }
          case 74: {
            ErrorCode = input.ReadString();
            break;
          }
          case 80: {
            IsServerEvent = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent when the level of the Trailing Stop Loss is changed due to the price level changes. 
  /// </summary>
  public sealed partial class TrailingSLChangedEvent : pb::IMessage<TrailingSLChangedEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrailingSLChangedEvent> _parser = new pb::MessageParser<TrailingSLChangedEvent>(() => new TrailingSLChangedEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrailingSLChangedEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[15]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrailingSLChangedEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrailingSLChangedEvent(TrailingSLChangedEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      positionId_ = other.positionId_;
      orderId_ = other.orderId_;
      stopPrice_ = other.stopPrice_;
      utcLastUpdateTimestamp_ = other.utcLastUpdateTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrailingSLChangedEvent Clone() {
      return new TrailingSLChangedEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaTrailingSlChangedEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "positionId" field.</summary>
    public const int PositionIdFieldNumber = 3;
    private readonly static long PositionIdDefaultValue = 0L;
  
    private long positionId_;
    /// <summary>
    /// The unique ID of the position.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PositionId {
      get { if ((_hasBits0 & 4) != 0) { return positionId_; } else { return PositionIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        positionId_ = value;
      }
    }
    /// <summary>Gets whether the "positionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPositionId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "positionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPositionId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "orderId" field.</summary>
    public const int OrderIdFieldNumber = 4;
    private readonly static long OrderIdDefaultValue = 0L;
  
    private long orderId_;
    /// <summary>
    /// The unique ID of the order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OrderId {
      get { if ((_hasBits0 & 8) != 0) { return orderId_; } else { return OrderIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        orderId_ = value;
      }
    }
    /// <summary>Gets whether the "orderId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrderId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "orderId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrderId() {
      _hasBits0 &= ~8;
    }
  
    /// <summary>Field number for the "stopPrice" field.</summary>
    public const int StopPriceFieldNumber = 5;
    private readonly static double StopPriceDefaultValue = 0D;
  
    private double stopPrice_;
    /// <summary>
    /// New value of the Stop Loss price.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StopPrice {
      get { if ((_hasBits0 & 16) != 0) { return stopPrice_; } else { return StopPriceDefaultValue; } }
      set {
        _hasBits0 |= 16;
        stopPrice_ = value;
      }
    }
    /// <summary>Gets whether the "stopPrice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStopPrice {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "stopPrice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStopPrice() {
      _hasBits0 &= ~16;
    }
  
    /// <summary>Field number for the "utcLastUpdateTimestamp" field.</summary>
    public const int UtcLastUpdateTimestampFieldNumber = 6;
    private readonly static long UtcLastUpdateTimestampDefaultValue = 0L;
  
    private long utcLastUpdateTimestamp_;
    /// <summary>
    /// The exact UTC time when the Stop Loss was updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UtcLastUpdateTimestamp {
      get { if ((_hasBits0 & 32) != 0) { return utcLastUpdateTimestamp_; } else { return UtcLastUpdateTimestampDefaultValue; } }
      set {
        _hasBits0 |= 32;
        utcLastUpdateTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "utcLastUpdateTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUtcLastUpdateTimestamp {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "utcLastUpdateTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUtcLastUpdateTimestamp() {
      _hasBits0 &= ~32;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrailingSLChangedEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrailingSLChangedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (PositionId != other.PositionId) return false;
      if (OrderId != other.OrderId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StopPrice, other.StopPrice)) return false;
      if (UtcLastUpdateTimestamp != other.UtcLastUpdateTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasPositionId) hash ^= PositionId.GetHashCode();
      if (HasOrderId) hash ^= OrderId.GetHashCode();
      if (HasStopPrice) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StopPrice);
      if (HasUtcLastUpdateTimestamp) hash ^= UtcLastUpdateTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(24);
        output.WriteInt64(PositionId);
      }
      if (HasOrderId) {
        output.WriteRawTag(32);
        output.WriteInt64(OrderId);
      }
      if (HasStopPrice) {
        output.WriteRawTag(41);
        output.WriteDouble(StopPrice);
      }
      if (HasUtcLastUpdateTimestamp) {
        output.WriteRawTag(48);
        output.WriteInt64(UtcLastUpdateTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(24);
        output.WriteInt64(PositionId);
      }
      if (HasOrderId) {
        output.WriteRawTag(32);
        output.WriteInt64(OrderId);
      }
      if (HasStopPrice) {
        output.WriteRawTag(41);
        output.WriteDouble(StopPrice);
      }
      if (HasUtcLastUpdateTimestamp) {
        output.WriteRawTag(48);
        output.WriteInt64(UtcLastUpdateTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasPositionId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PositionId);
      }
      if (HasOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderId);
      }
      if (HasStopPrice) {
        size += 1 + 8;
      }
      if (HasUtcLastUpdateTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UtcLastUpdateTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrailingSLChangedEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasPositionId) {
        PositionId = other.PositionId;
      }
      if (other.HasOrderId) {
        OrderId = other.OrderId;
      }
      if (other.HasStopPrice) {
        StopPrice = other.StopPrice;
      }
      if (other.HasUtcLastUpdateTimestamp) {
        UtcLastUpdateTimestamp = other.UtcLastUpdateTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            PositionId = input.ReadInt64();
            break;
          }
          case 32: {
            OrderId = input.ReadInt64();
            break;
          }
          case 41: {
            StopPrice = input.ReadDouble();
            break;
          }
          case 48: {
            UtcLastUpdateTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            PositionId = input.ReadInt64();
            break;
          }
          case 32: {
            OrderId = input.ReadInt64();
            break;
          }
          case 41: {
            StopPrice = input.ReadDouble();
            break;
          }
          case 48: {
            UtcLastUpdateTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent when the symbol is changed on the Server side. 
  /// </summary>
  public sealed partial class SymbolChangedEvent : pb::IMessage<SymbolChangedEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SymbolChangedEvent> _parser = new pb::MessageParser<SymbolChangedEvent>(() => new SymbolChangedEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SymbolChangedEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[24]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolChangedEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolChangedEvent(SymbolChangedEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      symbolId_ = other.symbolId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SymbolChangedEvent Clone() {
      return new SymbolChangedEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaSymbolChangedEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_symbolId_codec
        = pb::FieldCodec.ForInt64(24);
    private readonly pbc::RepeatedField<long> symbolId_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> SymbolId {
      get { return symbolId_; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SymbolChangedEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SymbolChangedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if(!symbolId_.Equals(other.symbolId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      hash ^= symbolId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(output, _repeated_symbolId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      symbolId_.WriteTo(ref output, _repeated_symbolId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      size += symbolId_.CalculateSize(_repeated_symbolId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SymbolChangedEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      symbolId_.Add(other.symbolId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(input, _repeated_symbolId_codec);
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            symbolId_.AddEntriesFrom(ref input, _repeated_symbolId_codec);
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent when a Trader is updated on Server side. 
  /// </summary>
  public sealed partial class TraderUpdatedEvent : pb::IMessage<TraderUpdatedEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TraderUpdatedEvent> _parser = new pb::MessageParser<TraderUpdatedEvent>(() => new TraderUpdatedEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TraderUpdatedEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[29]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraderUpdatedEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraderUpdatedEvent(TraderUpdatedEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      trader_ = other.trader_ != null ? other.trader_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraderUpdatedEvent Clone() {
      return new TraderUpdatedEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaTraderUpdateEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "trader" field.</summary>
    public const int TraderFieldNumber = 3;
    private Trader trader_;
    /// <summary>
    /// The Trader account information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Trader Trader {
      get { return trader_; }
      set {
        trader_ = value;
      }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TraderUpdatedEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TraderUpdatedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (!object.Equals(Trader, other.Trader)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (trader_ != null) hash ^= Trader.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (trader_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Trader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (trader_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Trader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (trader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trader);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TraderUpdatedEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.trader_ != null) {
        if (trader_ == null) {
          Trader = new Trader();
        }
        Trader.MergeFrom(other.Trader);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26: {
            if (trader_ == null) {
              Trader = new Trader();
            }
            input.ReadMessage(Trader);
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26: {
            if (trader_ == null) {
              Trader = new Trader();
            }
            input.ReadMessage(Trader);
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent when errors occur during the order requests. 
  /// </summary>
  public sealed partial class OrderErrorEvent : pb::IMessage<OrderErrorEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderErrorEvent> _parser = new pb::MessageParser<OrderErrorEvent>(() => new OrderErrorEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OrderErrorEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[32]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderErrorEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderErrorEvent(OrderErrorEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      errorCode_ = other.errorCode_;
      orderId_ = other.orderId_;
      positionId_ = other.positionId_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderErrorEvent Clone() {
      return new OrderErrorEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaOrderErrorEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 5;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    ///Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 4) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 2;
    private readonly static string ErrorCodeDefaultValue = "";
  
    private string errorCode_;
    /// <summary>
    /// The name of the ProtoErrorCode or the other custom ErrorCodes (e.g. ProtoCHErrorCode).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorCode {
      get { return errorCode_ ?? ErrorCodeDefaultValue; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "errorCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorCode {
      get { return errorCode_ != null; }
    }
    /// <summary>Clears the value of the "errorCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorCode() {
      errorCode_ = null;
    }
  
    /// <summary>Field number for the "orderId" field.</summary>
    public const int OrderIdFieldNumber = 3;
    private readonly static long OrderIdDefaultValue = 0L;
  
    private long orderId_;
    /// <summary>
    /// The unique ID of the order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OrderId {
      get { if ((_hasBits0 & 2) != 0) { return orderId_; } else { return OrderIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        orderId_ = value;
      }
    }
    /// <summary>Gets whether the "orderId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrderId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "orderId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrderId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "positionId" field.</summary>
    public const int PositionIdFieldNumber = 6;
    private readonly static long PositionIdDefaultValue = 0L;
  
    private long positionId_;
    /// <summary>
    /// The unique ID of the position.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PositionId {
      get { if ((_hasBits0 & 8) != 0) { return positionId_; } else { return PositionIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        positionId_ = value;
      }
    }
    /// <summary>Gets whether the "positionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPositionId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "positionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPositionId() {
      _hasBits0 &= ~8;
    }
  
    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 7;
    private readonly static string DescriptionDefaultValue = "";
  
    private string description_;
    /// <summary>
    /// The error description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDescription() {
      description_ = null;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OrderErrorEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OrderErrorEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (OrderId != other.OrderId) return false;
      if (PositionId != other.PositionId) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasErrorCode) hash ^= ErrorCode.GetHashCode();
      if (HasOrderId) hash ^= OrderId.GetHashCode();
      if (HasPositionId) hash ^= PositionId.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasErrorCode) {
        output.WriteRawTag(18);
        output.WriteString(ErrorCode);
      }
      if (HasOrderId) {
        output.WriteRawTag(24);
        output.WriteInt64(OrderId);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(40);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(48);
        output.WriteInt64(PositionId);
      }
      if (HasDescription) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasErrorCode) {
        output.WriteRawTag(18);
        output.WriteString(ErrorCode);
      }
      if (HasOrderId) {
        output.WriteRawTag(24);
        output.WriteInt64(OrderId);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(40);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(48);
        output.WriteInt64(PositionId);
      }
      if (HasDescription) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (HasOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderId);
      }
      if (HasPositionId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PositionId);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OrderErrorEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasErrorCode) {
        ErrorCode = other.ErrorCode;
      }
      if (other.HasOrderId) {
        OrderId = other.OrderId;
      }
      if (other.HasPositionId) {
        PositionId = other.PositionId;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            ErrorCode = input.ReadString();
            break;
          }
          case 24: {
            OrderId = input.ReadInt64();
            break;
          }
          case 40: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 48: {
            PositionId = input.ReadInt64();
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 18: {
            ErrorCode = input.ReadString();
            break;
          }
          case 24: {
            OrderId = input.ReadInt64();
            break;
          }
          case 40: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 48: {
            PositionId = input.ReadInt64();
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent when the margin allocated to a specific position is changed. 
  /// </summary>
  public sealed partial class MarginChangedEvent : pb::IMessage<MarginChangedEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarginChangedEvent> _parser = new pb::MessageParser<MarginChangedEvent>(() => new MarginChangedEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarginChangedEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[39]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginChangedEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginChangedEvent(MarginChangedEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      positionId_ = other.positionId_;
      usedMargin_ = other.usedMargin_;
      moneyDigits_ = other.moneyDigits_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginChangedEvent Clone() {
      return new MarginChangedEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaMarginChangedEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "positionId" field.</summary>
    public const int PositionIdFieldNumber = 3;
    private readonly static ulong PositionIdDefaultValue = 0UL;
  
    private ulong positionId_;
    /// <summary>
    /// The unique ID of the position.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong PositionId {
      get { if ((_hasBits0 & 4) != 0) { return positionId_; } else { return PositionIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        positionId_ = value;
      }
    }
    /// <summary>Gets whether the "positionId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPositionId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "positionId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPositionId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "usedMargin" field.</summary>
    public const int UsedMarginFieldNumber = 4;
    private readonly static ulong UsedMarginDefaultValue = 0UL;
  
    private ulong usedMargin_;
    /// <summary>
    /// The new value of the margin used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UsedMargin {
      get { if ((_hasBits0 & 8) != 0) { return usedMargin_; } else { return UsedMarginDefaultValue; } }
      set {
        _hasBits0 |= 8;
        usedMargin_ = value;
      }
    }
    /// <summary>Gets whether the "usedMargin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsedMargin {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "usedMargin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsedMargin() {
      _hasBits0 &= ~8;
    }
  
    /// <summary>Field number for the "moneyDigits" field.</summary>
    public const int MoneyDigitsFieldNumber = 5;
    private readonly static uint MoneyDigitsDefaultValue = 0;
  
    private uint moneyDigits_;
    /// <summary>
    /// Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects usedMargin.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MoneyDigits {
      get { if ((_hasBits0 & 16) != 0) { return moneyDigits_; } else { return MoneyDigitsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        moneyDigits_ = value;
      }
    }
    /// <summary>Gets whether the "moneyDigits" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMoneyDigits {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "moneyDigits" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMoneyDigits() {
      _hasBits0 &= ~16;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarginChangedEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarginChangedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (PositionId != other.PositionId) return false;
      if (UsedMargin != other.UsedMargin) return false;
      if (MoneyDigits != other.MoneyDigits) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasPositionId) hash ^= PositionId.GetHashCode();
      if (HasUsedMargin) hash ^= UsedMargin.GetHashCode();
      if (HasMoneyDigits) hash ^= MoneyDigits.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(24);
        output.WriteUInt64(PositionId);
      }
      if (HasUsedMargin) {
        output.WriteRawTag(32);
        output.WriteUInt64(UsedMargin);
      }
      if (HasMoneyDigits) {
        output.WriteRawTag(40);
        output.WriteUInt32(MoneyDigits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasPositionId) {
        output.WriteRawTag(24);
        output.WriteUInt64(PositionId);
      }
      if (HasUsedMargin) {
        output.WriteRawTag(32);
        output.WriteUInt64(UsedMargin);
      }
      if (HasMoneyDigits) {
        output.WriteRawTag(40);
        output.WriteUInt32(MoneyDigits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasPositionId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PositionId);
      }
      if (HasUsedMargin) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UsedMargin);
      }
      if (HasMoneyDigits) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MoneyDigits);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarginChangedEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasPositionId) {
        PositionId = other.PositionId;
      }
      if (other.HasUsedMargin) {
        UsedMargin = other.UsedMargin;
      }
      if (other.HasMoneyDigits) {
        MoneyDigits = other.MoneyDigits;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            PositionId = input.ReadUInt64();
            break;
          }
          case 32: {
            UsedMargin = input.ReadUInt64();
            break;
          }
          case 40: {
            MoneyDigits = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            PositionId = input.ReadUInt64();
            break;
          }
          case 32: {
            UsedMargin = input.ReadUInt64();
            break;
          }
          case 40: {
            MoneyDigits = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent when a new spot event is generated on the server side. Requires subscription on the spot events, see SubscribeSpotsReq. First event, received after subscription will contain latest spot prices even if market is closed. 
  /// </summary>
  public sealed partial class SpotEvent : pb::IMessage<SpotEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpotEvent> _parser = new pb::MessageParser<SpotEvent>(() => new SpotEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpotEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[50]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotEvent(SpotEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      symbolId_ = other.symbolId_;
      bid_ = other.bid_;
      ask_ = other.ask_;
      trendbar_ = other.trendbar_.Clone();
      sessionClose_ = other.sessionClose_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotEvent Clone() {
      return new SpotEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaSpotEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 3;
    private readonly static long SymbolIdDefaultValue = 0L;
  
    private long symbolId_;
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SymbolId {
      get { if ((_hasBits0 & 4) != 0) { return symbolId_; } else { return SymbolIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        symbolId_ = value;
      }
    }
    /// <summary>Gets whether the "symbolId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSymbolId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "symbolId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSymbolId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "bid" field.</summary>
    public const int BidFieldNumber = 4;
    private readonly static ulong BidDefaultValue = 0UL;
  
    private ulong bid_;
    /// <summary>
    /// Bid price. Specified in 1/100_000 of unit of a price. (e.g. 1.23 -> 123_000)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Bid {
      get { if ((_hasBits0 & 8) != 0) { return bid_; } else { return BidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        bid_ = value;
      }
    }
    /// <summary>Gets whether the "bid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "bid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBid() {
      _hasBits0 &= ~8;
    }
  
    /// <summary>Field number for the "ask" field.</summary>
    public const int AskFieldNumber = 5;
    private readonly static ulong AskDefaultValue = 0UL;
  
    private ulong ask_;
    /// <summary>
    /// Ask price. Specified in 1/100_000 of unit of a price.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Ask {
      get { if ((_hasBits0 & 16) != 0) { return ask_; } else { return AskDefaultValue; } }
      set {
        _hasBits0 |= 16;
        ask_ = value;
      }
    }
    /// <summary>Gets whether the "ask" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAsk {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "ask" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAsk() {
      _hasBits0 &= ~16;
    }
  
    /// <summary>Field number for the "trendbar" field.</summary>
    public const int TrendbarFieldNumber = 6;
    private static readonly pb::FieldCodec<Model.Trendbar> _repeated_trendbar_codec
        = pb::FieldCodec.ForMessage(50, Model.Trendbar.Parser);
    private readonly pbc::RepeatedField<Model.Trendbar> trendbar_ = new pbc::RepeatedField<Model.Trendbar>();
    /// <summary>
    /// Returns live trend bar. Requires subscription on the trend bars.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<Model.Trendbar> Trendbar {
      get { return trendbar_; }
    }
  
    /// <summary>Field number for the "sessionClose" field.</summary>
    public const int SessionCloseFieldNumber = 7;
    private readonly static ulong SessionCloseDefaultValue = 0UL;
  
    private ulong sessionClose_;
    /// <summary>
    /// Last session close. Specified in 1/100_000 of unit of a price.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SessionClose {
      get { if ((_hasBits0 & 32) != 0) { return sessionClose_; } else { return SessionCloseDefaultValue; } }
      set {
        _hasBits0 |= 32;
        sessionClose_ = value;
      }
    }
    /// <summary>Gets whether the "sessionClose" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionClose {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "sessionClose" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionClose() {
      _hasBits0 &= ~32;
    }
  
    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 8;
    private readonly static long TimestampDefaultValue = 0L;
  
    private long timestamp_;
    /// <summary>
    /// The UNIX timestamp for spot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { if ((_hasBits0 & 64) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 64;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestamp {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestamp() {
      _hasBits0 &= ~64;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpotEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpotEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (SymbolId != other.SymbolId) return false;
      if (Bid != other.Bid) return false;
      if (Ask != other.Ask) return false;
      if(!trendbar_.Equals(other.trendbar_)) return false;
      if (SessionClose != other.SessionClose) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasSymbolId) hash ^= SymbolId.GetHashCode();
      if (HasBid) hash ^= Bid.GetHashCode();
      if (HasAsk) hash ^= Ask.GetHashCode();
      hash ^= trendbar_.GetHashCode();
      if (HasSessionClose) hash ^= SessionClose.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        output.WriteRawTag(24);
        output.WriteInt64(SymbolId);
      }
      if (HasBid) {
        output.WriteRawTag(32);
        output.WriteUInt64(Bid);
      }
      if (HasAsk) {
        output.WriteRawTag(40);
        output.WriteUInt64(Ask);
      }
      trendbar_.WriteTo(output, _repeated_trendbar_codec);
      if (HasSessionClose) {
        output.WriteRawTag(56);
        output.WriteUInt64(SessionClose);
      }
      if (HasTimestamp) {
        output.WriteRawTag(64);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        output.WriteRawTag(24);
        output.WriteInt64(SymbolId);
      }
      if (HasBid) {
        output.WriteRawTag(32);
        output.WriteUInt64(Bid);
      }
      if (HasAsk) {
        output.WriteRawTag(40);
        output.WriteUInt64(Ask);
      }
      trendbar_.WriteTo(ref output, _repeated_trendbar_codec);
      if (HasSessionClose) {
        output.WriteRawTag(56);
        output.WriteUInt64(SessionClose);
      }
      if (HasTimestamp) {
        output.WriteRawTag(64);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SymbolId);
      }
      if (HasBid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Bid);
      }
      if (HasAsk) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Ask);
      }
      size += trendbar_.CalculateSize(_repeated_trendbar_codec);
      if (HasSessionClose) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SessionClose);
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpotEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      if (other.HasBid) {
        Bid = other.Bid;
      }
      if (other.HasAsk) {
        Ask = other.Ask;
      }
      trendbar_.Add(other.trendbar_);
      if (other.HasSessionClose) {
        SessionClose = other.SessionClose;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            SymbolId = input.ReadInt64();
            break;
          }
          case 32: {
            Bid = input.ReadUInt64();
            break;
          }
          case 40: {
            Ask = input.ReadUInt64();
            break;
          }
          case 50: {
            trendbar_.AddEntriesFrom(input, _repeated_trendbar_codec);
            break;
          }
          case 56: {
            SessionClose = input.ReadUInt64();
            break;
          }
          case 64: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            SymbolId = input.ReadInt64();
            break;
          }
          case 32: {
            Bid = input.ReadUInt64();
            break;
          }
          case 40: {
            Ask = input.ReadUInt64();
            break;
          }
          case 50: {
            trendbar_.AddEntriesFrom(ref input, _repeated_trendbar_codec);
            break;
          }
          case 56: {
            SessionClose = input.ReadUInt64();
            break;
          }
          case 64: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent when the structure of depth of market is changed. Requires subscription on the depth of markets for the symbol, see SubscribeDepthQuotesReq. 
  /// </summary>
  public sealed partial class DepthEvent : pb::IMessage<DepthEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DepthEvent> _parser = new pb::MessageParser<DepthEvent>(() => new DepthEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DepthEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[61]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DepthEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DepthEvent(DepthEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      symbolId_ = other.symbolId_;
      newQuotes_ = other.newQuotes_.Clone();
      deletedQuotes_ = other.deletedQuotes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DepthEvent Clone() {
      return new DepthEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaDepthEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// Unique identifier of the trader's account. Used to match responses to trader's accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "symbolId" field.</summary>
    public const int SymbolIdFieldNumber = 3;
    private readonly static ulong SymbolIdDefaultValue = 0UL;
  
    private ulong symbolId_;
    /// <summary>
    /// Unique identifier of the Symbol in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SymbolId {
      get { if ((_hasBits0 & 4) != 0) { return symbolId_; } else { return SymbolIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        symbolId_ = value;
      }
    }
    /// <summary>Gets whether the "symbolId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSymbolId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "symbolId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSymbolId() {
      _hasBits0 &= ~4;
    }
  
    /// <summary>Field number for the "newQuotes" field.</summary>
    public const int NewQuotesFieldNumber = 4;
    private static readonly pb::FieldCodec<DepthQuote> _repeated_newQuotes_codec
        = pb::FieldCodec.ForMessage(34, DepthQuote.Parser);
    private readonly pbc::RepeatedField<DepthQuote> newQuotes_ = new pbc::RepeatedField<DepthQuote>();
    /// <summary>
    /// The list of changes in the depth of market quotes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<DepthQuote> NewQuotes {
      get { return newQuotes_; }
    }
  
    /// <summary>Field number for the "deletedQuotes" field.</summary>
    public const int DeletedQuotesFieldNumber = 5;
    private static readonly pb::FieldCodec<ulong> _repeated_deletedQuotes_codec
        = pb::FieldCodec.ForUInt64(42);
    private readonly pbc::RepeatedField<ulong> deletedQuotes_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// The list of quotes to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> DeletedQuotes {
      get { return deletedQuotes_; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DepthEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DepthEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (SymbolId != other.SymbolId) return false;
      if(!newQuotes_.Equals(other.newQuotes_)) return false;
      if(!deletedQuotes_.Equals(other.deletedQuotes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (HasSymbolId) hash ^= SymbolId.GetHashCode();
      hash ^= newQuotes_.GetHashCode();
      hash ^= deletedQuotes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        output.WriteRawTag(24);
        output.WriteUInt64(SymbolId);
      }
      newQuotes_.WriteTo(output, _repeated_newQuotes_codec);
      deletedQuotes_.WriteTo(output, _repeated_deletedQuotes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        output.WriteRawTag(24);
        output.WriteUInt64(SymbolId);
      }
      newQuotes_.WriteTo(ref output, _repeated_newQuotes_codec);
      deletedQuotes_.WriteTo(ref output, _repeated_deletedQuotes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (HasSymbolId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SymbolId);
      }
      size += newQuotes_.CalculateSize(_repeated_newQuotes_codec);
      size += deletedQuotes_.CalculateSize(_repeated_deletedQuotes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DepthEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      newQuotes_.Add(other.newQuotes_);
      deletedQuotes_.Add(other.deletedQuotes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            SymbolId = input.ReadUInt64();
            break;
          }
          case 34: {
            newQuotes_.AddEntriesFrom(input, _repeated_newQuotes_codec);
            break;
          }
          case 42:
          case 40: {
            deletedQuotes_.AddEntriesFrom(input, _repeated_deletedQuotes_codec);
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 24: {
            SymbolId = input.ReadUInt64();
            break;
          }
          case 34: {
            newQuotes_.AddEntriesFrom(ref input, _repeated_newQuotes_codec);
            break;
          }
          case 42:
          case 40: {
            deletedQuotes_.AddEntriesFrom(ref input, _repeated_deletedQuotes_codec);
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent when the established session for an account is dropped on the server side. A new session must be authorized for the account.  
  /// </summary>
  public sealed partial class AccountDisconnectEvent : pb::IMessage<AccountDisconnectEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountDisconnectEvent> _parser = new pb::MessageParser<AccountDisconnectEvent>(() => new AccountDisconnectEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccountDisconnectEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[70]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountDisconnectEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountDisconnectEvent(AccountDisconnectEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountDisconnectEvent Clone() {
      return new AccountDisconnectEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaAccountDisconnectEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    /// <summary>
    /// The unique identifier of the trader's account in cTrader platform.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccountDisconnectEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccountDisconnectEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccountDisconnectEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent when a Margin Call threshold configuration is updated. 
  /// </summary>
  public sealed partial class MarginCallUpdateEvent : pb::IMessage<MarginCallUpdateEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarginCallUpdateEvent> _parser = new pb::MessageParser<MarginCallUpdateEvent>(() => new MarginCallUpdateEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarginCallUpdateEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[75]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallUpdateEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallUpdateEvent(MarginCallUpdateEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      marginCall_ = other.marginCall_ != null ? other.marginCall_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallUpdateEvent Clone() {
      return new MarginCallUpdateEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaMarginCallUpdateEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "marginCall" field.</summary>
    public const int MarginCallFieldNumber = 3;
    private Model.MarginCall marginCall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Model.MarginCall MarginCall {
      get { return marginCall_; }
      set {
        marginCall_ = value;
      }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarginCallUpdateEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarginCallUpdateEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (!object.Equals(MarginCall, other.MarginCall)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (marginCall_ != null) hash ^= MarginCall.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (marginCall_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MarginCall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (marginCall_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MarginCall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (marginCall_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MarginCall);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarginCallUpdateEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.marginCall_ != null) {
        if (marginCall_ == null) {
          MarginCall = new Model.MarginCall();
        }
        MarginCall.MergeFrom(other.MarginCall);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26: {
            if (marginCall_ == null) {
              MarginCall = new Model.MarginCall();
            }
            input.ReadMessage(MarginCall);
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26: {
            if (marginCall_ == null) {
              MarginCall = new Model.MarginCall();
            }
            input.ReadMessage(MarginCall);
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  /// <summary>
  ///* Event that is sent when account margin level reaches target marginLevelThreshold. Event is sent no more than once every 10 minutes to avoid spamming. 
  /// </summary>
  public sealed partial class MarginCallTriggerEvent : pb::IMessage<MarginCallTriggerEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarginCallTriggerEvent> _parser = new pb::MessageParser<MarginCallTriggerEvent>(() => new MarginCallTriggerEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarginCallTriggerEvent> Parser { get { return _parser; } }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return OpenApiMessagesReflection.Descriptor.MessageTypes[76]; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallTriggerEvent() {
      OnConstruction();
    }
  
    partial void OnConstruction();
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallTriggerEvent(MarginCallTriggerEvent other) : this() {
      _hasBits0 = other._hasBits0;
      payloadType_ = other.payloadType_;
      ctidTraderAccountId_ = other.ctidTraderAccountId_;
      marginCall_ = other.marginCall_ != null ? other.marginCall_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarginCallTriggerEvent Clone() {
      return new MarginCallTriggerEvent(this);
    }
  
    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 1;
    private readonly static Enums.PayloadType PayloadTypeDefaultValue = Enums.PayloadType.ProtoOaMarginCallTriggerEvent;
  
    private Enums.PayloadType payloadType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Enums.PayloadType PayloadType {
      get { if ((_hasBits0 & 1) != 0) { return payloadType_; } else { return PayloadTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        payloadType_ = value;
      }
    }
    /// <summary>Gets whether the "payloadType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayloadType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "payloadType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadType() {
      _hasBits0 &= ~1;
    }
  
    /// <summary>Field number for the "ctidTraderAccountId" field.</summary>
    public const int CtidTraderAccountIdFieldNumber = 2;
    private readonly static long CtidTraderAccountIdDefaultValue = 0L;
  
    private long ctidTraderAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CtidTraderAccountId {
      get { if ((_hasBits0 & 2) != 0) { return ctidTraderAccountId_; } else { return CtidTraderAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ctidTraderAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "ctidTraderAccountId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCtidTraderAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ctidTraderAccountId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCtidTraderAccountId() {
      _hasBits0 &= ~2;
    }
  
    /// <summary>Field number for the "marginCall" field.</summary>
    public const int MarginCallFieldNumber = 3;
    private Model.MarginCall marginCall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Model.MarginCall MarginCall {
      get { return marginCall_; }
      set {
        marginCall_ = value;
      }
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarginCallTriggerEvent);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarginCallTriggerEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayloadType != other.PayloadType) return false;
      if (CtidTraderAccountId != other.CtidTraderAccountId) return false;
      if (!object.Equals(MarginCall, other.MarginCall)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPayloadType) hash ^= PayloadType.GetHashCode();
      if (HasCtidTraderAccountId) hash ^= CtidTraderAccountId.GetHashCode();
      if (marginCall_ != null) hash ^= MarginCall.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (marginCall_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MarginCall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPayloadType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        output.WriteRawTag(16);
        output.WriteInt64(CtidTraderAccountId);
      }
      if (marginCall_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MarginCall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPayloadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadType);
      }
      if (HasCtidTraderAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CtidTraderAccountId);
      }
      if (marginCall_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MarginCall);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarginCallTriggerEvent other) {
      if (other == null) {
        return;
      }
      if (other.HasPayloadType) {
        PayloadType = other.PayloadType;
      }
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.marginCall_ != null) {
        if (marginCall_ == null) {
          MarginCall = new Model.MarginCall();
        }
        MarginCall.MergeFrom(other.MarginCall);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
  
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26: {
            if (marginCall_ == null) {
              MarginCall = new Model.MarginCall();
            }
            input.ReadMessage(MarginCall);
            break;
          }
        }
      }
    #endif
    }
  
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PayloadType = (Enums.PayloadType) input.ReadEnum();
            break;
          }
          case 16: {
            CtidTraderAccountId = input.ReadInt64();
            break;
          }
          case 26: {
            if (marginCall_ == null) {
              MarginCall = new Model.MarginCall();
            }
            input.ReadMessage(MarginCall);
            break;
          }
        }
      }
    }
    #endif
  
  }
  

  #endregion
  
  
  #endregion Designer generated code
}